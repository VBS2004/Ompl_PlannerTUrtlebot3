[0.000000] (-) TimerEvent: {}
[0.000164] (my_robot_motion_planning) JobQueued: {'identifier': 'my_robot_motion_planning', 'dependencies': OrderedDict()}
[0.000297] (my_robot_motion_planning) JobStarted: {'identifier': 'my_robot_motion_planning'}
[0.030502] (my_robot_motion_planning) JobProgress: {'identifier': 'my_robot_motion_planning', 'progress': 'cmake'}
[0.030545] (my_robot_motion_planning) JobProgress: {'identifier': 'my_robot_motion_planning', 'progress': 'build'}
[0.030939] (my_robot_motion_planning) Command: {'cmd': ['/usr/bin/cmake', '--build', '/root/ros2_ws/build/my_robot_motion_planning', '--', '-j12', '-l12'], 'cwd': '/root/ros2_ws/build/my_robot_motion_planning', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_IN:en'), ('USER', 'root'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/root'), ('CHROME_DESKTOP', 'tabby.desktop'), ('OLDPWD', '/root'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/tabby.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1978'), ('SYSTEMD_EXEC_PID', '2411'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/0/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '4471'), ('DEBUGINFOD_URLS', ''), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('TABBY_PLUGINS', ''), ('LOGNAME', 'root'), ('JOURNAL_STREAM', '8:24013'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'root'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/vbs-Victus-by-HP-Gaming-Laptop-15-fa0xxx:@/tmp/.ICE-unix/2380,unix/vbs-Victus-by-HP-Gaming-Laptop-15-fa0xxx:/tmp/.ICE-unix/2380'), ('INVOCATION_ID', '41dbbc14c51f45a9b9486303333bf212'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/0'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/0/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'Tabby'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/0/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('NODE_PATH', 'undefined:/opt/Tabby/resources/builtin-plugins:/opt/Tabby/resources/app.asar/node_modules:/root/.config/tabby/plugins/node_modules'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/0/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('TABBY_CONFIG_DIRECTORY', '/root/.config/tabby'), ('PWD', '/root/ros2_ws/build/my_robot_motion_planning'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.046197] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.6 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.099975] (-) TimerEvent: {}
[0.128457] (my_robot_motion_planning) StdoutLine: {'line': b'-- Override CMake install command with custom implementation using symlinks instead of copying resources\n'}
[0.132243] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rclcpp: 16.0.7 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.149367] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.150678] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.153957] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.160056] (my_robot_motion_planning) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.168655] (my_robot_motion_planning) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.200135] (-) TimerEvent: {}
[0.200843] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[0.201544] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.5 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[0.272542] (my_robot_motion_planning) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.300311] (-) TimerEvent: {}
[0.362892] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found nav_msgs: 4.2.3 (/opt/ros/humble/share/nav_msgs/cmake)\n'}
[0.400478] (-) TimerEvent: {}
[0.436066] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found tf2: 0.25.5 (/opt/ros/humble/share/tf2/cmake)\n'}
[0.440502] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found tf2_geometry_msgs: 0.25.5 (/opt/ros/humble/share/tf2_geometry_msgs/cmake)\n'}
[0.442775] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)\n'}
[0.443564] (my_robot_motion_planning) StdoutLine: {'line': b'-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target\n'}
[0.500662] (-) TimerEvent: {}
[0.600912] (-) TimerEvent: {}
[0.642894] (my_robot_motion_planning) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.12.9 (/opt/ros/humble/share/ament_lint_auto/cmake)\n'}
[0.701095] (-) TimerEvent: {}
[0.705667] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[0.706510] (my_robot_motion_planning) StdoutLine: {'line': b'-- Configured cppcheck include dirs: \n'}
[0.706622] (my_robot_motion_planning) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[0.710636] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[0.718292] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[0.722113] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257\n"}
[0.746556] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[0.746644] (my_robot_motion_planning) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[0.749803] (my_robot_motion_planning) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[0.750352] (my_robot_motion_planning) StdoutLine: {'line': b'-- Configuring done\n'}
[0.801204] (-) TimerEvent: {}
[0.820583] (my_robot_motion_planning) StdoutLine: {'line': b'-- Generating done\n'}
[0.821706] (my_robot_motion_planning) StdoutLine: {'line': b'-- Build files have been written to: /root/ros2_ws/build/my_robot_motion_planning\n'}
[0.845787] (my_robot_motion_planning) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target my_motion_planner\x1b[0m\n'}
[0.863933] (my_robot_motion_planning) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/my_motion_planner.dir/src/mp.cpp.o\x1b[0m\n'}
[0.901332] (-) TimerEvent: {}
[1.001643] (-) TimerEvent: {}
[1.007065] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:43\x1b[m\x1b[K,\n'}
[1.007336] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[1.007409] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[1.007472] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[1.007532] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/GenericParam.h:152:104:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++11 requires at least one argument for the "..." in a variadic macro\n'}
[1.007596] (my_robot_motion_planning) StderrLine: {'line': b'  152 |                     OMPL_ERROR("At least one setter or getter function must be specified for parameter"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.007657] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.045596] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[1.045755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:110:83:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++11 requires at least one argument for the "..." in a variadic macro\n'}
[1.045823] (my_robot_motion_planning) StderrLine: {'line': b'  110 |                     OMPL_WARN("Calling setNearestNeighbors will clear all states."\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.045883] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.101867] (-) TimerEvent: {}
[1.182274] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/chrono:42\x1b[m\x1b[K,\n'}
[1.182454] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:32\x1b[m\x1b[K,\n'}
[1.182526] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[1.182653] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[1.182717] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:60:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclock_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.182782] (my_robot_motion_planning) StderrLine: {'line': b'   60 |   using ::\x1b[01;31m\x1b[Kclock_t\x1b[m\x1b[K;\n'}
[1.182843] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.182902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:61:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.182972] (my_robot_motion_planning) StderrLine: {'line': b'   61 |   using ::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K;\n'}
[1.183032] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.183091] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:62:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183150] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   using ::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K;\n'}
[1.183208] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.183266] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:64:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclock\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183324] (my_robot_motion_planning) StderrLine: {'line': b'   64 |   using ::\x1b[01;31m\x1b[Kclock\x1b[m\x1b[K;\n'}
[1.183381] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.183439] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:65:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdifftime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183497] (my_robot_motion_planning) StderrLine: {'line': b'   65 |   using ::\x1b[01;31m\x1b[Kdifftime\x1b[m\x1b[K;\n'}
[1.183554] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.183609] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:66:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmktime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183664] (my_robot_motion_planning) StderrLine: {'line': b'   66 |   using ::\x1b[01;31m\x1b[Kmktime\x1b[m\x1b[K;\n'}
[1.183718] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.183774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:67:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183829] (my_robot_motion_planning) StderrLine: {'line': b'   67 |   using ::\x1b[01;31m\x1b[Ktime\x1b[m\x1b[K;\n'}
[1.183884] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.183939] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:68:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kasctime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.183998] (my_robot_motion_planning) StderrLine: {'line': b'   68 |   using ::\x1b[01;31m\x1b[Kasctime\x1b[m\x1b[K;\n'}
[1.184053] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.184109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:69:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kctime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.184164] (my_robot_motion_planning) StderrLine: {'line': b'   69 |   using ::\x1b[01;31m\x1b[Kctime\x1b[m\x1b[K;\n'}
[1.184220] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.184275] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:70:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgmtime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.184330] (my_robot_motion_planning) StderrLine: {'line': b'   70 |   using ::\x1b[01;31m\x1b[Kgmtime\x1b[m\x1b[K;\n'}
[1.184385] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.184440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:71:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klocaltime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.184496] (my_robot_motion_planning) StderrLine: {'line': b'   71 |   using ::\x1b[01;31m\x1b[Klocaltime\x1b[m\x1b[K;\n'}
[1.184550] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.184609] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:72:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstrftime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.184664] (my_robot_motion_planning) StderrLine: {'line': b'   72 |   using ::\x1b[01;31m\x1b[Kstrftime\x1b[m\x1b[K;\n'}
[1.184719] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.185482] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:32\x1b[m\x1b[K,\n'}
[1.185628] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[1.185693] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[1.185753] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/chrono:1142:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.185815] (my_robot_motion_planning) StderrLine: {'line': b' 1142 |       static std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K\n'}
[1.185872] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.185929] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Ksize_t\x1b[m\x1b[K\n'}
[1.185986] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/chrono:1150:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::time_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[1.186052] (my_robot_motion_planning) StderrLine: {'line': b' 1150 |       from_time_t(std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K __t) noexcept\n'}
[1.186112] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.202054] (-) TimerEvent: {}
[1.302405] (-) TimerEvent: {}
[1.402734] (-) TimerEvent: {}
[1.503080] (-) TimerEvent: {}
[1.603401] (-) TimerEvent: {}
[1.637045] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:42\x1b[m\x1b[K,\n'}
[1.637214] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[1.637382] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[1.637450] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[1.637512] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[1.637744] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[1.637837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:343:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.637901] (my_robot_motion_planning) StderrLine: {'line': b'  343 |       const std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* _M_tmb;\n'}
[1.637960] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.638033] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:358:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.638092] (my_robot_motion_planning) StderrLine: {'line': b'  358 |     put_time(const std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* __tmb, const _CharT* __fmt)\n'}
[1.638149] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.638205] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:398:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.638263] (my_robot_motion_planning) StderrLine: {'line': b'  398 |       std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K*      _M_tmb;\n'}
[1.638321] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.638505] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.638594] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* __tmb, const _CharT* __fmt)\n'}
[1.638658] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.638718] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/cwchar:44\x1b[m\x1b[K,\n'}
[1.638776] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/postypes.h:40\x1b[m\x1b[K,\n'}
[1.638832] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:40\x1b[m\x1b[K,\n'}
[1.638898] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[1.638954] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[1.639012] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[1.639069] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[1.639125] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/wchar.h:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[1.639189] (my_robot_motion_planning) StderrLine: {'line': b'   83 | struct \x1b[01;36m\x1b[Ktm\x1b[m\x1b[K;\n'}
[1.639246] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~\x1b[m\x1b[K\n'}
[1.640971] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:42\x1b[m\x1b[K,\n'}
[1.641121] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[1.641187] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[1.641248] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[1.641308] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[1.641365] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[1.641422] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K__tmb\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.641489] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* \x1b[01;31m\x1b[K__tmb\x1b[m\x1b[K, const _CharT* __fmt)\n'}
[1.641545] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.641601] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[Kconst\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.641658] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* __tmb, \x1b[01;31m\x1b[Kconst\x1b[m\x1b[K _CharT* __fmt)\n'}
[1.641714] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.641770] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K{\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.641834] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* __tmb, const _CharT* __fmt)\n'}
[1.641891] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.641947] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.642002] (my_robot_motion_planning) StderrLine: {'line': b'  414 |     \x1b[32m\x1b[K{\x1b[m\x1b[K return { __tmb, __fmt }; }\n'}
[1.642062] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[32m\x1b[K~\x1b[m\x1b[K                                             \n'}
[1.645105] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[1.645253] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[1.645318] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[1.645379] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[1.645436] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[1.645576] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::string ompl::time::as_string(const point&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.645652] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:80:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.645717] (my_robot_motion_planning) StderrLine: {'line': b'   80 |             std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K pt = std::chrono::system_clock::to_time_t(p);\n'}
[1.645776] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.645843] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.645900] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:82:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klocaltime\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Klocale\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.645959] (my_robot_motion_planning) StderrLine: {'line': b'   82 |             ss << std::put_time(std::\x1b[01;31m\x1b[Klocaltime\x1b[m\x1b[K(&pt), "%F %T");\n'}
[1.646015] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.646071] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Klocale\x1b[m\x1b[K\n'}
[1.647307] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:82:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpt\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.647455] (my_robot_motion_planning) StderrLine: {'line': b'   82 |             ss << std::put_time(std::localtime(&\x1b[01;31m\x1b[Kpt\x1b[m\x1b[K), "%F %T");\n'}
[1.647521] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.647581] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[32m\x1b[Kp\x1b[m\x1b[K\n'}
[1.647639] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:78:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.647709] (my_robot_motion_planning) StderrLine: {'line': b'   78 |         inline std::string as_string(\x1b[01;35m\x1b[Kconst point &p\x1b[m\x1b[K)\n'}
[1.647766] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[1.703617] (-) TimerEvent: {}
[1.747604] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/core/utility.hpp:62\x1b[m\x1b[K,\n'}
[1.747765] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/core.hpp:3392\x1b[m\x1b[K,\n'}
[1.747832] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[1.747893] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:7\x1b[m\x1b[K:\n'}
[1.747953] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool std::__timed_mutex_impl<_Derived>::_M_try_lock_until(const std::chrono::time_point<std::chrono::_V2::system_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.748014] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:164:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.748075] (my_robot_motion_planning) StderrLine: {'line': b'  164 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[1.748132] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.748293] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.748365] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool std::__timed_mutex_impl<_Derived>::_M_try_lock_until(const std::chrono::time_point<std::chrono::_V2::steady_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.748435] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:181:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.748497] (my_robot_motion_planning) StderrLine: {'line': b'  181 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[1.748554] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.748611] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.755363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:185:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.755513] (my_robot_motion_planning) StderrLine: {'line': b'  185 |           return static_cast<_Derived*>(this)->_M_clocklock(\x1b[01;31m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K,\n'}
[1.755579] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.803825] (-) TimerEvent: {}
[1.904196] (-) TimerEvent: {}
[2.004590] (-) TimerEvent: {}
[2.104829] (-) TimerEvent: {}
[2.157832] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:39\x1b[m\x1b[K,\n'}
[2.158010] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[2.158078] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.158140] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.158206] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::cv_status std::condition_variable::__wait_until_impl(std::unique_lock<std::mutex>&, const std::chrono::time_point<std::chrono::_V2::steady_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.158268] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:197:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.158329] (my_robot_motion_planning) StderrLine: {'line': b'  197 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[2.158391] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.158447] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[2.165906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:201:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.166061] (my_robot_motion_planning) StderrLine: {'line': b'  201 |         _M_cond.wait_until(*__lock.mutex(), \x1b[01;31m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K, __ts);\n'}
[2.166128] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.166266] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::cv_status std::condition_variable::__wait_until_impl(std::unique_lock<std::mutex>&, const std::chrono::time_point<std::chrono::_V2::system_clock, _Dur2>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.166354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:218:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.166421] (my_robot_motion_planning) StderrLine: {'line': b'  218 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[2.166480] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.166538] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[2.197773] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/thread:44\x1b[m\x1b[K,\n'}
[2.197936] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:22\x1b[m\x1b[K,\n'}
[2.198001] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.198071] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.198130] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.198187] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid std::this_thread::sleep_for(const std::chrono::duration<_Rep1, _Period1>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.198246] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:79:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.198307] (my_robot_motion_planning) StderrLine: {'line': b'   79 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.count()),\n'}
[2.198364] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.198424] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[2.201721] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:82:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K::nanosleep\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[2.201879] (my_robot_motion_planning) StderrLine: {'line': b'   82 |         while (::\x1b[01;31m\x1b[Knanosleep\x1b[m\x1b[K(&__ts, &__ts) == -1 && errno == EINTR)\n'}
[2.201943] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.204909] (-) TimerEvent: {}
[2.249527] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__struct.hpp:14\x1b[m\x1b[K,\n'}
[2.249685] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/duration.hpp:7\x1b[m\x1b[K,\n'}
[2.249751] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/duration.hpp:20\x1b[m\x1b[K,\n'}
[2.249811] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos.hpp:20\x1b[m\x1b[K,\n'}
[2.249869] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_graph_interface.hpp:32\x1b[m\x1b[K,\n'}
[2.249927] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[2.249983] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.250040] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.250096] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.250152] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.250208] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.250263] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.250331] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.250387] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.250443] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.250499] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.250557] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.250618] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:477:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kemplace_back\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.250679] (my_robot_motion_planning) StderrLine: {'line': b'  477 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.250736] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.250998] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:477:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.251092] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/duration.hpp:8\x1b[m\x1b[K,\n'}
[2.251154] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/duration.hpp:20\x1b[m\x1b[K,\n'}
[2.251212] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos.hpp:20\x1b[m\x1b[K,\n'}
[2.251270] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_graph_interface.hpp:32\x1b[m\x1b[K,\n'}
[2.251327] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[2.251385] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.251441] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.251497] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.251552] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.251608] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.251663] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.251719] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.251785] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.251844] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.251899] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.251954] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.252016] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.252072] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.252127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.252184] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.252241] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::builtin_interfaces::msg::Duration>()\n'}
[2.252296] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.252351] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.278517] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.278676] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.278740] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.278800] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.278858] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.278915] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.278972] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.279030] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.279086] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.279153] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.279213] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:81:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.279272] (my_robot_motion_planning) StderrLine: {'line': b'   81 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K get() {return this->future.get();}\n'}
[2.279328] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.279384] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:81:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.285006] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.285165] (my_robot_motion_planning) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[2.285230] (my_robot_motion_planning) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.285290] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.285349] (my_robot_motion_planning) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[2.285406] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.285464] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:794:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[2.285521] (my_robot_motion_planning) StderrLine: {'line': b'  794 |   async_send_request_impl(const Request & request, \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K value)\n'}
[2.285587] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.285644] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.285701] (my_robot_motion_planning) StderrLine: {'line': b'  808 |   std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[2.285757] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.285813] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.285870] (my_robot_motion_planning) StderrLine: {'line': b'  808 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::optional<CallbackInfoVariant>\n'}
[2.285925] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.295321] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.295488] (my_robot_motion_planning) StderrLine: {'line': b'  830 |       \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>>\n'}
[2.295552] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.295612] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[2.295670] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[2.295727] (my_robot_motion_planning) StderrLine: {'line': b'  830 |       CallbackInfoVariant\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[2.295783] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.295839] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 5 is invalid\n'}
[2.296686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Client<ServiceT>::handle_response(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.296940] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.296990] (my_robot_motion_planning) StderrLine: {'line': b'  550 |     std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[2.297019] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.297045] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.304967] (-) TimerEvent: {}
[2.306331] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.306452] (my_robot_motion_planning) StderrLine: {'line': b'  550 |     std::optional<\x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>\n'}
[2.306517] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.316984] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:551:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional_pending_request\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_pending_request\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.317196] (my_robot_motion_planning) StderrLine: {'line': b'  551 |     \x1b[01;31m\x1b[Koptional_pending_request\x1b[m\x1b[K = this->get_and_erase_pending_request(request_header->sequence_number);\n'}
[2.317275] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.317336] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[32m\x1b[Kremove_pending_request\x1b[m\x1b[K\n'}
[2.319282] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.319487] (my_robot_motion_planning) StderrLine: {'line': b'  558 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<Promise>(value)) {\n'}
[2.319554] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.319617] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.319678] (my_robot_motion_planning) StderrLine: {'line': b'  558 |     if (std::holds_alternative<Promise\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[2.319740] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.321059] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.321185] (my_robot_motion_planning) StderrLine: {'line': b'  561 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackTypeValueVariant>(value)) {\n'}
[2.321251] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.321311] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.321380] (my_robot_motion_planning) StderrLine: {'line': b'  561 |     } else if (std::holds_alternative<CallbackTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[2.321438] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.322212] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.322457] (my_robot_motion_planning) StderrLine: {'line': b'  568 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackWithRequestTypeValueVariant>(value)) {\n'}
[2.322503] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.322533] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.322561] (my_robot_motion_planning) StderrLine: {'line': b'  568 |     } else if (std::holds_alternative<CallbackWithRequestTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[2.322629] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.322656] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Client<ServiceT>::remove_pending_request(int64_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.322720] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:702:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.322748] (my_robot_motion_planning) StderrLine: {'line': b'  702 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[2.322773] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.322797] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:703:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.322824] (my_robot_motion_planning) StderrLine: {'line': b'  703 |     return pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(request_id) != 0u;\n'}
[2.322847] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.322870] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_pending_requests()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.322895] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:749:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.322919] (my_robot_motion_planning) StderrLine: {'line': b'  749 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[2.322943] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.322966] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:750:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.322992] (my_robot_motion_planning) StderrLine: {'line': b'  750 |     auto ret = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[2.323017] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323043] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:751:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kclear\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323078] (my_robot_motion_planning) StderrLine: {'line': b'  751 |     pending_requests_.\x1b[01;31m\x1b[Kclear\x1b[m\x1b[K();\n'}
[2.323103] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.323128] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_requests_older_than(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> > >, std::vector<long int, AllocatorT>*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.323154] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:768:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323182] (my_robot_motion_planning) StderrLine: {'line': b'  768 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[2.323207] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.323231] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:769:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323337] (my_robot_motion_planning) StderrLine: {'line': b'  769 |     auto old_size = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[2.323370] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323399] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323427] (my_robot_motion_planning) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.\x1b[01;31m\x1b[Kbegin\x1b[m\x1b[K(), last = pending_requests_.end(); it != last; ) {\n'}
[2.323453] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.323478] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.323504] (my_robot_motion_planning) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.begin(), last = pending_requests_.end(); it != \x1b[01;31m\x1b[Klast\x1b[m\x1b[K; ) {\n'}
[2.323530] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323555] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.323634] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.323660] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.323685] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.323709] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.323734] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.323759] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:38:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323785] (my_robot_motion_planning) StderrLine: {'line': b'   38 | static const symbolic::SymbolExpr<internal::symbolic_last_tag> \x1b[01;36m\x1b[Klast\x1b[m\x1b[K; // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[2.323810] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323859] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.323881] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.323905] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.323928] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.323950] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.323973] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:180:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323996] (my_robot_motion_planning) StderrLine: {'line': b'  180 |   EIGEN_DEPRECATED static const last_t \x1b[01;36m\x1b[Klast\x1b[m\x1b[K = Eigen::last;   // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[2.324020] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.324042] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.324064] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.324086] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.324114] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.324136] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.324158] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:38:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.324180] (my_robot_motion_planning) StderrLine: {'line': b'   38 | static const symbolic::SymbolExpr<internal::symbolic_last_tag> \x1b[01;36m\x1b[Klast\x1b[m\x1b[K; // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[2.324202] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.324227] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.324249] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.324272] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.324293] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.324314] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.324335] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.324359] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.324381] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.324404] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.324426] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.324448] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:775:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.324474] (my_robot_motion_planning) StderrLine: {'line': b'  775 |         it = pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(it);\n'}
[2.324497] (my_robot_motion_planning) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.324520] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:780:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.324546] (my_robot_motion_planning) StderrLine: {'line': b'  780 |     return old_size - pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[2.324568] (my_robot_motion_planning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.324591] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint64_t rclcpp::Client<ServiceT>::async_send_request_impl(const Request&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.324614] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:802:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ktry_emplace\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.324637] (my_robot_motion_planning) StderrLine: {'line': b'  802 |     pending_requests_.\x1b[01;31m\x1b[Ktry_emplace\x1b[m\x1b[K(\n'}
[2.324660] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.351403] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[2.351536] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[2.351568] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.351594] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.351619] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.351652] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.351675] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.351699] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.351723] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.351746] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.351768] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.351792] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.351816] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.351841] (my_robot_motion_planning) StderrLine: {'line': b'   47 | struct can_be_nullptr<T, std::\x1b[01;31m\x1b[Kvoid_t\x1b[m\x1b[K<\n'}
[2.351866] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.351889] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.351913] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.351936] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.351958] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:48:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[2.351980] (my_robot_motion_planning) StderrLine: {'line': b'   48 |     decltype(std::declval<T>() == nullptr), decltype(std::declval<T &>() = nullptr)\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[2.352004] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.352025] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.352048] (my_robot_motion_planning) StderrLine: {'line': b'   67 |     typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<!detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[2.352070] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.352092] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.352115] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.352137] (my_robot_motion_planning) StderrLine: {'line': b'   67 |     typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K!detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[2.352159] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.352180] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.352204] (my_robot_motion_planning) StderrLine: {'line': b'  109 |     typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[2.352226] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.352248] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.352271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.352294] (my_robot_motion_planning) StderrLine: {'line': b'  109 |     typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[Kdetail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[2.352317] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.352339] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:111:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.352366] (my_robot_motion_planning) StderrLine: {'line': b'  111 |   \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT && callback)\n'}
[2.352388] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.352412] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:69:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.352437] (my_robot_motion_planning) StderrLine: {'line': b'   69 |   \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT && callback)\n'}
[2.352465] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.352489] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.352517] (my_robot_motion_planning) StderrLine: {'line': b'  226 |   std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[2.352541] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.352565] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.352589] (my_robot_motion_planning) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[2.352661] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.352686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>::AnyServiceCallback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.352711] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kclass \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>\x1b[m\x1b[K\xe2\x80\x99 does not have any field named \xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.352741] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   : \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K(std::monostate{})\n'}
[2.352767] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.352791] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.352815] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   : callback_(std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K{})\n'}
[2.352837] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.356721] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.356819] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.356852] (my_robot_motion_planning) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[2.356879] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.356904] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.356928] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.356952] (my_robot_motion_planning) StderrLine: {'line': b'   78 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.356975] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.360301] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.360384] (my_robot_motion_planning) StderrLine: {'line': b'   85 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[2.360415] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.360439] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.360463] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.360487] (my_robot_motion_planning) StderrLine: {'line': b'   85 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.360511] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.363875] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.363953] (my_robot_motion_planning) StderrLine: {'line': b'   92 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[2.363983] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.364009] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.364034] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.364060] (my_robot_motion_planning) StderrLine: {'line': b'   92 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.364083] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.367399] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.367484] (my_robot_motion_planning) StderrLine: {'line': b'   99 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[2.367516] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.367542] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.367566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.367592] (my_robot_motion_planning) StderrLine: {'line': b'   99 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.367617] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.370934] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.371012] (my_robot_motion_planning) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[2.371042] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.371068] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.374492] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.374570] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.374602] (my_robot_motion_planning) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[2.374631] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.374655] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.374679] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.374703] (my_robot_motion_planning) StderrLine: {'line': b'  123 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.374727] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.378007] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.378088] (my_robot_motion_planning) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[2.378119] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.378145] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.378169] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.378194] (my_robot_motion_planning) StderrLine: {'line': b'  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.378225] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.381487] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.381572] (my_robot_motion_planning) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[2.381604] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.381630] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.381654] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.381678] (my_robot_motion_planning) StderrLine: {'line': b'  137 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.381701] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.384985] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.385064] (my_robot_motion_planning) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[2.385095] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.385120] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.385150] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.385175] (my_robot_motion_planning) StderrLine: {'line': b'  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[2.385199] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.388450] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.388522] (my_robot_motion_planning) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[2.388558] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.388583] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[2.389600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<typename ServiceT::Response> rclcpp::AnyServiceCallback<ServiceT>::dispatch(const std::shared_ptr<rclcpp::Service<ServiceT> >&, const std::shared_ptr<rmw_request_id_s>&, std::shared_ptr<typename ServiceT::Request>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.389669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.389705] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<std::monostate>(callback_)) {\n'}
[2.389731] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.390453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.390520] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K>(callback_)) {\n'}
[2.390550] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.395212] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.395285] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::monostate>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[2.395315] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.396244] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.396314] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallback>(callback_)) {\n'}
[2.396344] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.396369] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.396395] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[2.396418] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.400955] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.401033] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[2.401065] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.402182] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.402310] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallbackWithServiceHandle>(callback_)) {\n'}
[2.402377] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.402438] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.402497] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[2.402559] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.405052] (-) TimerEvent: {}
[2.407130] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.407278] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[2.407342] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.408403] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.408491] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrCallback>(callback_)) {\n'}
[2.408557] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.408616] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.408686] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[2.408749] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.414207] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.414355] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[2.414421] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.415590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.415742] (my_robot_motion_planning) StderrLine: {'line': b'  181 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrWithRequestHeaderCallback>(callback_)) {\n'}
[2.415821] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.415883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.415942] (my_robot_motion_planning) StderrLine: {'line': b'  181 |     } else if (std::holds_alternative<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[2.415999] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.416056] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.416114] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.416173] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.416234] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.416292] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.416352] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:193:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.416420] (my_robot_motion_planning) StderrLine: {'line': b'  193 |       [this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && arg) {\n'}
[2.416478] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.422410] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:198:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.422659] (my_robot_motion_planning) StderrLine: {'line': b'  198 |       }, \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K);\n'}
[2.422731] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.431094] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:30\x1b[m\x1b[K,\n'}
[2.431324] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.431393] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.431467] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.431526] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.431584] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.431826] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.431950] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.432011] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.432073] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.432133] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.432192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.432247] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.432304] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.432368] (my_robot_motion_planning) StderrLine: {'line': b'   74 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.432424] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.432479] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.432541] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.432598] (my_robot_motion_planning) StderrLine: {'line': b'   74 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.432653] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.432708] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.432773] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:80:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.432829] (my_robot_motion_planning) StderrLine: {'line': b'   80 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.432889] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.432945] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.433003] (my_robot_motion_planning) StderrLine: {'line': b'   89 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.433063] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.433118] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.433174] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.433231] (my_robot_motion_planning) StderrLine: {'line': b'   89 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.433286] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.433341] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.433397] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:95:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.433456] (my_robot_motion_planning) StderrLine: {'line': b'   95 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.433511] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.433566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.433623] (my_robot_motion_planning) StderrLine: {'line': b'  105 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.433681] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.433737] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.433793] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.433849] (my_robot_motion_planning) StderrLine: {'line': b'  105 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.433905] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.433960] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.434017] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:111:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.434072] (my_robot_motion_planning) StderrLine: {'line': b'  111 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.434130] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.434185] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.434242] (my_robot_motion_planning) StderrLine: {'line': b'  120 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.434297] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.434352] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.434411] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.434467] (my_robot_motion_planning) StderrLine: {'line': b'  120 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.434526] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.434605] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.434661] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:126:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.434717] (my_robot_motion_planning) StderrLine: {'line': b'  126 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.434773] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.434828] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.434892] (my_robot_motion_planning) StderrLine: {'line': b'  136 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.434948] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.435003] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.435059] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.435116] (my_robot_motion_planning) StderrLine: {'line': b'  136 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.435182] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.435239] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.435330] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:142:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.435386] (my_robot_motion_planning) StderrLine: {'line': b'  142 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.435441] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.435497] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.435553] (my_robot_motion_planning) StderrLine: {'line': b'  151 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.435611] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.435669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.435728] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.435802] (my_robot_motion_planning) StderrLine: {'line': b'  151 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.435857] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.435911] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.435967] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:157:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[2.436022] (my_robot_motion_planning) StderrLine: {'line': b'  157 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.436077] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.436132] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:34\x1b[m\x1b[K,\n'}
[2.436187] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.436242] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.436298] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.436353] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.436409] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.436468] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.436524] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.436580] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.436640] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.436696] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.436759] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.436816] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.436873] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<is_type_adapter<T>::value>>: T {};\n'}
[2.436928] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.436983] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.437039] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437094] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.437150] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 3 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CustomType, class ROSMessageType, class Enable> struct rclcpp::TypeAdapter\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437208] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::enable_if_t<is_type_adapter<T>::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K>>: T {};\n'}
[2.437263] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.437318] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a type, got \xe2\x80\x98\x1b[01m\x1b[K(<expression error> < rclcpp::is_type_adapter<T>::value)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.437431] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::enable_if_t<is_type_adapter<T>::value\x1b[01;31m\x1b[K>>\x1b[m\x1b[K: T {};\n'}
[2.437494] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.437550] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437608] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<ImplicitTypeAdapter<T>::is_specialized::value>>\n'}
[2.437664] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.437719] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.437774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437830] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.437884] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 3 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CustomType, class ROSMessageType, class Enable> struct rclcpp::TypeAdapter\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.437942] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::enable_if_t<ImplicitTypeAdapter<T>::is_specialized::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K>>\n'}
[2.437998] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.438053] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:86:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a type, got \xe2\x80\x98\x1b[01m\x1b[K(<expression error> < typename rclcpp::ImplicitTypeAdapter<CustomType>::is_specialized::value)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.438109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.438165] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::enable_if_t<ImplicitTypeAdapter<T>::is_specialized::value\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[2.438220] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.438277] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.438333] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.438387] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.438445] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.438501] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.438555] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.438610] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.438666] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.438721] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.438776] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.438831] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.438887] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.438944] (my_robot_motion_planning) StderrLine: {'line': b'  171 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[2.439002] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.439060] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.439118] (my_robot_motion_planning) StderrLine: {'line': b'  171 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[2.439177] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.439235] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.439293] (my_robot_motion_planning) StderrLine: {'line': b'  201 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[2.439348] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.439405] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.439498] (my_robot_motion_planning) StderrLine: {'line': b'  201 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[2.439555] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.439611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.439672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.439728] (my_robot_motion_planning) StderrLine: {'line': b'  504 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.439783] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.439838] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.439893] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:505:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.439952] (my_robot_motion_planning) StderrLine: {'line': b'  505 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[2.440007] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.440063] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.440157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:506:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.440215] (my_robot_motion_planning) StderrLine: {'line': b'  506 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[2.440271] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.440326] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[2.440385] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.440442] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[2.440497] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.440588] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.440643] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.440699] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[2.440880] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.440954] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.440984] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.441015] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441043] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441071] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.441195] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441256] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.441291] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[2.441319] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.441345] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.441371] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441397] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[2.441427] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441452] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441477] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[2.441501] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441526] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.441551] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>) {\n'}
[2.441702] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.441737] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.441765] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441793] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.441820] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441846] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441872] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.441896] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441920] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.441951] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>) {\n'}
[2.441975] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.441999] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.442022] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442047] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.442196] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.442231] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442261] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.442292] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.442318] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.442347] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[2.442372] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.442397] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.442421] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442447] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.442472] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.442497] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442522] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.442647] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.442707] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.442742] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[2.442769] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.442795] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.442820] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442846] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.442871] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.442895] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.442920] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.442944] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.442969] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.442999] (my_robot_motion_planning) StderrLine: {'line': b'  529 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[2.443023] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.443046] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.443079] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443105] (my_robot_motion_planning) StderrLine: {'line': b'  529 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.443152] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.443176] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:530:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443201] (my_robot_motion_planning) StderrLine: {'line': b'  530 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.443224] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.443249] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.443273] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[2.443296] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.443320] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.443344] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443368] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.443391] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.443414] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443438] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.443461] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.443597] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.443627] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[2.443651] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.443675] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.443698] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443722] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.443747] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.443772] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.443796] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.443820] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.444070] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.444097] (my_robot_motion_planning) StderrLine: {'line': b'  537 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[2.444122] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.444146] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.444169] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.444193] (my_robot_motion_planning) StderrLine: {'line': b'  537 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.444217] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.444240] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:538:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.444264] (my_robot_motion_planning) StderrLine: {'line': b'  538 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.444287] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.444569] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.444600] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT\n'}
[2.444624] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.444647] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.444672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.444696] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[2.444720] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.444750] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.444776] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[2.444800] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.444989] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.445060] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {\n'}
[2.445094] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.445122] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.445151] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.445179] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.445206] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.445255] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.445289] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.445320] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.445590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.445663] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>) {\n'}
[2.445695] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.445721] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.445746] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.445773] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.445799] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.445823] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.445849] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.445874] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.446088] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.446121] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>) {\n'}
[2.446146] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.446170] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.446194] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.446218] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.446241] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.446267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.446293] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.446317] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.446585] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.446614] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[2.446638] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.446662] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.446685] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.446709] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.446732] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.446755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.446780] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.446804] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.447083] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.447111] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[2.447136] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.447160] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.447184] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.447208] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.447234] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.447257] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.447282] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.447306] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.447574] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.447603] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[2.447628] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.447652] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.447675] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.447701] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.447725] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.447750] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.447775] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.447798] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.448063] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.448095] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.448119] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.448143] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.448166] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.448190] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.448213] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.448238] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.448262] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.448286] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.448552] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.448579] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.448604] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.448627] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.448652] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.448677] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.448700] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.448724] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.448754] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.448778] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.448934] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.448964] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[2.448988] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.449012] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.449035] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.449060] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.449085] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.449108] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.449132] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.449155] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.449504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.449531] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[2.449556] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.449579] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.449603] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.449628] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.449651] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.449674] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.449700] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.449723] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.449983] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.450010] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[2.450033] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.450058] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.450080] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.450105] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.450130] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.450153] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.450177] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.450200] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.450586] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.450612] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[2.450636] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.450660] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.450683] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.450707] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.450731] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.450756] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.450780] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.450804] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.451040] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.451068] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[2.451093] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.451117] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.451141] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.451167] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.451191] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.451215] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.451240] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.451262] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.451525] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.451553] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[2.451578] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.451602] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.451627] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.451651] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.451674] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.451697] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.451721] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.451745] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.452004] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.452033] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.452058] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.452083] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.452106] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.452131] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.452155] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.452178] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.452201] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.452224] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.452492] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.452522] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[2.452547] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.452571] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.452595] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.452619] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.452643] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.452667] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.452692] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.452716] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.452961] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.452993] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.453031] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.453060] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.453085] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.453110] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.453133] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.453156] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.453182] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.453205] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.453573] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.453601] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[2.453627] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.453649] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.453672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.453696] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.453719] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.453743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.453765] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.453788] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.454030] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.454057] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[2.454081] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.454104] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.454127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.454151] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.454175] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.454203] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.454228] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.454252] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.455683] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.455717] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.455742] (my_robot_motion_planning) StderrLine: {'line': b'  604 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.455767] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.455790] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.455814] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:605:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.455840] (my_robot_motion_planning) StderrLine: {'line': b'  605 |       [&serialized_message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[2.455863] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.456251] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.456279] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:606:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.456307] (my_robot_motion_planning) StderrLine: {'line': b'  606 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[2.456331] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.456354] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[2.456774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.456803] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>) {\n'}
[2.456826] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.456849] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.460234] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.460277] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefSerializedMessageCallback>) {\n'}
[2.460301] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.460324] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.460348] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.460371] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.460394] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.460418] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.460441] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.460463] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:610:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpression cannot be used as a function\n'}
[2.460487] (my_robot_motion_planning) StderrLine: {'line': b'  610 |           \x1b[01;31m\x1b[Kcallback(*serialized_message)\x1b[m\x1b[K;\n'}
[2.460510] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.460853] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.460934] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>) {\n'}
[2.460966] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.460992] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.461016] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.461044] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.461069] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.461094] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.461118] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.461141] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.461166] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:612:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpression cannot be used as a function\n'}
[2.461189] (my_robot_motion_planning) StderrLine: {'line': b'  612 |           \x1b[01;31m\x1b[Kcallback(*serialized_message, message_info)\x1b[m\x1b[K;\n'}
[2.461212] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.461282] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.461307] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>) {\n'}
[2.461331] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.461355] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.461379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.461402] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.461424] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.461448] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.461472] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.461495] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.461883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.461913] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[2.461936] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.461960] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.461983] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.462007] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.462030] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.462053] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.462077] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.462100] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.462346] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.462378] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[2.462402] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.462426] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.462448] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.462471] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.462495] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.462517] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.462540] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.462562] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.462837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.462865] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[2.462889] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.462912] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.462935] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.462958] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.462981] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.463005] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.463029] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.463052] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.463335] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.463362] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>)\n'}
[2.463386] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.463409] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.463431] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.463456] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.463478] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.463500] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.463523] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.463545] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.463856] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.463898] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.463921] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.463944] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.463967] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.463990] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.464014] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.464037] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.464060] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.464082] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.464331] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.464360] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.464383] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.464407] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.464432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.464456] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.464478] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.464501] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.464524] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.464547] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.464761] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.464792] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[2.464815] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.464838] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.464860] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.464884] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.464907] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.464929] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.464952] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.464976] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.465367] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.465397] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>||\n'}
[2.465422] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.465445] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.465468] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.465490] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.465513] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.465537] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.465559] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.465581] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.465843] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.465872] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>||\n'}
[2.465895] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.465918] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.465941] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.465964] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.465987] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.466010] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.466032] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.466055] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.466328] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.466356] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>||\n'}
[2.466380] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.466404] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.466425] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.466449] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.466471] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.466493] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.466518] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.466541] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.466809] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.466836] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>||\n'}
[2.466858] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.466880] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.466902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.466924] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.466946] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.466968] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.466991] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.467013] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.467227] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.467256] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[2.467279] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.467303] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.467325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.467348] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.467371] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.467393] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.467417] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.467439] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.467867] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.467893] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[2.467915] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.467938] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.467960] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.467983] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.468005] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.468028] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.468051] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.468073] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.468297] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.468323] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[2.468346] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.468371] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.468394] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.468417] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.468441] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.468464] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.468487] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.468510] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.468789] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.468817] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[2.468839] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.468861] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.468883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.468905] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.468928] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.468950] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.468972] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.468995] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.469215] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.469244] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[2.469268] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.469291] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.469313] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.469335] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.469359] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.469381] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.469404] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.469426] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.469787] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.469814] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[2.469837] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.469860] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.469881] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.469904] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.469926] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.469948] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.469971] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.469994] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.470248] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.470275] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[2.470299] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.470326] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.470348] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.470371] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.470392] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.470415] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.470438] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.470461] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.470743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.470771] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.470794] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.470816] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.470838] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.470860] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.470883] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.470906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.470929] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.470951] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.471229] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.471259] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[2.471284] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.471307] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.471329] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.471352] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.471374] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.471396] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.471419] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.471441] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.471725] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.471752] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[2.471778] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.471801] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.471824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.471847] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.471870] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.471893] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.471916] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.471942] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.472211] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.472238] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[2.472263] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.472288] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.472310] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.472334] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.472356] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.472378] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.472401] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.472424] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.472684] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.472709] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.472732] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.472759] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.472782] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.472806] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.472829] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.472852] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.472876] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.472899] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.473109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.473139] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>||\n'}
[2.473162] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.473185] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.473207] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.473230] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.473252] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.473274] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.473296] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.473318] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.473706] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.473732] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>||\n'}
[2.473755] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.473778] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.473800] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.473825] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.473847] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.473871] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.473894] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.473916] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.474171] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.474199] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>||\n'}
[2.474222] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.474244] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.474267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.474290] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.474312] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.474334] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.474357] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.474379] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.474662] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.474691] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[2.474715] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.474739] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.474764] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.474810] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.474833] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.474856] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.474879] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.474901] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.474923] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::shared_ptr<const typename rclcpp::TypeAdapter<MessageT>::custom_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.474949] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.474972] (my_robot_motion_planning) StderrLine: {'line': b'  683 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.474995] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.475017] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.475040] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:684:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.475065] (my_robot_motion_planning) StderrLine: {'line': b'  684 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[2.475088] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.475329] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.475356] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:685:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.475382] (my_robot_motion_planning) StderrLine: {'line': b'  685 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[2.475406] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.475428] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[2.475803] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.475830] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[2.475854] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.475877] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.479369] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.479404] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[2.479431] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.479454] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.479478] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.479500] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.479522] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.479545] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.479567] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.479914] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.479942] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[2.479969] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.479991] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.480014] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.480037] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[2.480060] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.480083] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.480105] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[2.480128] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.480424] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.480453] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[2.480476] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.480499] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.480522] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.480546] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.480569] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.480591] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.480616] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.480638] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.480899] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.480928] (my_robot_motion_planning) StderrLine: {'line': b'  696 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[2.480952] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.480974] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.480997] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.481020] (my_robot_motion_planning) StderrLine: {'line': b'  696 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.481042] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.481065] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:697:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.481089] (my_robot_motion_planning) StderrLine: {'line': b'  697 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.481111] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.481429] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.481484] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[2.481510] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.481533] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.481555] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.481579] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.481603] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.481625] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.481649] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.481671] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.481873] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.481901] (my_robot_motion_planning) StderrLine: {'line': b'  703 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[2.481925] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.481947] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.481970] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.481993] (my_robot_motion_planning) StderrLine: {'line': b'  703 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.482015] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.482037] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:704:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.482059] (my_robot_motion_planning) StderrLine: {'line': b'  704 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.482082] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.482469] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.482498] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[2.482521] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.482545] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.482567] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.482590] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.482612] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.482635] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.482659] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.482681] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.482930] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.482956] (my_robot_motion_planning) StderrLine: {'line': b'  710 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[2.482979] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.483002] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.483024] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.483047] (my_robot_motion_planning) StderrLine: {'line': b'  710 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.483071] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.483094] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:711:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.483116] (my_robot_motion_planning) StderrLine: {'line': b'  711 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.483138] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.483365] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.483392] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[2.483416] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.483440] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.483462] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.483485] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.483507] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.483530] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.483554] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.483576] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.483971] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.483998] (my_robot_motion_planning) StderrLine: {'line': b'  717 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[2.484021] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.484045] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.484067] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.484091] (my_robot_motion_planning) StderrLine: {'line': b'  717 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.484114] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.484137] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:718:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.484160] (my_robot_motion_planning) StderrLine: {'line': b'  718 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.484182] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.484433] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.484460] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[2.484484] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.484509] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.484531] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.484555] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[2.484578] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.484601] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.484624] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[2.484646] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.484875] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.484903] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[2.484927] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.484949] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.484972] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.484995] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[2.485018] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.485041] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.485063] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[2.485086] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.485526] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.485558] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[2.485581] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.485604] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.485626] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.485650] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.485673] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.485695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.485719] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.485742] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.485990] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.486017] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[2.486041] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.486064] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.486086] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.486109] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.486132] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.486155] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.486178] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.486201] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.486491] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.486522] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[2.486546] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.486568] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.486591] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.486614] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.486636] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.486658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.486681] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.486703] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.486992] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.487021] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[2.487044] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.487066] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.487088] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.487111] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.487133] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.487154] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.487178] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.487201] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.487490] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.487519] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[2.487543] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.487565] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.487587] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.487610] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.487632] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.487654] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.487677] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.487699] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.487976] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.488003] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[2.488026] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.488048] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.488071] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.488095] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.488117] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.488139] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.488161] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.488184] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.488470] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.488498] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.488522] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.488543] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.488566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.488590] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.488613] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.488636] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.488658] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.488681] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.488894] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.488924] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[2.488950] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.488976] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.489021] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.489050] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.489073] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.489096] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.489119] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.489141] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.489526] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.489554] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[2.489576] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.489599] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.489621] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.489645] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.489667] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.489689] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.489712] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.489734] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.489948] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.489976] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[2.490000] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.490024] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.490047] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.490069] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.490092] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.490114] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.490137] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.490162] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.490507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.490535] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[2.490558] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.490581] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.490604] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.490627] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.490649] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.490672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.490694] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.490716] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.490971] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.490998] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[2.491021] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.491045] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.491067] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.491089] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.491112] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.491134] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.491158] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.491181] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.491460] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.491488] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[2.491511] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.491534] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.491556] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.491580] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.491604] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.491626] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.491649] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.491672] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.491944] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.491972] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.491996] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.492019] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.492041] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.492064] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.492087] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.492110] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.492134] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.492157] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.492427] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.492454] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[2.492477] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.492500] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.492522] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.492547] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.492570] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.492592] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.492615] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.492637] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.492844] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.492872] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.492895] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.492917] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.492938] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.492961] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.492983] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.493008] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.493031] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.493053] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.493460] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.493487] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[2.493511] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.493533] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.493555] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.493578] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.493601] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.493623] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.493646] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.493668] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.493902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.493931] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[2.493953] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.493976] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.494000] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.494025] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.494069] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.494092] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.494116] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.494140] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.494164] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::unique_ptr<typename rclcpp::TypeAdapter<MessageT>::custom_type, typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.494189] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.494213] (my_robot_motion_planning) StderrLine: {'line': b'  813 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.494236] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.494259] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.494283] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:814:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.494306] (my_robot_motion_planning) StderrLine: {'line': b'  814 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[2.494329] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.494685] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.494713] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:820:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.494738] (my_robot_motion_planning) StderrLine: {'line': b'  820 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[2.494762] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.494787] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[2.495230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.495258] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[2.495282] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.495305] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.498539] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.498571] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[2.498595] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.498617] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.498640] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[2.498666] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.498688] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.498711] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[2.498734] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.499099] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.499127] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[2.499151] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.499174] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.499196] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.499221] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[2.499244] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.499267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.499290] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[2.499311] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.499591] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.499618] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[2.499641] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.499664] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.499687] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.499710] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.499733] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.499755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.499778] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.499801] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.500109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.500158] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>))\n'}
[2.500181] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.500204] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.500226] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.500249] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K))\n'}
[2.500273] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.500296] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.500320] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.500342] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.500612] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.500638] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[2.500662] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.500685] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.500708] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.500732] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.500760] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.500783] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.500807] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.500830] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.501119] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.501147] (my_robot_motion_planning) StderrLine: {'line': b'  837 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[2.501171] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.501193] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.501215] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.501239] (my_robot_motion_planning) StderrLine: {'line': b'  837 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.501262] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.501284] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:838:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.501307] (my_robot_motion_planning) StderrLine: {'line': b'  838 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.501329] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.501542] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.501569] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[2.501592] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.501615] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.501638] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.501661] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.501684] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.501705] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.501728] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.501750] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.502143] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.502169] (my_robot_motion_planning) StderrLine: {'line': b'  844 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[2.502192] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.502214] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.502238] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.502260] (my_robot_motion_planning) StderrLine: {'line': b'  844 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.502284] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.502307] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:845:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.502329] (my_robot_motion_planning) StderrLine: {'line': b'  845 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.502352] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.502608] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.502634] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[2.502658] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.502680] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.502702] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.502725] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.502748] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.502770] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.502792] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.502815] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.503108] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.503153] (my_robot_motion_planning) StderrLine: {'line': b'  851 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[2.503176] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.503199] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.503221] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.503245] (my_robot_motion_planning) StderrLine: {'line': b'  851 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[2.503269] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.503291] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:852:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.503313] (my_robot_motion_planning) StderrLine: {'line': b'  852 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[2.503335] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.503602] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.503627] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[2.503651] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.503674] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.503695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.503718] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[2.503741] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.503765] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.503791] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[2.503815] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.504156] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.504181] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[2.504205] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.504228] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.504251] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.504275] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[2.504298] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.504320] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.504343] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[2.504366] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.504643] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.504668] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[2.504690] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.504713] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.504736] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.504762] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.504785] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.504807] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.504829] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.504851] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.505077] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.505189] (-) TimerEvent: {}
[2.505277] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[2.505346] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.505405] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.505462] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.505533] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.505590] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.505754] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.505833] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.505896] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.505976] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.506044] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[2.506106] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.506275] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.506363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.506428] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.506486] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.506543] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.506600] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.506660] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.506820] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.506898] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[2.506973] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.507040] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.507110] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.507174] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.507350] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.507428] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.507501] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.507562] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.507621] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.507691] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[2.507846] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.507940] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.508014] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.508084] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.508154] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.508219] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.508279] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.508386] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.508462] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.508533] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[2.508599] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.508671] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.508745] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.508817] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.508893] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.508990] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.509056] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.509113] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.509169] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.509228] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[2.509283] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.509339] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.509393] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.509517] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.509575] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.509631] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.509692] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.509760] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.509832] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.509899] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[2.509976] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.510080] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.510145] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.510212] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.510274] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.510354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.510429] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.510497] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.510614] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.510680] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[2.510740] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.510799] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.510854] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.510910] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.510971] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.511026] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.511121] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.511176] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.511230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.511285] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[2.511355] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.511410] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.511465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.511544] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.511599] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.511653] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.511713] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.511772] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.511829] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.511886] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[2.511947] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.512039] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.512094] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.512148] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.512202] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.512256] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.512311] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.512365] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.512419] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.512509] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[2.512579] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.512635] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.512696] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.512772] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.512845] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.512902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.512959] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.513052] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.513110] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.513167] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[2.513221] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.513275] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.513330] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.513386] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.513440] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.513494] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.513600] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.513682] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.513747] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.513827] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.513899] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.513973] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.514060] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.514127] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.514191] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.514254] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.514319] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.514384] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.514449] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.514518] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[2.514582] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.514647] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.514720] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.514796] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.514880] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.514967] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.515048] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.515144] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.515242] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.515328] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[2.515401] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.515468] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.515534] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.515602] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.515670] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.515743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.515814] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.515881] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.515949] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.516021] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[2.516085] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.516157] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.516303] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.516376] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[2.516451] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.516520] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.516586] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[2.516658] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.516721] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.516795] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[2.516863] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.516927] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[2.516990] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.517054] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[2.517113] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.517166] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.517222] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.517275] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.517329] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.517389] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.517453] (my_robot_motion_planning) StderrLine: {'line': b'  938 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrCallback>(callback_variant_) ||\n'}
[2.517508] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.517562] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.517617] (my_robot_motion_planning) StderrLine: {'line': b'  938 |       std::holds_alternative<SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.517672] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.518526] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.518594] (my_robot_motion_planning) StderrLine: {'line': b'  939 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrWithInfoCallback>(callback_variant_) ||\n'}
[2.518649] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.518703] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.518759] (my_robot_motion_planning) StderrLine: {'line': b'  939 |       std::holds_alternative<SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.518813] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.520360] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.520475] (my_robot_motion_planning) StderrLine: {'line': b'  940 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrCallback>(callback_variant_) ||\n'}
[2.520553] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.520634] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.520709] (my_robot_motion_planning) StderrLine: {'line': b'  940 |       std::holds_alternative<ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.520867] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.521663] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.521776] (my_robot_motion_planning) StderrLine: {'line': b'  941 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrWithInfoCallback>(callback_variant_);\n'}
[2.521848] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.521914] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.521978] (my_robot_motion_planning) StderrLine: {'line': b'  941 |       std::holds_alternative<ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[2.522036] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.523157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::is_serialized_message_callback() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.523276] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.523342] (my_robot_motion_planning) StderrLine: {'line': b'  949 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSerializedMessageCallback>(callback_variant_) ||\n'}
[2.523402] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.523458] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.523514] (my_robot_motion_planning) StderrLine: {'line': b'  949 |       std::holds_alternative<ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.523569] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.524350] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.524445] (my_robot_motion_planning) StderrLine: {'line': b'  950 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<UniquePtrSerializedMessageCallback>(callback_variant_) ||\n'}
[2.524508] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.524566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.524624] (my_robot_motion_planning) StderrLine: {'line': b'  950 |       std::holds_alternative<UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.524680] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.525351] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.525463] (my_robot_motion_planning) StderrLine: {'line': b'  951 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[2.525525] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.525583] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.525640] (my_robot_motion_planning) StderrLine: {'line': b'  951 |       std::holds_alternative<SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.525696] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.526127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.526222] (my_robot_motion_planning) StderrLine: {'line': b'  952 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[2.526285] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.526342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.526402] (my_robot_motion_planning) StderrLine: {'line': b'  952 |       std::holds_alternative<ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[2.526472] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.527211] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.527321] (my_robot_motion_planning) StderrLine: {'line': b'  953 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrSerializedMessageCallback>(callback_variant_);\n'}
[2.527386] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.527444] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.527504] (my_robot_motion_planning) StderrLine: {'line': b'  953 |       std::holds_alternative<SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[2.527561] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.527617] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.527673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.527730] (my_robot_motion_planning) StderrLine: {'line': b'  960 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[2.527788] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.527846] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[2.527902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:961:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.527979] (my_robot_motion_planning) StderrLine: {'line': b'  961 |       [this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[2.528037] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.536690] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process_buffer.hpp:28\x1b[m\x1b[K,\n'}
[2.536938] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:31\x1b[m\x1b[K,\n'}
[2.536991] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[2.537023] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:34\x1b[m\x1b[K,\n'}
[2.537053] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.537082] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.537111] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.537138] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.537176] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.537204] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.537233] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.537259] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.537285] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.537312] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.537338] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::experimental::buffers::IntraProcessBuffer<MessageT, Alloc, MessageDeleter>::UniquePtr rclcpp::experimental::create_intra_process_buffer(rclcpp::IntraProcessBufferType, const rclcpp::QoS&, std::shared_ptr<_Tp>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.537369] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.537398] (my_robot_motion_planning) StderrLine: {'line': b'   56 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::RingBufferImplementation<BufferT>>(\n'}
[2.537430] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.537456] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.537486] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.537514] (my_robot_motion_planning) StderrLine: {'line': b'   56 |           std::make_unique<rclcpp::experimental::buffers::RingBufferImplementation<BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[2.537541] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.537567] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:61:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.537595] (my_robot_motion_planning) StderrLine: {'line': b'   61 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc,\n'}
[2.537621] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.537647] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:61:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.537673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:62:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.537699] (my_robot_motion_planning) StderrLine: {'line': b'   62 |             Deleter, BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[2.537723] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.537749] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.537778] (my_robot_motion_planning) StderrLine: {'line': b'   73 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::RingBufferImplementation<BufferT>>(\n'}
[2.537803] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.537828] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.537854] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.537881] (my_robot_motion_planning) StderrLine: {'line': b'   73 |           std::make_unique<rclcpp::experimental::buffers::RingBufferImplementation<BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[2.537906] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.537932] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:78:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.537958] (my_robot_motion_planning) StderrLine: {'line': b'   78 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc,\n'}
[2.537983] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.538007] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:78:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.538032] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:79:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.538057] (my_robot_motion_planning) StderrLine: {'line': b'   79 |             Deleter, BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[2.538082] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.551911] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:34\x1b[m\x1b[K,\n'}
[2.552015] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.552044] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.552069] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.552092] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.552115] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.552137] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.552166] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.552189] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.552210] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.552232] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.552253] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.552275] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:515:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[2.552301] (my_robot_motion_planning) StderrLine: {'line': b'  515 |   mutable std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K mutex_;\n'}
[2.552323] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.552344] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:515:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.552367] (my_robot_motion_planning) StderrLine: {'line': b'  515 |   mutable \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::shared_timed_mutex mutex_;\n'}
[2.552388] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.556245] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::IntraProcessManager::do_intra_process_publish(uint64_t, std::unique_ptr<MessageT, Deleter>, typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.556331] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_lock\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.556363] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kshared_lock\x1b[m\x1b[K<std::shared_timed_mutex> lock(mutex_);\n'}
[2.556387] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.556410] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_lock\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.556434] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.556459] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K> lock(mutex_);\n'}
[2.556481] (my_robot_motion_planning) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.556504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.560527] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmutex_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.560604] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::shared_timed_mutex> lock(\x1b[01;31m\x1b[Kmutex_\x1b[m\x1b[K);\n'}
[2.560634] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.560658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.560690] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::shared_timed_mutex> \x1b[01;31m\x1b[Klock\x1b[m\x1b[K(mutex_);\n'}
[2.560713] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.560742] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:47:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K(if you use \xe2\x80\x98\x1b[01m\x1b[K-fpermissive\x1b[m\x1b[K\xe2\x80\x99, G++ will accept your code, but allowing the use of an undeclared name is deprecated)\n'}
[2.561530] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::experimental::IntraProcessManager::do_intra_process_publish_and_return_shared(uint64_t, std::unique_ptr<MessageT, Deleter>, typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.561600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_lock\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.561631] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::\x1b[01;31m\x1b[Kshared_lock\x1b[m\x1b[K<std::shared_timed_mutex> lock(mutex_);\n'}
[2.561656] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.561680] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_lock\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.561705] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.561728] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K> lock(mutex_);\n'}
[2.561750] (my_robot_motion_planning) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.561772] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.565502] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmutex_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.565573] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::shared_timed_mutex> lock(\x1b[01;31m\x1b[Kmutex_\x1b[m\x1b[K);\n'}
[2.565602] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.565627] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.565656] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::shared_timed_mutex> \x1b[01;31m\x1b[Klock\x1b[m\x1b[K(mutex_);\n'}
[2.565680] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.585157] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/time.hpp:8\x1b[m\x1b[K,\n'}
[2.585266] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/time.hpp:18\x1b[m\x1b[K,\n'}
[2.585306] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/clock.hpp:24\x1b[m\x1b[K,\n'}
[2.585331] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:27\x1b[m\x1b[K,\n'}
[2.585354] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:30\x1b[m\x1b[K,\n'}
[2.585378] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.585402] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.585423] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.585445] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.585467] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.585487] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.585509] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.585530] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.585551] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.585572] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.585594] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.585618] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.585640] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.585661] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.585687] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.585713] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::builtin_interfaces::msg::Time>()\n'}
[2.585735] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.585757] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.605318] (-) TimerEvent: {}
[2.617336] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/set_parameters_result.hpp:8\x1b[m\x1b[K,\n'}
[2.617681] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos_overriding_options.hpp:28\x1b[m\x1b[K,\n'}
[2.617766] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:30\x1b[m\x1b[K,\n'}
[2.617855] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[2.617918] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.617976] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.618037] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.618097] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.618154] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.618211] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.618269] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.618327] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.618382] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.618436] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.618503] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.618560] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.618614] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.618676] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.618734] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::SetParametersResult>()\n'}
[2.618790] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.618847] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.625684] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[2.625906] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.625968] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.626026] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.626082] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.626137] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.626192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.626248] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.626303] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.626385] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.626443] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.626519] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[2.626574] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.626634] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[2.636377] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.636520] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[2.636582] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.636649] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[2.636707] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.636771] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[2.636828] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.638625] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:46\x1b[m\x1b[K,\n'}
[2.638763] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.638825] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.638883] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.638938] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.638994] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.639049] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.639105] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.639159] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.639213] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.639268] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:67:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kremove_cv_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_cv\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.639335] (my_robot_motion_planning) StderrLine: {'line': b'   67 |   using type = typename std::\x1b[01;31m\x1b[Kremove_cv_t\x1b[m\x1b[K<std::remove_reference_t<MessageT>>;\n'}
[2.639390] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.639449] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kremove_cv\x1b[m\x1b[K\n'}
[2.639503] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.639559] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<!std::is_integral<\n'}
[2.639614] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.639668] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.639724] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<!std::is_integral<\n'}
[2.639779] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.639833] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.639889] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K!std::is_integral<\n'}
[2.639943] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.642092] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/metrics_message.hpp:8\x1b[m\x1b[K,\n'}
[2.642236] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/collector/generate_statistics_message.hpp:21\x1b[m\x1b[K,\n'}
[2.642299] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:23\x1b[m\x1b[K,\n'}
[2.642357] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.642413] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.642468] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.642531] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.642587] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.642646] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.642702] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.642756] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.642811] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.642869] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.642924] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:125:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.642982] (my_robot_motion_planning) StderrLine: {'line': b'  125 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.643036] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.643091] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:125:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643147] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:129:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.643203] (my_robot_motion_planning) StderrLine: {'line': b'  129 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::statistics_msgs::msg::MetricsMessage>()\n'}
[2.643258] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.643313] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:129:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.648380] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:36\x1b[m\x1b[K,\n'}
[2.648523] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[2.648585] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.648642] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.648707] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.648771] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.648826] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.648881] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.648936] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.648991] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.649046] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.649104] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.649158] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.649215] (my_robot_motion_planning) StderrLine: {'line': b'   44 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.649269] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.649324] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.649379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.649435] (my_robot_motion_planning) StderrLine: {'line': b'   44 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.649489] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.649543] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.649601] (my_robot_motion_planning) StderrLine: {'line': b'   59 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.649659] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.649713] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.649768] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.649822] (my_robot_motion_planning) StderrLine: {'line': b'   59 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.649876] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.649930] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.649985] (my_robot_motion_planning) StderrLine: {'line': b'   82 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.650039] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.650092] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.650149] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.650204] (my_robot_motion_planning) StderrLine: {'line': b'   82 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.650258] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.652172] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:42\x1b[m\x1b[K,\n'}
[2.652313] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[2.652376] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.652525] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.652583] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.652638] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.652694] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.652757] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.652814] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.652879] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.652934] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.652989] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.653044] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.653103] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[2.653159] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.653214] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[2.653269] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.653326] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[2.653380] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.653443] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[2.653499] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.653556] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[2.653613] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.653807] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[2.653873] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.653933] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.653990] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.654053] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.654109] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.654164] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.654220] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.654274] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.654329] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.654384] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.654438] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.654496] (my_robot_motion_planning) StderrLine: {'line': b'  247 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.654550] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.654605] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.654660] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.654715] (my_robot_motion_planning) StderrLine: {'line': b'  247 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.654774] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.654828] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.654883] (my_robot_motion_planning) StderrLine: {'line': b'  288 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.654937] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.654991] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.655046] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.655101] (my_robot_motion_planning) StderrLine: {'line': b'  288 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.655155] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.655210] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.655270] (my_robot_motion_planning) StderrLine: {'line': b'  318 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.655324] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.655379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.655434] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.655489] (my_robot_motion_planning) StderrLine: {'line': b'  318 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.655543] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.655597] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.655652] (my_robot_motion_planning) StderrLine: {'line': b'  360 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.655706] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.655761] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.655818] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.655876] (my_robot_motion_planning) StderrLine: {'line': b'  360 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[2.655930] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.655984] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.656042] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.656100] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::\x1b[01;31m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K<MessageT>(),\n'}
[2.656154] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.656208] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.656264] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:18\x1b[m\x1b[K,\n'}
[2.656318] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[2.656372] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.656426] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.656480] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.656533] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.656588] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.656642] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.656696] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.656760] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.656816] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.656871] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.656932] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/message_type_support_decl.hpp:30:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_runtime_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.656988] (my_robot_motion_planning) StderrLine: {'line': b'   30 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[2.657046] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.657100] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:21\x1b[m\x1b[K,\n'}
[2.657154] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[2.657209] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.657263] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.657319] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.657374] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.657427] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.657481] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.657535] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.657589] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.657643] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.657698] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.657751] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_typesupport_cpp/message_type_support.hpp:25:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_typesupport_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.657809] (my_robot_motion_planning) StderrLine: {'line': b'   25 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[2.657863] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.657918] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[2.657971] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.658025] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.658079] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.658134] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.658188] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.658247] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.658305] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.658360] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.658414] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.658468] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.658523] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.658578] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::get_message_type_support_handle<MessageT\x1b[01;31m\x1b[K>\x1b[m\x1b[K(),\n'}
[2.658633] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.658688] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.658743] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::get_message_type_support_handle<MessageT>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K,\n'}
[2.658797] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.660958] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.661098] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.661307] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.661376] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.661435] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.661492] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.661547] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.661603] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.661658] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.661713] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.661767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual void rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.661837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:153:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<statistics_msgs::msg::MetricsMessage_<std::allocator<void> > >::publish(statistics_msgs::msg::MetricsMessage_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.661895] (my_robot_motion_planning) StderrLine: {'line': b'  153 |       \x1b[01;31m\x1b[Kpublisher_->publish(msg)\x1b[m\x1b[K;\n'}
[2.661950] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[2.662097] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[2.662183] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.662244] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.662301] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.662357] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.662412] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.662466] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.662523] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.662681] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.662806] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.662868] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.662925] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.662994] (my_robot_motion_planning) StderrLine: {'line': b'  383 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[2.663051] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.663106] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.663163] (my_robot_motion_planning) StderrLine: {'line': b'  383 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[2.663223] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.663278] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.663336] (my_robot_motion_planning) StderrLine: {'line': b'  389 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[2.663390] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.663445] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.663502] (my_robot_motion_planning) StderrLine: {'line': b'  389 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[2.663556] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.663611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.663668] (my_robot_motion_planning) StderrLine: {'line': b'  403 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[2.663723] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.663777] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<statistics_msgs::msg::MetricsMessage_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.663840] (my_robot_motion_planning) StderrLine: {'line': b'  403 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[2.663895] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.663950] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[2.664005] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.664060] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.664115] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.664173] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.664228] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.664282] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.664337] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.664391] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.664445] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.664499] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::bring_up()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.664555] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.664614] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<ReceivedMessageAge>();\n'}
[2.664669] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.664724] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.664855] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.664907] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::make_unique<ReceivedMessageAge\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[2.664938] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.664962] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.664987] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::make_unique<ReceivedMessageAge>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.665010] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.665032] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665056] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<ReceivedMessagePeriod>();\n'}
[2.665088] (my_robot_motion_planning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.665111] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.665134] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.665157] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::make_unique<ReceivedMessagePeriod\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[2.665179] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.665201] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.665229] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::make_unique<ReceivedMessagePeriod>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.665251] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.665273] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.665296] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.665318] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.665339] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.665361] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.665381] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.665402] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.665423] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.665444] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.665466] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.665488] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.665511] (my_robot_motion_planning) StderrLine: {'line': b'  293 |   std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.665533] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.665554] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.665576] (my_robot_motion_planning) StderrLine: {'line': b'  293 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[2.665597] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.678845] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/list_parameters_result.hpp:8\x1b[m\x1b[K,\n'}
[2.678991] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:35\x1b[m\x1b[K,\n'}
[2.679054] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.679113] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.679169] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.679224] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.679280] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.679339] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.679395] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.679449] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.679507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.679562] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ListParametersResult>()\n'}
[2.679618] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.679671] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.687081] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_descriptor.hpp:8\x1b[m\x1b[K,\n'}
[2.687220] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:36\x1b[m\x1b[K,\n'}
[2.687298] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.687357] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.687414] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.687473] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.687529] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:157:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.687588] (my_robot_motion_planning) StderrLine: {'line': b'  157 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.687643] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.687699] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:157:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.687756] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:161:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.687813] (my_robot_motion_planning) StderrLine: {'line': b'  161 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterDescriptor>()\n'}
[2.687869] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.687924] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:161:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.705535] (-) TimerEvent: {}
[2.705781] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_event.hpp:8\x1b[m\x1b[K,\n'}
[2.705892] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:37\x1b[m\x1b[K,\n'}
[2.705957] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.706016] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.706073] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.706133] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.706190] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:109:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.706267] (my_robot_motion_planning) StderrLine: {'line': b'  109 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.706324] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.706381] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:109:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706441] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:113:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.706501] (my_robot_motion_planning) StderrLine: {'line': b'  113 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterEvent>()\n'}
[2.706559] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.706616] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:113:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.728245] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[2.728577] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/generic_publisher.hpp:27\x1b[m\x1b[K,\n'}
[2.728664] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:45\x1b[m\x1b[K,\n'}
[2.728749] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.728832] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.728896] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.728967] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.729024] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.729079] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729172] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::\x1b[01;31m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K<MessageT>(),\n'}
[2.729230] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.729292] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.729353] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:18\x1b[m\x1b[K,\n'}
[2.729409] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[2.729464] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.729518] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.729573] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.729629] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.729685] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.729740] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.729795] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.729850] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.729906] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.729961] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.730017] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/message_type_support_decl.hpp:30:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_runtime_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730077] (my_robot_motion_planning) StderrLine: {'line': b'   30 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[2.730132] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.730187] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:21\x1b[m\x1b[K,\n'}
[2.730241] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[2.730303] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.730359] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.730415] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.730474] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.730529] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.730584] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.730642] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.730697] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.730752] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.730806] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.730861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_typesupport_cpp/message_type_support.hpp:25:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_typesupport_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730916] (my_robot_motion_planning) StderrLine: {'line': b'   25 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[2.730971] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.731028] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[2.731084] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/generic_publisher.hpp:27\x1b[m\x1b[K,\n'}
[2.731139] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:45\x1b[m\x1b[K,\n'}
[2.731194] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.731249] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.731303] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.731358] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.731413] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.731472] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::get_message_type_support_handle<MessageT\x1b[01;31m\x1b[K>\x1b[m\x1b[K(),\n'}
[2.731527] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.731583] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.731639] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::get_message_type_support_handle<MessageT>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K,\n'}
[2.731694] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.764474] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter.hpp:8\x1b[m\x1b[K,\n'}
[2.764684] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:24\x1b[m\x1b[K,\n'}
[2.764870] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.764986] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.765015] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.765040] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.765063] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.765086] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.765108] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.765130] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.765155] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.765179] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.765202] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.765234] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.765257] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::Parameter>()\n'}
[2.765279] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.765301] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.765339] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_type.hpp:8\x1b[m\x1b[K,\n'}
[2.765361] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:25\x1b[m\x1b[K,\n'}
[2.765384] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.765405] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.765431] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.765452] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.765473] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.765494] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.765515] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.765536] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:25:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.765558] (my_robot_motion_planning) StderrLine: {'line': b'   25 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.765579] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.765600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:25:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.765622] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:29:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.765645] (my_robot_motion_planning) StderrLine: {'line': b'   29 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterType>()\n'}
[2.765666] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.765686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:29:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.767032] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_value.hpp:8\x1b[m\x1b[K,\n'}
[2.767128] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:26\x1b[m\x1b[K,\n'}
[2.767191] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.767248] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.767305] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.767360] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.767416] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.767478] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.767533] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.767588] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:189:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.767646] (my_robot_motion_planning) StderrLine: {'line': b'  189 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.767700] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.767755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:189:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.767816] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:193:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.767873] (my_robot_motion_planning) StderrLine: {'line': b'  193 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterValue>()\n'}
[2.767928] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.767982] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:193:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.768854] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.768949] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.769016] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.769148] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.769230] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.769291] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.769432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:46:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.769505] (my_robot_motion_planning) StderrLine: {'line': b'   46 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.769565] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.769631] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:46:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.769689] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:116:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.769746] (my_robot_motion_planning) StderrLine: {'line': b'  116 |   \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[2.769802] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.769857] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:124:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.769917] (my_robot_motion_planning) StderrLine: {'line': b'  124 |   \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[2.769972] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.770027] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:236:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.770084] (my_robot_motion_planning) StderrLine: {'line': b'  236 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.770138] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.770191] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:236:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770247] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:245:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.770302] (my_robot_motion_planning) StderrLine: {'line': b'  245 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.770356] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.770411] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:245:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770467] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:254:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.770522] (my_robot_motion_planning) StderrLine: {'line': b'  254 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.770577] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.770634] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:254:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770690] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:269:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.770746] (my_robot_motion_planning) StderrLine: {'line': b'  269 | \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[2.770801] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.786242] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.786400] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.786464] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.786523] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.786580] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:420:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.786641] (my_robot_motion_planning) StderrLine: {'line': b'  420 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.786697] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.786751] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:420:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.786807] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:433:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.786862] (my_robot_motion_planning) StderrLine: {'line': b'  433 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.786917] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.786972] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:433:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.793583] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:29\x1b[m\x1b[K,\n'}
[2.793800] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:41\x1b[m\x1b[K,\n'}
[2.793865] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.793924] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.793993] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.794052] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.794248] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.794328] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:45:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kallowed_policies\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.794391] (my_robot_motion_planning) StderrLine: {'line': b'   45 |   static constexpr \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K allowed_policies()\n'}
[2.794458] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.794514] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:45:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.794572] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:65:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kallowed_policies\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.794629] (my_robot_motion_planning) StderrLine: {'line': b'   65 |   static constexpr \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K allowed_policies()\n'}
[2.794684] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.794739] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:65:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.794795] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:132:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.794851] (my_robot_motion_planning) StderrLine: {'line': b'  132 | std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.794906] (my_robot_motion_planning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.794960] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:132:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.795016] (my_robot_motion_planning) StderrLine: {'line': b'  132 | \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[2.795071] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.795125] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:198:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[2.795187] (my_robot_motion_planning) StderrLine: {'line': b'  198 | std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[2.795241] (my_robot_motion_planning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.795295] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:198:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.795351] (my_robot_motion_planning) StderrLine: {'line': b'  198 | \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[2.795409] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.798660] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:41\x1b[m\x1b[K,\n'}
[2.798813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.798877] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.798935] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.798991] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.799047] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.799102] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::detail::create_publisher(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.799162] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:58:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.799218] (my_robot_motion_planning) StderrLine: {'line': b'   58 |     rclcpp::detail::\x1b[01;31m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K(\n'}
[2.799273] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.801862] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:43\x1b[m\x1b[K,\n'}
[2.802004] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.802067] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.802126] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.802182] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.802237] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.802293] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.802363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:130:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.802423] (my_robot_motion_planning) StderrLine: {'line': b'  130 |     rclcpp::detail::\x1b[01;31m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K(\n'}
[2.802480] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.802643] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.802726] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.802791] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.802849] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.802907] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.803117] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.803185] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:194:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.803245] (my_robot_motion_planning) StderrLine: {'line': b'  194 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.803301] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.803357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:194:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.803413] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:214:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.803469] (my_robot_motion_planning) StderrLine: {'line': b'  214 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.803524] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.803579] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:214:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.803645] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_RealType> rclcpp::Node::declare_parameters(const string&, const std::map<std::__cxx11::basic_string<char>, ParameterT>&, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.803710] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:246:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.803770] (my_robot_motion_planning) StderrLine: {'line': b'  246 |     [this, &normalized_namespace, ignore_overrides](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K element) {\n'}
[2.803826] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.803882] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.803937] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:248:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kfirst\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.803995] (my_robot_motion_planning) StderrLine: {'line': b'  248 |         normalized_namespace + element.\x1b[01;31m\x1b[Kfirst\x1b[m\x1b[K,\n'}
[2.804049] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.804104] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:249:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804161] (my_robot_motion_planning) StderrLine: {'line': b'  249 |         element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K,\n'}
[2.804215] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.804270] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_RealType> rclcpp::Node::declare_parameters(const string&, const std::map<std::__cxx11::basic_string<char>, std::pair<ParameterT, rcl_interfaces::msg::ParameterDescriptor_<std::allocator<void> > > >&, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.804329] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:271:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804385] (my_robot_motion_planning) StderrLine: {'line': b'  271 |     [this, &normalized_namespace, ignore_overrides](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K element) {\n'}
[2.804440] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.804494] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.804548] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:274:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kfirst\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804608] (my_robot_motion_planning) StderrLine: {'line': b'  274 |           normalized_namespace + element.\x1b[01;31m\x1b[Kfirst\x1b[m\x1b[K,\n'}
[2.804666] (my_robot_motion_planning) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.804720] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:275:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.804989] (my_robot_motion_planning) StderrLine: {'line': b'  275 |           element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K.first,\n'}
[2.805041] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.805069] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:276:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805099] (my_robot_motion_planning) StderrLine: {'line': b'  276 |           element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K.second,\n'}
[2.805124] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.805617] (-) TimerEvent: {}
[2.842950] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/describe_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.843081] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:28\x1b[m\x1b[K,\n'}
[2.843115] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.843144] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.843170] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.843205] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.843236] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.843263] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.843289] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.843319] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.843344] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::DescribeParameters_Request>()\n'}
[2.843370] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.843396] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.844848] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/describe_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.844918] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:28\x1b[m\x1b[K,\n'}
[2.844949] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.844975] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.844999] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.845027] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.845052] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.845076] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.845104] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.845130] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::DescribeParameters_Response>()\n'}
[2.845155] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.845178] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.848582] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/get_parameter_types.hpp:8\x1b[m\x1b[K,\n'}
[2.848659] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:29\x1b[m\x1b[K,\n'}
[2.848691] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.848720] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.848755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.848816] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.848842] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.848866] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.848892] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.848919] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameterTypes_Request>()\n'}
[2.848943] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.848966] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.848990] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.849016] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.849040] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.849063] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.849088] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.849111] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameterTypes_Response>()\n'}
[2.849134] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.849156] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.852207] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/get_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.852281] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:30\x1b[m\x1b[K,\n'}
[2.852314] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.852339] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.852363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.852391] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.852415] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.852440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.852465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.852489] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameters_Request>()\n'}
[2.852515] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.852539] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854121] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.854191] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.854221] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.854245] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.854270] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.854297] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameters_Response>()\n'}
[2.854322] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.854343] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.858060] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.858131] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:31\x1b[m\x1b[K,\n'}
[2.858161] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.858186] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.858209] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.858241] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.858264] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.858286] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.858311] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.858335] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::ListParameters_Request>()\n'}
[2.858358] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.858383] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.858521] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:103:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.858583] (my_robot_motion_planning) StderrLine: {'line': b'  103 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.858613] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.858638] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:103:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.858666] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:107:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.858690] (my_robot_motion_planning) StderrLine: {'line': b'  107 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::ListParameters_Response>()\n'}
[2.858713] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.858735] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:107:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.863466] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/set_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.863557] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:32\x1b[m\x1b[K,\n'}
[2.863588] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.863612] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.863636] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.863667] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.863690] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.863712] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.863735] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.863758] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParameters_Request>()\n'}
[2.863780] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.863801] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.865275] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.865346] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.865375] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.865399] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.865424] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.865447] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParameters_Response>()\n'}
[2.865470] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.865492] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.868794] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/set_parameters_atomically.hpp:8\x1b[m\x1b[K,\n'}
[2.868862] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:33\x1b[m\x1b[K,\n'}
[2.868891] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.868916] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.868939] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.868965] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.868987] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.869011] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.869036] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.869069] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParametersAtomically_Request>()\n'}
[2.869213] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.869250] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.869279] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.869308] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.869332] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.869354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.869378] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.869401] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParametersAtomically_Response>()\n'}
[2.869424] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.869447] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.875285] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.875371] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.875401] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.875425] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.875456] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.875479] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.875501] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.875526] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.875549] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.875571] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.875593] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.875615] (my_robot_motion_planning) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.875639] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.875663] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:208:69:\x1b[m\x1b[K   required from here\n'}
[2.875685] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.875710] (my_robot_motion_planning) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[2.875732] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.875754] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.875777] (my_robot_motion_planning) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[2.875798] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.875819] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.875844] (my_robot_motion_planning) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[2.875867] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.905820] (-) TimerEvent: {}
[3.006200] (-) TimerEvent: {}
[3.106536] (-) TimerEvent: {}
[3.126582] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:31\x1b[m\x1b[K,\n'}
[3.126763] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.126808] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.126836] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.126864] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::detail::StoragePolicyCommon<HasStrongOwnership>::storage_rebuild_rcl_wait_set_with_sets(const SubscriptionsIterable&, const GuardConditionsIterable&, const ExtraGuardConditionsIterable&, const TimersIterable&, const ClientsIterable&, const ServicesIterable&, const WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.126902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:271:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.126929] (my_robot_motion_planning) StderrLine: {'line': b'  271 |       [this](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner_guard_conditions)\n'}
[3.126955] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.126981] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.127006] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:273:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.127035] (my_robot_motion_planning) StderrLine: {'line': b'  273 |         for (const auto & guard_condition : \x1b[01;31m\x1b[Kinner_guard_conditions\x1b[m\x1b[K) {\n'}
[3.127059] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.127084] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:273:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.127907] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.127972] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.128003] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.128029] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K At global scope:\n'}
[3.128054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:231:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstorage_find_entity\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.128086] (my_robot_motion_planning) StderrLine: {'line': b'  231 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[3.128109] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.128132] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:231:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.136457] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.136548] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.136587] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       [&entity](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner) {return &entity == inner.lock().get();});\n'}
[3.136615] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.136639] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.136662] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kinner\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.136687] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       [&entity](const auto & inner) {return &entity == inner.\x1b[01;31m\x1b[Klock\x1b[m\x1b[K().get();});\n'}
[3.136711] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.136734] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.136767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.136791] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       [&entity](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner) {return &entity == inner.lock().get();});\n'}
[3.136813] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.136837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.136858] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kinner\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.136882] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       [&entity](const auto & inner) {return &entity == inner.\x1b[01;31m\x1b[Klock\x1b[m\x1b[K().get();});\n'}
[3.136905] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.143515] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.143600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.143632] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptr) {\n'}
[3.143658] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.143682] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.143706] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:382:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kexpired\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptr\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.143731] (my_robot_motion_planning) StderrLine: {'line': b'  382 |         return weak_ptr.\x1b[01;31m\x1b[Kexpired\x1b[m\x1b[K();\n'}
[3.143754] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.144025] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.144089] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.144121] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptrs, auto & shared_ptrs) {\n'}
[3.144148] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.144172] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.144206] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = [](const auto & weak_ptrs, \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[3.144229] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.144253] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.144277] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:403:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kresize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kshared_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.144302] (my_robot_motion_planning) StderrLine: {'line': b'  403 |         shared_ptrs.\x1b[01;31m\x1b[Kresize\x1b[m\x1b[K(weak_ptrs.size());\n'}
[3.144325] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.144346] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:403:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.144369] (my_robot_motion_planning) StderrLine: {'line': b'  403 |         shared_ptrs.resize(weak_ptrs.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K());\n'}
[3.144390] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.144937] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.145002] (my_robot_motion_planning) StderrLine: {'line': b'  405 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[3.145031] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.145056] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[3.145080] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.145104] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.145127] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.145150] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.145173] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[3.145196] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.145222] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.145739] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.145805] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.145841] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.145869] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.145900] (my_robot_motion_planning) StderrLine: {'line': b'  405 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[3.145927] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.145952] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[3.145976] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.146002] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.146025] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.146048] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.146073] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.146098] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.146123] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.146148] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[3.146173] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[3.146197] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.146336] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.146400] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.146432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.146462] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[3.146489] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.146651] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.146686] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.146718] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.146744] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:406:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid types \xe2\x80\x98\x1b[01m\x1b[Kint[size_t {aka long unsigned int}]\x1b[m\x1b[K\xe2\x80\x99 for array subscript\n'}
[3.146771] (my_robot_motion_planning) StderrLine: {'line': b'  406 |           shared_ptrs\x1b[01;31m\x1b[K[\x1b[m\x1b[Kindex++] = weak_ptr.lock();\n'}
[3.146796] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.146821] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.146846] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakGuardConditions&, rclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.146874] (my_robot_motion_planning) StderrLine: {'line': b'  410 |     \x1b[01;31m\x1b[Klock_all(guard_conditions_, shared_guard_conditions_)\x1b[m\x1b[K;\n'}
[3.147030] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.147071] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.147100] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[3.147126] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147155] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[3.147513] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.147557] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakGuardConditions\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::GuardCondition> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147593] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakTimers&, rclcpp::wait_set_policies::DynamicStorage::TimersIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147621] (my_robot_motion_planning) StderrLine: {'line': b'  411 |     \x1b[01;31m\x1b[Klock_all(timers_, shared_timers_)\x1b[m\x1b[K;\n'}
[3.147647] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.147672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.147697] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[3.147723] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147747] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[3.147771] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.147795] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakTimers\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::TimerBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147821] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakClients&, rclcpp::wait_set_policies::DynamicStorage::ClientsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147848] (my_robot_motion_planning) StderrLine: {'line': b'  412 |     \x1b[01;31m\x1b[Klock_all(clients_, shared_clients_)\x1b[m\x1b[K;\n'}
[3.147872] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.147896] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.147920] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[3.147944] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.147969] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[3.147992] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.148015] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakClients\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::ClientBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148040] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakServices&, rclcpp::wait_set_policies::DynamicStorage::ServicesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148065] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     \x1b[01;31m\x1b[Klock_all(services_, shared_services_)\x1b[m\x1b[K;\n'}
[3.148088] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.148111] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.148134] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[3.148157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148180] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[3.148203] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.148227] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakServices\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::ServiceBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148253] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148278] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptrs, auto & shared_ptrs) {\n'}
[3.148302] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.148325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148349] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = [](const auto & weak_ptrs, \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[3.148371] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.148394] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.148418] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:417:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kresize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kshared_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148442] (my_robot_motion_planning) StderrLine: {'line': b'  417 |         shared_ptrs.\x1b[01;31m\x1b[Kresize\x1b[m\x1b[K(weak_ptrs.size());\n'}
[3.148465] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.148487] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:417:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.148510] (my_robot_motion_planning) StderrLine: {'line': b'  417 |         shared_ptrs.resize(weak_ptrs.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K());\n'}
[3.148537] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.148567] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.148593] (my_robot_motion_planning) StderrLine: {'line': b'  419 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[3.148618] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.148642] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[3.148666] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.148691] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.148716] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.148748] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.148793] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[3.148816] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.148841] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.148863] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.148886] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.148909] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.148931] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.148954] (my_robot_motion_planning) StderrLine: {'line': b'  419 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[3.148977] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.149000] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[3.149023] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.149048] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.149070] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.149093] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.149115] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149138] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.149161] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.149184] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[3.149207] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[3.149230] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.149253] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.149275] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.149298] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149325] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[3.149349] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.149371] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.149395] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.149418] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.149441] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:420:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid types \xe2\x80\x98\x1b[01m\x1b[Kint[size_t {aka long unsigned int}]\x1b[m\x1b[K\xe2\x80\x99 for array subscript\n'}
[3.149464] (my_robot_motion_planning) StderrLine: {'line': b'  420 |           shared_ptrs\x1b[01;31m\x1b[K[\x1b[m\x1b[Kindex++] = WaitableEntry{\n'}
[3.149486] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.149509] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:422:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(<brace-enclosed initializer list>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149534] (my_robot_motion_planning) StderrLine: {'line': b'  422 |             weak_ptr.associated_entity.lock()\x1b[01;31m\x1b[K}\x1b[m\x1b[K;\n'}
[3.149557] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.149581] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:119:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(std::shared_ptr<rclcpp::Waitable>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149605] (my_robot_motion_planning) StderrLine: {'line': b'  119 |     \x1b[01;36m\x1b[KWaitableEntry\x1b[m\x1b[K(\n'}
[3.149628] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149651] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:119:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 1 would be ill-formed:\n'}
[3.149674] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(const rclcpp::wait_set_policies::DynamicStorage::WaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149698] (my_robot_motion_planning) StderrLine: {'line': b'  112 |   class \x1b[01;36m\x1b[KWaitableEntry\x1b[m\x1b[K\n'}
[3.149720] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[3.149767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(rclcpp::wait_set_policies::DynamicStorage::WaitableEntry&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149792] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[3.149817] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.149841] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakWaitables&, rclcpp::wait_set_policies::DynamicStorage::WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149866] (my_robot_motion_planning) StderrLine: {'line': b'  425 |     \x1b[01;31m\x1b[Klock_all_waitables(waitables_, shared_waitables_)\x1b[m\x1b[K;\n'}
[3.149889] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149912] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.149937] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[3.149961] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.149984] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[3.150008] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.150030] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakWaitables\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.150056] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.150079] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.150104] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = [](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[3.150127] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.150150] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[3.150173] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.150196] (my_robot_motion_planning) StderrLine: {'line': b'  437 |         for (auto & shared_ptr : \x1b[01;31m\x1b[Kshared_ptrs\x1b[m\x1b[K) {\n'}
[3.150219] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.150241] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[3.150264] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.150286] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.150309] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.150332] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.150354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[3.150378] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.150401] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.150424] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.150447] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.150471] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.150495] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.150518] (my_robot_motion_planning) StderrLine: {'line': b'  437 |         for (auto & shared_ptr : \x1b[01;31m\x1b[Kshared_ptrs\x1b[m\x1b[K) {\n'}
[3.150541] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.150564] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[3.150587] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[3.150611] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.150634] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.150656] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.150680] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.150703] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[3.150725] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.150748] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[3.150771] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[3.150794] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[3.150817] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[3.150840] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[3.150863] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.150887] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[3.150911] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.150936] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.150959] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.150981] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.151004] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.151027] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151051] (my_robot_motion_planning) StderrLine: {'line': b'  441 |     \x1b[01;31m\x1b[Kreset_all(shared_guard_conditions_)\x1b[m\x1b[K;\n'}
[3.151074] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.151097] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.151122] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[3.151144] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151168] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[3.151190] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.151213] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::GuardCondition> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151240] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::TimersIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151264] (my_robot_motion_planning) StderrLine: {'line': b'  442 |     \x1b[01;31m\x1b[Kreset_all(shared_timers_)\x1b[m\x1b[K;\n'}
[3.151285] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.151308] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.151331] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[3.151354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151376] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[3.151399] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.151421] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::TimersIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::TimerBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151445] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::ClientsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151470] (my_robot_motion_planning) StderrLine: {'line': b'  443 |     \x1b[01;31m\x1b[Kreset_all(shared_clients_)\x1b[m\x1b[K;\n'}
[3.151492] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.151515] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.151538] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[3.151563] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151587] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[3.151610] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.151634] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::ClientsIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::ClientBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::ServicesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151681] (my_robot_motion_planning) StderrLine: {'line': b'  444 |     \x1b[01;31m\x1b[Kreset_all(shared_services_)\x1b[m\x1b[K;\n'}
[3.151704] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.151726] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.151749] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[3.151772] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151798] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[3.151823] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.151846] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::ServicesIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::ServiceBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151870] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.151894] (my_robot_motion_planning) StderrLine: {'line': b'  445 |     \x1b[01;31m\x1b[Kreset_all(shared_waitables_)\x1b[m\x1b[K;\n'}
[3.151917] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.151940] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[3.151965] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[3.151988] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.152012] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[3.152035] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.152058] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitablesIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<rclcpp::wait_set_policies::DynamicStorage::WaitableEntry>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.152081] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/sequential_synchronization.hpp:32\x1b[m\x1b[K,\n'}
[3.152105] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:26\x1b[m\x1b[K,\n'}
[3.152129] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.152153] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.152175] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_result.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::WaitResult<WaitSetT>::WaitResult(rclcpp::WaitResult<WaitSetT>&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.152198] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_result.hpp:127:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kexchange\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.152222] (my_robot_motion_planning) StderrLine: {'line': b'  127 |     wait_set_pointer_(std::\x1b[01;31m\x1b[Kexchange\x1b[m\x1b[K(other.wait_set_pointer_, nullptr))\n'}
[3.152245] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.165312] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/path.hpp:8\x1b[m\x1b[K,\n'}
[3.165408] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:13\x1b[m\x1b[K:\n'}
[3.165439] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[3.165465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.165491] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.165515] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.165538] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165563] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.165595] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::nav_msgs::msg::Path>()\n'}
[3.165619] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.165640] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.179670] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.179757] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:38\x1b[m\x1b[K,\n'}
[3.179789] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.179816] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.179844] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.179875] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.179899] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.179925] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.179950] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PointStamped>()\n'}
[3.179973] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.179996] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.181313] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/quaternion_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.181378] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:39\x1b[m\x1b[K,\n'}
[3.181407] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.181432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.181459] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.181482] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.181504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.181536] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.181559] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::QuaternionStamped>()\n'}
[3.181583] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.181605] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.183141] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/transform.hpp:8\x1b[m\x1b[K,\n'}
[3.183204] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:40\x1b[m\x1b[K,\n'}
[3.183233] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.183258] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.183289] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.183312] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.183334] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.183357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.183380] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Transform>()\n'}
[3.183404] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.183426] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.186211] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/transform_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.186279] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:41\x1b[m\x1b[K,\n'}
[3.186310] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.186336] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.186363] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.186386] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.186410] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.186438] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.186460] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::TransformStamped>()\n'}
[3.186482] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.186504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.187664] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/vector3.hpp:8\x1b[m\x1b[K,\n'}
[3.187727] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:42\x1b[m\x1b[K,\n'}
[3.187757] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.187783] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.187813] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.187836] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.187858] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.187883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.187906] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Vector3>()\n'}
[3.187929] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.187951] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.188452] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/vector3_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.188518] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:43\x1b[m\x1b[K,\n'}
[3.188550] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.188582] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.188611] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.188636] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.188689] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.188715] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.188749] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Vector3Stamped>()\n'}
[3.188774] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.188798] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.189701] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose.hpp:8\x1b[m\x1b[K,\n'}
[3.189763] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:44\x1b[m\x1b[K,\n'}
[3.189793] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.189822] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.189852] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.189880] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.189906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.189934] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.189961] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Pose>()\n'}
[3.190121] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.190157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.190189] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point.hpp:8\x1b[m\x1b[K,\n'}
[3.190214] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:45\x1b[m\x1b[K,\n'}
[3.190240] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.190263] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.190293] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.190316] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.190339] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.190363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.190387] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Point>()\n'}
[3.190411] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.190435] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.190656] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point32.hpp:8\x1b[m\x1b[K,\n'}
[3.190720] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:46\x1b[m\x1b[K,\n'}
[3.190752] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.190778] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.190807] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.190837] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.190861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.190889] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.190915] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Point32>()\n'}
[3.190939] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.190963] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.192334] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.192399] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:47\x1b[m\x1b[K,\n'}
[3.192429] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.192455] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.192483] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.192508] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.192531] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.192556] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.192580] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseStamped>()\n'}
[3.192604] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.192628] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.193461] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_with_covariance.hpp:8\x1b[m\x1b[K,\n'}
[3.193527] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:48\x1b[m\x1b[K,\n'}
[3.193562] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.193590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.193619] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.193645] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.193669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.193695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.193721] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseWithCovariance>()\n'}
[3.193745] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.193769] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.195680] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_with_covariance_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.195746] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:49\x1b[m\x1b[K,\n'}
[3.195777] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.195804] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.195832] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.195861] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.195886] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.195913] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.195938] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseWithCovarianceStamped>()\n'}
[3.195963] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.195987] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.199396] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/polygon_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.199467] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:50\x1b[m\x1b[K,\n'}
[3.199496] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.199521] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.199547] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.199570] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.199592] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.199616] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.199639] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PolygonStamped>()\n'}
[3.199661] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.199683] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.202448] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/wrench.hpp:8\x1b[m\x1b[K,\n'}
[3.202518] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:51\x1b[m\x1b[K,\n'}
[3.202552] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.202578] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.202606] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.202630] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.202655] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.202679] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.202704] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Wrench>()\n'}
[3.202728] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.202751] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.204365] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/wrench_stamped.hpp:8\x1b[m\x1b[K,\n'}
[3.204432] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:52\x1b[m\x1b[K,\n'}
[3.204463] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[3.204490] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.204523] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[3.204549] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.204573] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.204600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[3.204626] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::WrenchStamped>()\n'}
[3.204651] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.204675] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.206618] (-) TimerEvent: {}
[3.243342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid plan(const SharedPtr&, const SharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.243470] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.243504] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<nav_msgs::msg::Path>();\n'}
[3.243530] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.243553] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[3.243576] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[3.243598] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::make_unique<nav_msgs::msg::Path\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[3.243621] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.243643] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[3.243670] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::make_unique<nav_msgs::msg::Path>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[3.243694] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.245901] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:55:115:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Knode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.245976] (my_robot_motion_planning) StderrLine: {'line': b'   55 |  void plan(const rclcpp::Publisher<nav_msgs::msg::Path>::SharedPtr& path_publisher,\x1b[01;35m\x1b[Kconst rclcpp::Node::SharedPtr& node\x1b[m\x1b[K)\n'}
[3.246005] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~\x1b[m\x1b[K\n'}
[3.247628] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid planWithSimpleSetup(const SharedPtr&, const SharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.247692] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.247730] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<nav_msgs::msg::Path>();\n'}
[3.247755] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.247778] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[3.247801] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[3.247824] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::make_unique<nav_msgs::msg::Path\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[3.247846] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.247867] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[3.247889] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::make_unique<nav_msgs::msg::Path>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[3.247910] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.247932] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:211:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kompl::geometric::PathGeometric\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.247960] (my_robot_motion_planning) StderrLine: {'line': b'  211 |          for (std::size_t i = 0; i < solution_path\x1b[01;31m\x1b[K->\x1b[m\x1b[KgetStateCount(); ++i)\n'}
[3.247982] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.248003] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:213:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kompl::geometric::PathGeometric\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.248025] (my_robot_motion_planning) StderrLine: {'line': b'  213 |             const ob::State* state = solution_path\x1b[01;31m\x1b[K->\x1b[m\x1b[KgetState(i);\n'}
[3.248047] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.306818] (-) TimerEvent: {}
[3.407153] (-) TimerEvent: {}
[3.507471] (-) TimerEvent: {}
[3.535555] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.535676] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.535713] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.535740] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.535889] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.535935] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.535965] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.535994] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536203] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:386:21:\x1b[m\x1b[K   required from here\n'}
[3.536230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536257] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.536283] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.536309] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.536335] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.536361] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.536387] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536415] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[3.536442] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.536468] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536557] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.536585] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.536613] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.536639] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.536663] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.536688] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.536772] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.536802] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536827] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536851] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:388:33:\x1b[m\x1b[K   required from here\n'}
[3.536874] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.536900] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.536923] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.536945] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.536968] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.536990] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.537013] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537039] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[3.537062] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.537084] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537108] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.537132] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.537155] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.537178] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.537201] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.537223] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.537246] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.537270] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537294] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537318] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:389:34:\x1b[m\x1b[K   required from here\n'}
[3.537342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537365] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.537387] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.537409] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.537432] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.537455] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.537477] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537501] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[3.537524] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.537548] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537570] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.537592] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.537615] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.537638] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.537661] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.537683] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.537706] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.537733] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537758] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537782] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:390:35:\x1b[m\x1b[K   required from here\n'}
[3.537806] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537830] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.537853] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.537876] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.537898] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.537920] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.537943] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.537968] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[3.537990] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.538012] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.538035] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.538057] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.538080] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.538102] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.538124] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.538147] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.538169] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.538195] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.538221] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.538246] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:391:36:\x1b[m\x1b[K   required from here\n'}
[3.538269] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.538292] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.538316] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.538340] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.538362] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.538384] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.538407] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.538430] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[3.538453] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.538476] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.578738] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.578853] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.578882] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.578907] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.578930] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.578959] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.578982] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.579018] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579045] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579071] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579094] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::SubscriptionBase; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579118] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:254:40:\x1b[m\x1b[K   required from here\n'}
[3.579141] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579166] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.579188] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.579211] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.579233] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.579256] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.579277] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579302] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.579326] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.579348] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579514] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.579582] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.579613] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.579639] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.579662] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.579684] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.579706] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.579733] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579766] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579790] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579814] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::GuardCondition; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::GuardCondition> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579839] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:275:40:\x1b[m\x1b[K   required from here\n'}
[3.579861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.579886] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.579908] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.579931] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.579953] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.579974] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.579995] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580020] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.580042] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.580063] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580392] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.580465] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.580495] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.580521] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.580549] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.580574] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.580597] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.580626] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580654] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580683] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580711] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::TimerBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::TimerBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580745] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:296:40:\x1b[m\x1b[K   required from here\n'}
[3.580771] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580797] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.580821] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.580843] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.580864] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.580885] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.580907] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.580931] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.580953] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.580974] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581196] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.581259] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.581293] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.581316] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.581340] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.581362] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.581385] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.581411] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581439] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581490] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ClientBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ClientBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581514] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:317:40:\x1b[m\x1b[K   required from here\n'}
[3.581536] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581597] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.581621] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.581643] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.581665] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.581686] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.581708] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.581731] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.581752] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.581774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582141] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.582202] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.582231] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.582255] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.582277] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.582300] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.582322] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.582355] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582385] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582408] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582431] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ServiceBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ServiceBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582456] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:338:40:\x1b[m\x1b[K   required from here\n'}
[3.582478] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582501] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.582523] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.582544] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.582565] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.582585] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.582606] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.582630] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.582651] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.582672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583135] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.583201] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.583231] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.583255] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.583277] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.583299] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.583323] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.583350] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583403] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583430] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::Waitable; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:362:40:\x1b[m\x1b[K   required from here\n'}
[3.583475] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583501] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.583523] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.583544] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.583566] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.583587] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.583608] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.583630] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.583652] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.583673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.607668] (-) TimerEvent: {}
[3.708166] (-) TimerEvent: {}
[3.715600] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.715870] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.715957] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.716056] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.716124] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.716188] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.716370] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.716562] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.716664] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717158] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717299] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::SubscriptionBase; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717331] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:243:33:\x1b[m\x1b[K   required from here\n'}
[3.717364] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717393] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.717423] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.717453] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.717481] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.717509] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.717538] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.717900] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.717948] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.717981] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718015] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.718045] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.718072] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.718098] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.718124] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.718148] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.718172] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.718204] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718257] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718499] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718539] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718571] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718603] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::GuardCondition; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::GuardCondition> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718635] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:265:33:\x1b[m\x1b[K   required from here\n'}
[3.718661] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718691] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.718715] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.718739] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.718763] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.718786] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.718811] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718859] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.718883] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.718906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.718932] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.718956] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.718979] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.719002] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.719025] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.719049] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.719072] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.719097] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719124] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719152] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719176] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719201] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719225] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::TimerBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::TimerBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719249] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:286:33:\x1b[m\x1b[K   required from here\n'}
[3.719271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719298] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.719321] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.719344] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.719367] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.719390] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.719412] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719440] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.719464] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.719487] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719512] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.719535] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.719558] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.719580] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.719602] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.719625] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.719647] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.719673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719698] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719722] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719749] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719772] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719797] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ClientBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ClientBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719821] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:307:33:\x1b[m\x1b[K   required from here\n'}
[3.719844] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.719869] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.719892] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.719914] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.719936] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.719959] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.719981] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720007] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.720029] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.720051] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720075] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.720097] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.720119] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.720141] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.720163] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.720185] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.720208] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.720239] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720266] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720298] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720326] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720352] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720377] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ServiceBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ServiceBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720402] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:328:33:\x1b[m\x1b[K   required from here\n'}
[3.720426] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720452] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.720476] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.720500] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.720522] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.720545] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.720570] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720600] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.720623] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.720647] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720671] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[3.720694] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[3.720716] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[3.720787] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[3.720813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[3.720840] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[3.720868] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.720904] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720934] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.720970] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721001] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721038] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721071] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::Waitable; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721110] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:351:33:\x1b[m\x1b[K   required from here\n'}
[3.721145] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721182] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[3.721213] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.721245] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[3.721285] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[3.721321] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[3.721357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.721391] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[3.721420] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.721457] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.808351] (-) TimerEvent: {}
[3.908671] (-) TimerEvent: {}
[3.974619] (my_robot_motion_planning) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/my_motion_planner.dir/build.make:76: CMakeFiles/my_motion_planner.dir/src/mp.cpp.o] Error 1\n'}
[3.974845] (my_robot_motion_planning) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/my_motion_planner.dir/all] Error 2\n'}
[3.975018] (my_robot_motion_planning) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.976553] (my_robot_motion_planning) CommandEnded: {'returncode': 2}
[4.009116] (-) TimerEvent: {}
[4.037530] (my_robot_motion_planning) JobEnded: {'identifier': 'my_robot_motion_planning', 'rc': 2}
[4.048813] (-) EventReactorShutdown: {}
