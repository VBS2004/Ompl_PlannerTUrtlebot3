[0.000000] (-) TimerEvent: {}
[0.000120] (my_robot_motion_planning) JobQueued: {'identifier': 'my_robot_motion_planning', 'dependencies': OrderedDict()}
[0.000160] (my_robot_motion_planning) JobStarted: {'identifier': 'my_robot_motion_planning'}
[0.028597] (my_robot_motion_planning) JobProgress: {'identifier': 'my_robot_motion_planning', 'progress': 'cmake'}
[0.028799] (my_robot_motion_planning) JobProgress: {'identifier': 'my_robot_motion_planning', 'progress': 'build'}
[0.029269] (my_robot_motion_planning) Command: {'cmd': ['/usr/bin/cmake', '--build', '/root/ros2_ws/build/my_robot_motion_planning', '--', '-j12', '-l12'], 'cwd': '/root/ros2_ws/build/my_robot_motion_planning', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_IN:en'), ('USER', 'root'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/root'), ('CHROME_DESKTOP', 'tabby.desktop'), ('OLDPWD', '/root'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/tabby.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1978'), ('SYSTEMD_EXEC_PID', '2411'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/0/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '4471'), ('DEBUGINFOD_URLS', ''), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('TABBY_PLUGINS', ''), ('LOGNAME', 'root'), ('JOURNAL_STREAM', '8:24013'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'root'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/vbs-Victus-by-HP-Gaming-Laptop-15-fa0xxx:@/tmp/.ICE-unix/2380,unix/vbs-Victus-by-HP-Gaming-Laptop-15-fa0xxx:/tmp/.ICE-unix/2380'), ('INVOCATION_ID', '41dbbc14c51f45a9b9486303333bf212'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/0'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/0/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'Tabby'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/0/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('NODE_PATH', 'undefined:/opt/Tabby/resources/builtin-plugins:/opt/Tabby/resources/app.asar/node_modules:/root/.config/tabby/plugins/node_modules'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/0/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('TABBY_CONFIG_DIRECTORY', '/root/.config/tabby'), ('PWD', '/root/ros2_ws/build/my_robot_motion_planning'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.062516] (my_robot_motion_planning) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target my_motion_planner\x1b[0m\n'}
[0.080988] (my_robot_motion_planning) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/my_motion_planner.dir/src/mp.cpp.o\x1b[0m\n'}
[0.099642] (-) TimerEvent: {}
[0.199940] (-) TimerEvent: {}
[0.228174] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:43\x1b[m\x1b[K,\n'}
[0.228316] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[0.228353] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[0.228378] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[0.228403] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/GenericParam.h:152:104:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++11 requires at least one argument for the "..." in a variadic macro\n'}
[0.228429] (my_robot_motion_planning) StderrLine: {'line': b'  152 |                     OMPL_ERROR("At least one setter or getter function must be specified for parameter"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[0.228455] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[0.263485] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[0.263609] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:110:83:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++11 requires at least one argument for the "..." in a variadic macro\n'}
[0.263644] (my_robot_motion_planning) StderrLine: {'line': b'  110 |                     OMPL_WARN("Calling setNearestNeighbors will clear all states."\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[0.263671] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[0.300119] (-) TimerEvent: {}
[0.398128] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/chrono:42\x1b[m\x1b[K,\n'}
[0.398254] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:32\x1b[m\x1b[K,\n'}
[0.398285] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[0.398319] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[0.398345] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:60:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclock_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398373] (my_robot_motion_planning) StderrLine: {'line': b'   60 |   using ::\x1b[01;31m\x1b[Kclock_t\x1b[m\x1b[K;\n'}
[0.398398] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.398422] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:61:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398447] (my_robot_motion_planning) StderrLine: {'line': b'   61 |   using ::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K;\n'}
[0.398472] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.398496] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:62:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398521] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   using ::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K;\n'}
[0.398544] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.398566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:64:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclock\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398588] (my_robot_motion_planning) StderrLine: {'line': b'   64 |   using ::\x1b[01;31m\x1b[Kclock\x1b[m\x1b[K;\n'}
[0.398611] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.398633] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:65:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdifftime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398655] (my_robot_motion_planning) StderrLine: {'line': b'   65 |   using ::\x1b[01;31m\x1b[Kdifftime\x1b[m\x1b[K;\n'}
[0.398678] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.398699] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:66:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmktime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398721] (my_robot_motion_planning) StderrLine: {'line': b'   66 |   using ::\x1b[01;31m\x1b[Kmktime\x1b[m\x1b[K;\n'}
[0.398743] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.398764] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:67:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398786] (my_robot_motion_planning) StderrLine: {'line': b'   67 |   using ::\x1b[01;31m\x1b[Ktime\x1b[m\x1b[K;\n'}
[0.398807] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.398829] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:68:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kasctime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398853] (my_robot_motion_planning) StderrLine: {'line': b'   68 |   using ::\x1b[01;31m\x1b[Kasctime\x1b[m\x1b[K;\n'}
[0.398875] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.398902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:69:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kctime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398925] (my_robot_motion_planning) StderrLine: {'line': b'   69 |   using ::\x1b[01;31m\x1b[Kctime\x1b[m\x1b[K;\n'}
[0.398947] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.398969] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:70:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgmtime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.398992] (my_robot_motion_planning) StderrLine: {'line': b'   70 |   using ::\x1b[01;31m\x1b[Kgmtime\x1b[m\x1b[K;\n'}
[0.399014] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.399034] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:71:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klocaltime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.399058] (my_robot_motion_planning) StderrLine: {'line': b'   71 |   using ::\x1b[01;31m\x1b[Klocaltime\x1b[m\x1b[K;\n'}
[0.399080] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[0.399103] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ctime:72:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstrftime\x1b[m\x1b[K\xe2\x80\x99 has not been declared in \xe2\x80\x98\x1b[01m\x1b[K::\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.399125] (my_robot_motion_planning) StderrLine: {'line': b'   72 |   using ::\x1b[01;31m\x1b[Kstrftime\x1b[m\x1b[K;\n'}
[0.399146] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.400209] (-) TimerEvent: {}
[0.401038] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:32\x1b[m\x1b[K,\n'}
[0.401110] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[0.401138] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[0.401162] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/chrono:1142:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.401188] (my_robot_motion_planning) StderrLine: {'line': b' 1142 |       static std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K\n'}
[0.401218] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.401242] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Ksize_t\x1b[m\x1b[K\n'}
[0.401275] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/chrono:1150:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::time_t\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.401308] (my_robot_motion_planning) StderrLine: {'line': b' 1150 |       from_time_t(std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K __t) noexcept\n'}
[0.401337] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.500406] (-) TimerEvent: {}
[0.600864] (-) TimerEvent: {}
[0.701186] (-) TimerEvent: {}
[0.801516] (-) TimerEvent: {}
[0.862297] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:42\x1b[m\x1b[K,\n'}
[0.862523] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[0.862562] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[0.862589] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[0.862617] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[0.862643] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[0.862669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:343:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.862696] (my_robot_motion_planning) StderrLine: {'line': b'  343 |       const std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* _M_tmb;\n'}
[0.862719] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.862743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:358:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.862767] (my_robot_motion_planning) StderrLine: {'line': b'  358 |     put_time(const std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* __tmb, const _CharT* __fmt)\n'}
[0.862791] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.862919] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:398:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.862984] (my_robot_motion_planning) StderrLine: {'line': b'  398 |       std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K*      _M_tmb;\n'}
[0.863015] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.863559] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.863625] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::\x1b[01;31m\x1b[Ktm\x1b[m\x1b[K* __tmb, const _CharT* __fmt)\n'}
[0.863656] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.863682] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/cwchar:44\x1b[m\x1b[K,\n'}
[0.863706] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/postypes.h:40\x1b[m\x1b[K,\n'}
[0.863730] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:40\x1b[m\x1b[K,\n'}
[0.863764] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[0.863790] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[0.863813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[0.863836] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[0.863858] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/wchar.h:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktm\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[0.863883] (my_robot_motion_planning) StderrLine: {'line': b'   83 | struct \x1b[01;36m\x1b[Ktm\x1b[m\x1b[K;\n'}
[0.863906] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~\x1b[m\x1b[K\n'}
[0.866036] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:42\x1b[m\x1b[K,\n'}
[0.866111] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[0.866141] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[0.866167] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[0.866192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[0.866216] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[0.866245] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K__tmb\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.866272] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* \x1b[01;31m\x1b[K__tmb\x1b[m\x1b[K, const _CharT* __fmt)\n'}
[0.866295] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.866317] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[Kconst\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.866340] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* __tmb, \x1b[01;31m\x1b[Kconst\x1b[m\x1b[K _CharT* __fmt)\n'}
[0.866362] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.866384] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/iomanip:413:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K{\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.866408] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     get_time(std::tm* __tmb, const _CharT* __fmt)\n'}
[0.866430] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.866452] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[0.866474] (my_robot_motion_planning) StderrLine: {'line': b'  414 |     \x1b[32m\x1b[K{\x1b[m\x1b[K return { __tmb, __fmt }; }\n'}
[0.866496] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[32m\x1b[K~\x1b[m\x1b[K                                             \n'}
[0.870169] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/PlannerTerminationCondition.h:43\x1b[m\x1b[K,\n'}
[0.870241] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/Planner.h:44\x1b[m\x1b[K,\n'}
[0.870272] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/PlannerIncludes.h:40\x1b[m\x1b[K,\n'}
[0.870298] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/geometric/planners/rrt/RRTConnect.h:41\x1b[m\x1b[K,\n'}
[0.870323] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:5\x1b[m\x1b[K:\n'}
[0.870347] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::string ompl::time::as_string(const point&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.870372] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:80:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.870397] (my_robot_motion_planning) StderrLine: {'line': b'   80 |             std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K pt = std::chrono::system_clock::to_time_t(p);\n'}
[0.870420] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.870442] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[0.870611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:82:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klocaltime\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Klocale\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.870676] (my_robot_motion_planning) StderrLine: {'line': b'   82 |             ss << std::put_time(std::\x1b[01;31m\x1b[Klocaltime\x1b[m\x1b[K(&pt), "%F %T");\n'}
[0.870707] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[0.870733] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Klocale\x1b[m\x1b[K\n'}
[0.872349] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:82:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpt\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.872420] (my_robot_motion_planning) StderrLine: {'line': b'   82 |             ss << std::put_time(std::localtime(&\x1b[01;31m\x1b[Kpt\x1b[m\x1b[K), "%F %T");\n'}
[0.872458] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.872484] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[32m\x1b[Kp\x1b[m\x1b[K\n'}
[0.872508] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/util/Time.h:78:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[0.872534] (my_robot_motion_planning) StderrLine: {'line': b'   78 |         inline std::string as_string(\x1b[01;35m\x1b[Kconst point &p\x1b[m\x1b[K)\n'}
[0.872561] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[0.901699] (-) TimerEvent: {}
[0.972320] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/core/utility.hpp:62\x1b[m\x1b[K,\n'}
[0.972442] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/core.hpp:3392\x1b[m\x1b[K,\n'}
[0.972474] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/local/include/opencv4/opencv2/opencv.hpp:52\x1b[m\x1b[K,\n'}
[0.972500] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:7\x1b[m\x1b[K:\n'}
[0.972525] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool std::__timed_mutex_impl<_Derived>::_M_try_lock_until(const std::chrono::time_point<std::chrono::_V2::system_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.972570] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:164:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.972607] (my_robot_motion_planning) StderrLine: {'line': b'  164 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[0.972632] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.972661] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[0.972809] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool std::__timed_mutex_impl<_Derived>::_M_try_lock_until(const std::chrono::time_point<std::chrono::_V2::steady_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.972879] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:181:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.972914] (my_robot_motion_planning) StderrLine: {'line': b'  181 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[0.972942] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.972967] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[0.980080] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/mutex:185:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.980153] (my_robot_motion_planning) StderrLine: {'line': b'  185 |           return static_cast<_Derived*>(this)->_M_clocklock(\x1b[01;31m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K,\n'}
[0.980184] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.001885] (-) TimerEvent: {}
[1.102194] (-) TimerEvent: {}
[1.202523] (-) TimerEvent: {}
[1.302890] (-) TimerEvent: {}
[1.386726] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:39\x1b[m\x1b[K,\n'}
[1.386868] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[1.386902] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.386927] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.386957] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::cv_status std::condition_variable::__wait_until_impl(std::unique_lock<std::mutex>&, const std::chrono::time_point<std::chrono::_V2::steady_clock, _Duration>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.386984] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:197:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.387010] (my_robot_motion_planning) StderrLine: {'line': b'  197 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[1.387034] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.387056] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.394782] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:201:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.394874] (my_robot_motion_planning) StderrLine: {'line': b'  201 |         _M_cond.wait_until(*__lock.mutex(), \x1b[01;31m\x1b[KCLOCK_MONOTONIC\x1b[m\x1b[K, __ts);\n'}
[1.394905] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.395199] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::cv_status std::condition_variable::__wait_until_impl(std::unique_lock<std::mutex>&, const std::chrono::time_point<std::chrono::_V2::system_clock, _Dur2>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.395263] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/condition_variable:218:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.395296] (my_robot_motion_planning) StderrLine: {'line': b'  218 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.time_since_epoch().count()),\n'}
[1.395322] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.395347] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.403056] (-) TimerEvent: {}
[1.433822] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/thread:44\x1b[m\x1b[K,\n'}
[1.433967] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:22\x1b[m\x1b[K,\n'}
[1.434005] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.434037] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.434076] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.434105] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid std::this_thread::sleep_for(const std::chrono::duration<_Rep1, _Period1>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.434137] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:79:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktime_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktime_put\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.434167] (my_robot_motion_planning) StderrLine: {'line': b'   79 |             static_cast<std::\x1b[01;31m\x1b[Ktime_t\x1b[m\x1b[K>(__s.count()),\n'}
[1.434197] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.434223] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Ktime_put\x1b[m\x1b[K\n'}
[1.437728] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/this_thread_sleep.h:82:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K::nanosleep\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[1.437818] (my_robot_motion_planning) StderrLine: {'line': b'   82 |         while (::\x1b[01;31m\x1b[Knanosleep\x1b[m\x1b[K(&__ts, &__ts) == -1 && errno == EINTR)\n'}
[1.437849] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.479324] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__struct.hpp:14\x1b[m\x1b[K,\n'}
[1.479444] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/duration.hpp:7\x1b[m\x1b[K,\n'}
[1.479476] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/duration.hpp:20\x1b[m\x1b[K,\n'}
[1.479503] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos.hpp:20\x1b[m\x1b[K,\n'}
[1.479528] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_graph_interface.hpp:32\x1b[m\x1b[K,\n'}
[1.479553] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[1.479576] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.479598] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.479620] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.479642] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.479664] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.479685] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.479707] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.479739] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.479762] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.479785] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.479807] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.479830] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:477:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kemplace_back\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.479857] (my_robot_motion_planning) StderrLine: {'line': b'  477 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.479879] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.479901] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/bounded_vector.hpp:477:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.480470] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/duration.hpp:8\x1b[m\x1b[K,\n'}
[1.480535] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/duration.hpp:20\x1b[m\x1b[K,\n'}
[1.480566] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos.hpp:20\x1b[m\x1b[K,\n'}
[1.480591] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_graph_interface.hpp:32\x1b[m\x1b[K,\n'}
[1.480616] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[1.480640] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.480663] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.480686] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.480708] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.480731] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.480753] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.480775] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.480798] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.480826] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.480849] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.480873] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.480966] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.480990] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.481012] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481036] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.481060] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::builtin_interfaces::msg::Duration>()\n'}
[1.481083] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.481105] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/duration__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.503245] (-) TimerEvent: {}
[1.507400] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.507652] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.507689] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.507718] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.507744] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.507768] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.507794] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.507832] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.507855] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.507879] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.507904] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:81:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.507932] (my_robot_motion_planning) StderrLine: {'line': b'   81 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K get() {return this->future.get();}\n'}
[1.507956] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.507981] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:81:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.517382] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.517523] (my_robot_motion_planning) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[1.517557] (my_robot_motion_planning) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.517586] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:788:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.517622] (my_robot_motion_planning) StderrLine: {'line': b'  788 |   using CallbackInfoVariant = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[1.517646] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.517670] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:794:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[1.517694] (my_robot_motion_planning) StderrLine: {'line': b'  794 |   async_send_request_impl(const Request & request, \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K value)\n'}
[1.517718] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.517742] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.517767] (my_robot_motion_planning) StderrLine: {'line': b'  808 |   std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[1.517790] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.517814] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:808:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.517838] (my_robot_motion_planning) StderrLine: {'line': b'  808 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::optional<CallbackInfoVariant>\n'}
[1.517873] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.528896] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.529016] (my_robot_motion_planning) StderrLine: {'line': b'  830 |       \x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>>\n'}
[1.529048] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.529076] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[1.529103] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[1.529127] (my_robot_motion_planning) StderrLine: {'line': b'  830 |       CallbackInfoVariant\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[1.529150] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.529175] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:830:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 5 is invalid\n'}
[1.530471] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Client<ServiceT>::handle_response(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.530541] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.530572] (my_robot_motion_planning) StderrLine: {'line': b'  550 |     std::\x1b[01;31m\x1b[Koptional\x1b[m\x1b[K<CallbackInfoVariant>\n'}
[1.530598] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.530624] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::optional\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.540646] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:550:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCallbackInfoVariant\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.540736] (my_robot_motion_planning) StderrLine: {'line': b'  550 |     std::optional<\x1b[01;31m\x1b[KCallbackInfoVariant\x1b[m\x1b[K>\n'}
[1.540768] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.549792] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:551:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koptional_pending_request\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_pending_request\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.549873] (my_robot_motion_planning) StderrLine: {'line': b'  551 |     \x1b[01;31m\x1b[Koptional_pending_request\x1b[m\x1b[K = this->get_and_erase_pending_request(request_header->sequence_number);\n'}
[1.549905] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.549931] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[32m\x1b[Kremove_pending_request\x1b[m\x1b[K\n'}
[1.551096] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.551168] (my_robot_motion_planning) StderrLine: {'line': b'  558 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<Promise>(value)) {\n'}
[1.551199] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.551225] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:558:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.551252] (my_robot_motion_planning) StderrLine: {'line': b'  558 |     if (std::holds_alternative<Promise\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[1.551278] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.552142] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.552207] (my_robot_motion_planning) StderrLine: {'line': b'  561 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackTypeValueVariant>(value)) {\n'}
[1.552239] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.552265] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:561:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.552292] (my_robot_motion_planning) StderrLine: {'line': b'  561 |     } else if (std::holds_alternative<CallbackTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[1.552318] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.553099] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.553169] (my_robot_motion_planning) StderrLine: {'line': b'  568 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<CallbackWithRequestTypeValueVariant>(value)) {\n'}
[1.553203] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.553239] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:568:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.553266] (my_robot_motion_planning) StderrLine: {'line': b'  568 |     } else if (std::holds_alternative<CallbackWithRequestTypeValueVariant\x1b[01;31m\x1b[K>\x1b[m\x1b[K(value)) {\n'}
[1.553295] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.553320] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Client<ServiceT>::remove_pending_request(int64_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.553570] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:702:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.553616] (my_robot_motion_planning) StderrLine: {'line': b'  702 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[1.553655] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.553684] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:703:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.553713] (my_robot_motion_planning) StderrLine: {'line': b'  703 |     return pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(request_id) != 0u;\n'}
[1.553742] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.553770] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_pending_requests()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.553799] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:749:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.553931] (my_robot_motion_planning) StderrLine: {'line': b'  749 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[1.553993] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.554024] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:750:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554055] (my_robot_motion_planning) StderrLine: {'line': b'  750 |     auto ret = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[1.554083] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.554109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:751:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kclear\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554140] (my_robot_motion_planning) StderrLine: {'line': b'  751 |     pending_requests_.\x1b[01;31m\x1b[Kclear\x1b[m\x1b[K();\n'}
[1.554167] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.554193] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Ksize_t rclcpp::Client<ServiceT>::prune_requests_older_than(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> > >, std::vector<long int, AllocatorT>*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.554221] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:768:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kmissing template arguments before \xe2\x80\x98\x1b[01m\x1b[Kguard\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554247] (my_robot_motion_planning) StderrLine: {'line': b'  768 |     std::lock_guard \x1b[01;31m\x1b[Kguard\x1b[m\x1b[K(pending_requests_mutex_);\n'}
[1.554278] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.554303] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:769:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554329] (my_robot_motion_planning) StderrLine: {'line': b'  769 |     auto old_size = pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[1.554355] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.554379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554405] (my_robot_motion_planning) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.\x1b[01;31m\x1b[Kbegin\x1b[m\x1b[K(), last = pending_requests_.end(); it != last; ) {\n'}
[1.554430] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.554453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.554478] (my_robot_motion_planning) StderrLine: {'line': b'  770 |     for (auto it = pending_requests_.begin(), last = pending_requests_.end(); it != \x1b[01;31m\x1b[Klast\x1b[m\x1b[K; ) {\n'}
[1.554502] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.554527] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:770:85:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[1.554552] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[1.554576] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[1.554599] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[1.554623] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[1.554647] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[1.554671] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:38:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554694] (my_robot_motion_planning) StderrLine: {'line': b'   38 | static const symbolic::SymbolExpr<internal::symbolic_last_tag> \x1b[01;36m\x1b[Klast\x1b[m\x1b[K; // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[1.554718] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.554744] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[1.554767] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[1.554791] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[1.554814] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[1.554838] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[1.554861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:180:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.554885] (my_robot_motion_planning) StderrLine: {'line': b'  180 |   EIGEN_DEPRECATED static const last_t \x1b[01;36m\x1b[Klast\x1b[m\x1b[K = Eigen::last;   // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[1.554910] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.554934] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[1.554957] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[1.554981] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[1.555005] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[1.555030] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[1.555054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:38:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::last\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.555078] (my_robot_motion_planning) StderrLine: {'line': b'   38 | static const symbolic::SymbolExpr<internal::symbolic_last_tag> \x1b[01;36m\x1b[Klast\x1b[m\x1b[K; // PLEASE use Eigen::last   instead of Eigen::placeholders::last\n'}
[1.555103] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.555127] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.555150] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.555173] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.555197] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.555220] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.555243] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.555267] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.555293] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.555316] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.555340] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.555363] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:775:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kerase\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.555388] (my_robot_motion_planning) StderrLine: {'line': b'  775 |         it = pending_requests_.\x1b[01;31m\x1b[Kerase\x1b[m\x1b[K(it);\n'}
[1.555414] (my_robot_motion_planning) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.555437] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:780:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.555465] (my_robot_motion_planning) StderrLine: {'line': b'  780 |     return old_size - pending_requests_.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K();\n'}
[1.555488] (my_robot_motion_planning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.555511] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint64_t rclcpp::Client<ServiceT>::async_send_request_impl(const Request&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.555536] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:802:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ktry_emplace\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[K((rclcpp::Client<ServiceT>*)this)->rclcpp::Client<ServiceT>::pending_requests_\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.555562] (my_robot_motion_planning) StderrLine: {'line': b'  802 |     pending_requests_.\x1b[01;31m\x1b[Ktry_emplace\x1b[m\x1b[K(\n'}
[1.555587] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.579072] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[1.579187] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[1.579218] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.579244] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.579269] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.579292] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.579324] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.579349] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.579373] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.579397] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.579420] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.579443] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.579465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.579490] (my_robot_motion_planning) StderrLine: {'line': b'   47 | struct can_be_nullptr<T, std::\x1b[01;31m\x1b[Kvoid_t\x1b[m\x1b[K<\n'}
[1.579512] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.579535] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.579559] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.579582] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:47:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::void_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.579604] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:48:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[1.579627] (my_robot_motion_planning) StderrLine: {'line': b'   48 |     decltype(std::declval<T>() == nullptr), decltype(std::declval<T &>() = nullptr)\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[1.579650] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.579673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.579695] (my_robot_motion_planning) StderrLine: {'line': b'   67 |     typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<!detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[1.579718] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.579740] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.579764] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:67:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.579786] (my_robot_motion_planning) StderrLine: {'line': b'   67 |     typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K!detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[1.579809] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.579830] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.579854] (my_robot_motion_planning) StderrLine: {'line': b'  109 |     typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<detail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[1.579877] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.579898] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.579920] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:109:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.579942] (my_robot_motion_planning) StderrLine: {'line': b'  109 |     typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[Kdetail::can_be_nullptr<CallbackT>::value, int> = 0>\n'}
[1.579964] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.579986] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:111:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.580011] (my_robot_motion_planning) StderrLine: {'line': b'  111 |   \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT && callback)\n'}
[1.580033] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.580054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:69:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ServiceT> template<class CallbackT, <typeprefixerror><anonymous> > void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.580081] (my_robot_motion_planning) StderrLine: {'line': b'   69 |   \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT && callback)\n'}
[1.580103] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.580125] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.580148] (my_robot_motion_planning) StderrLine: {'line': b'  226 |   std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[1.580171] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.580193] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.580218] (my_robot_motion_planning) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[1.580241] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.580264] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>::AnyServiceCallback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.580291] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kclass \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<ServiceT>\x1b[m\x1b[K\xe2\x80\x99 does not have any field named \xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.580318] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   : \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K(std::monostate{})\n'}
[1.580343] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.580476] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:62:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.580546] (my_robot_motion_planning) StderrLine: {'line': b'   62 |   : callback_(std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K{})\n'}
[1.580580] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.584197] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.584278] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.584312] (my_robot_motion_planning) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[1.584339] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.584366] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.584392] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.584419] (my_robot_motion_planning) StderrLine: {'line': b'   78 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.584445] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.587691] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.587776] (my_robot_motion_planning) StderrLine: {'line': b'   85 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[1.587810] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.587839] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.587865] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:85:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.587891] (my_robot_motion_planning) StderrLine: {'line': b'   85 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.587914] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.591232] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.591309] (my_robot_motion_planning) StderrLine: {'line': b'   92 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[1.591341] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.591367] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.591391] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:92:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.591418] (my_robot_motion_planning) StderrLine: {'line': b'   92 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.591442] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.594669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.594748] (my_robot_motion_planning) StderrLine: {'line': b'   99 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[1.594781] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.594809] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.594834] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:99:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.594860] (my_robot_motion_planning) StderrLine: {'line': b'   99 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.594885] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.598098] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.598173] (my_robot_motion_planning) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[1.598208] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.598237] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.601543] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.601621] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.601656] (my_robot_motion_planning) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrCallback>(callback);\n'}
[1.601683] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.601708] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.601731] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:123:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.601757] (my_robot_motion_planning) StderrLine: {'line': b'  123 |       callback_.template emplace<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.601780] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.603392] (-) TimerEvent: {}
[1.605004] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.605118] (my_robot_motion_planning) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrWithRequestHeaderCallback>(callback);\n'}
[1.605171] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.605216] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.605292] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:130:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.605409] (my_robot_motion_planning) StderrLine: {'line': b'  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.605477] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.610213] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.610456] (my_robot_motion_planning) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallback>(callback);\n'}
[1.610524] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.610584] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.610642] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:137:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.610702] (my_robot_motion_planning) StderrLine: {'line': b'  137 |       callback_.template emplace<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.610759] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.614781] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.614928] (my_robot_motion_planning) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);\n'}
[1.614997] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.615057] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.615114] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:144:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.615174] (my_robot_motion_planning) StderrLine: {'line': b'  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback);\n'}
[1.615232] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.619393] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:148:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcallback\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.619491] (my_robot_motion_planning) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K = std::forward<CallbackT>(callback);\n'}
[1.619556] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.619615] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kcallback\x1b[m\x1b[K\n'}
[1.621687] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<typename ServiceT::Response> rclcpp::AnyServiceCallback<ServiceT>::dispatch(const std::shared_ptr<rclcpp::Service<ServiceT> >&, const std::shared_ptr<rmw_request_id_s>&, std::shared_ptr<typename ServiceT::Request>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.621774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.621818] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<std::monostate>(callback_)) {\n'}
[1.621845] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.622788] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmonostate\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.622857] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::\x1b[01;31m\x1b[Kmonostate\x1b[m\x1b[K>(callback_)) {\n'}
[1.622887] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.627676] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:160:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.627752] (my_robot_motion_planning) StderrLine: {'line': b'  160 |     if (std::holds_alternative<std::monostate>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[1.627783] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.628736] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.628813] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallback>(callback_)) {\n'}
[1.628844] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.628870] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.628895] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[1.628921] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.633521] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:165:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.633598] (my_robot_motion_planning) StderrLine: {'line': b'  165 |     if (std::holds_alternative<SharedPtrDeferResponseCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[1.633629] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.634644] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.634711] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrDeferResponseCallbackWithServiceHandle>(callback_)) {\n'}
[1.634749] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.634774] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.634800] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[1.634824] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.639391] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:170:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.639464] (my_robot_motion_planning) StderrLine: {'line': b'  170 |     if (std::holds_alternative<SharedPtrDeferResponseCallbackWithServiceHandle>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[1.639495] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.640456] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.640523] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrCallback>(callback_)) {\n'}
[1.640553] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.640579] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.640604] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[1.640628] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.645259] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:177:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.645332] (my_robot_motion_planning) StderrLine: {'line': b'  177 |     if (std::holds_alternative<SharedPtrCallback>(\x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K)) {\n'}
[1.645362] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.646307] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646374] (my_robot_motion_planning) StderrLine: {'line': b'  181 |     } else if (std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrWithRequestHeaderCallback>(callback_)) {\n'}
[1.646404] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.646439] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:181:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.646465] (my_robot_motion_planning) StderrLine: {'line': b'  181 |     } else if (std::holds_alternative<SharedPtrWithRequestHeaderCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_)) {\n'}
[1.646491] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.646515] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.646539] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646562] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.646585] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.646608] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.646632] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:193:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646659] (my_robot_motion_planning) StderrLine: {'line': b'  193 |       [this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && arg) {\n'}
[1.646681] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.651261] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:198:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcallback_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.651335] (my_robot_motion_planning) StderrLine: {'line': b'  198 |       }, \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K);\n'}
[1.651365] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.657745] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:30\x1b[m\x1b[K,\n'}
[1.657838] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.657872] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.657906] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.657934] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.657959] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.658132] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.658175] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.658202] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.658227] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.658251] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.658274] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.658299] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.658325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.658355] (my_robot_motion_planning) StderrLine: {'line': b'   74 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.658381] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.658406] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.658432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.658586] (my_robot_motion_planning) StderrLine: {'line': b'   74 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.658630] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.658658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:74:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.658684] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:80:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.658713] (my_robot_motion_planning) StderrLine: {'line': b'   80 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.658737] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.658760] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.658785] (my_robot_motion_planning) StderrLine: {'line': b'   89 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.658812] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.658835] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.658858] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.658882] (my_robot_motion_planning) StderrLine: {'line': b'   89 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.658903] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.658925] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:89:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.658950] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:95:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.658974] (my_robot_motion_planning) StderrLine: {'line': b'   95 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.658996] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659018] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.659041] (my_robot_motion_planning) StderrLine: {'line': b'  105 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.659064] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.659085] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.659107] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659130] (my_robot_motion_planning) StderrLine: {'line': b'  105 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.659152] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659173] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:105:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659195] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:111:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.659217] (my_robot_motion_planning) StderrLine: {'line': b'  111 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.659238] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659261] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.659283] (my_robot_motion_planning) StderrLine: {'line': b'  120 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.659304] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.659325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.659347] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659368] (my_robot_motion_planning) StderrLine: {'line': b'  120 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.659390] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659411] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:120:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:126:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.659455] (my_robot_motion_planning) StderrLine: {'line': b'  126 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.659476] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659498] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.659520] (my_robot_motion_planning) StderrLine: {'line': b'  136 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.659541] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.659562] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.659585] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659606] (my_robot_motion_planning) StderrLine: {'line': b'  136 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.659627] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659648] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:136:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:142:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.659694] (my_robot_motion_planning) StderrLine: {'line': b'  142 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.659716] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659737] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.659761] (my_robot_motion_planning) StderrLine: {'line': b'  151 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.659783] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.659804] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.659826] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected template-argument before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659848] (my_robot_motion_planning) StderrLine: {'line': b'  151 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.659870] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659891] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:151:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.659912] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/subscription_callback_type_helper.hpp:157:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 3 is invalid\n'}
[1.659933] (my_robot_motion_planning) StderrLine: {'line': b'  157 | \x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.659954] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.659975] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:34\x1b[m\x1b[K,\n'}
[1.659996] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.660019] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.660041] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.660064] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.660087] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.660113] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.660262] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.660298] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.660326] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.660351] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.660377] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.660402] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660433] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<is_type_adapter<T>::value>>: T {};\n'}
[1.660458] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.660482] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.660507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660532] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.660556] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 3 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CustomType, class ROSMessageType, class Enable> struct rclcpp::TypeAdapter\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660583] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::enable_if_t<is_type_adapter<T>::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K>>: T {};\n'}
[1.660611] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.660638] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a type, got \xe2\x80\x98\x1b[01m\x1b[K(<expression error> < rclcpp::is_type_adapter<T>::value)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660664] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:117:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.660690] (my_robot_motion_planning) StderrLine: {'line': b'  117 | struct TypeAdapter<T, void, std::enable_if_t<is_type_adapter<T>::value\x1b[01;31m\x1b[K>>\x1b[m\x1b[K: T {};\n'}
[1.660734] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.660759] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660785] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<ImplicitTypeAdapter<T>::is_specialized::value>>\n'}
[1.660809] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.660832] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.660855] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660879] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.660902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 3 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CustomType, class ROSMessageType, class Enable> struct rclcpp::TypeAdapter\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660926] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::enable_if_t<ImplicitTypeAdapter<T>::is_specialized::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K>>\n'}
[1.660949] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                      \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.660972] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:86:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a type, got \xe2\x80\x98\x1b[01m\x1b[K(<expression error> < typename rclcpp::ImplicitTypeAdapter<CustomType>::is_specialized::value)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.660996] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_adapter.hpp:176:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.661019] (my_robot_motion_planning) StderrLine: {'line': b'  176 | struct TypeAdapter<T, void, std::enable_if_t<ImplicitTypeAdapter<T>::is_specialized::value\x1b[01;31m\x1b[K>>\x1b[m\x1b[K\n'}
[1.661042] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.661066] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.661089] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.661113] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.661152] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.661177] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.661200] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.661230] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.661254] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.661278] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.661300] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.661323] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.661346] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.661370] (my_robot_motion_planning) StderrLine: {'line': b'  171 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[1.661393] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.661416] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:171:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.661440] (my_robot_motion_planning) StderrLine: {'line': b'  171 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[1.661463] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.661485] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvariant\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.661509] (my_robot_motion_planning) StderrLine: {'line': b'  201 |   using variant_type = std::\x1b[01;31m\x1b[Kvariant\x1b[m\x1b[K<\n'}
[1.661535] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.661558] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:201:24:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::variant\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.661586] (my_robot_motion_planning) StderrLine: {'line': b'  201 |   using variant_type = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::variant<\n'}
[1.661609] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.661632] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.661658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.661681] (my_robot_motion_planning) StderrLine: {'line': b'  504 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.661704] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.661728] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:504:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.661752] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:505:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.661776] (my_robot_motion_planning) StderrLine: {'line': b'  505 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[1.661800] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.661824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[1.661848] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:506:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.661873] (my_robot_motion_planning) StderrLine: {'line': b'  506 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[1.661896] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.661919] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[1.661942] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.661965] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[1.661988] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.662011] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.664770] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.664844] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[1.664876] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.664909] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.664937] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.664963] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.664987] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:510:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.665012] (my_robot_motion_planning) StderrLine: {'line': b'  510 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.665035] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.665297] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.665366] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[1.665399] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.665425] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.665451] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.665483] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[1.665510] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.665535] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:518:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.665560] (my_robot_motion_planning) StderrLine: {'line': b'  518 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[1.665584] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.665831] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.665899] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>) {\n'}
[1.665937] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.665963] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.665987] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.666013] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.666040] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.666064] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:521:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.666089] (my_robot_motion_planning) StderrLine: {'line': b'  521 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.666112] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.666293] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.666360] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>) {\n'}
[1.666393] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.666420] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.666446] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.666472] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.666498] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.666522] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:523:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.666547] (my_robot_motion_planning) StderrLine: {'line': b'  523 |         } else if constexpr (is_ta && std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.666570] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.666791] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.666868] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[1.666902] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.666931] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.666959] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.666987] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.667012] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.667037] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:527:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.667064] (my_robot_motion_planning) StderrLine: {'line': b'  527 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.667090] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.667208] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.667277] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[1.667309] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.667337] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.667362] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.667389] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.667414] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.667438] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:528:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.667467] (my_robot_motion_planning) StderrLine: {'line': b'  528 |             std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.667490] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.667767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.667839] (my_robot_motion_planning) StderrLine: {'line': b'  529 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[1.667871] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.667897] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.667923] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:529:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.667950] (my_robot_motion_planning) StderrLine: {'line': b'  529 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.667976] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.668001] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:530:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.668025] (my_robot_motion_planning) StderrLine: {'line': b'  530 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.668050] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.668241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.668308] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[1.668340] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.668367] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.668393] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.668420] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.668444] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.668468] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:535:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.668492] (my_robot_motion_planning) StderrLine: {'line': b'  535 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.668516] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.668708] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.668780] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[1.668813] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.668839] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.668865] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.668893] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.668919] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.668946] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:536:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.668972] (my_robot_motion_planning) StderrLine: {'line': b'  536 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.668996] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.669163] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.669194] (my_robot_motion_planning) StderrLine: {'line': b'  537 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[1.669224] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.669253] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.669277] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:537:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.669301] (my_robot_motion_planning) StderrLine: {'line': b'  537 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.669324] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.669348] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:538:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.669371] (my_robot_motion_planning) StderrLine: {'line': b'  538 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.669395] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.669745] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.669816] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT\n'}
[1.669849] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.669875] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.669900] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.669926] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[1.669951] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.669976] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:543:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.670001] (my_robot_motion_planning) StderrLine: {'line': b'  543 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[1.670025] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.670186] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.670254] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {\n'}
[1.670285] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.670312] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.670337] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.670364] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.670389] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.670413] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:545:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.670438] (my_robot_motion_planning) StderrLine: {'line': b'  545 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.670462] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.670653] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.670725] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>) {\n'}
[1.670759] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.670785] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.670810] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.670839] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.670865] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.670890] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:547:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.670915] (my_robot_motion_planning) StderrLine: {'line': b'  547 |         } else if constexpr (std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.670940] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.671181] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.671249] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>) {\n'}
[1.671281] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.671307] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.671333] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.671358] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.671383] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.671407] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:549:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.671436] (my_robot_motion_planning) StderrLine: {'line': b'  549 |         } else if constexpr (std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.671461] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.671655] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.671724] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[1.671755] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.671782] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.671808] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.671834] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.671859] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.671883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:552:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.671909] (my_robot_motion_planning) StderrLine: {'line': b'  552 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.671934] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.672080] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.672148] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[1.672180] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.672207] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.672233] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.672264] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.672291] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.672317] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:553:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.672344] (my_robot_motion_planning) StderrLine: {'line': b'  553 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.672368] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.672586] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.672658] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[1.672694] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.672720] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.672746] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.672773] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.672798] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.672822] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:554:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.672847] (my_robot_motion_planning) StderrLine: {'line': b'  554 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.672872] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.673097] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.673127] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.673152] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.673176] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.673198] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.673229] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.673252] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.673275] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:558:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.673304] (my_robot_motion_planning) StderrLine: {'line': b'  558 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.673327] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.673521] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.673590] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.673622] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.673649] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.673675] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.673702] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.673726] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.673751] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:559:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.673775] (my_robot_motion_planning) StderrLine: {'line': b'  559 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.673799] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.674101] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.674175] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[1.674207] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.674234] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.674259] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.674286] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.674311] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.674336] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:560:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.674361] (my_robot_motion_planning) StderrLine: {'line': b'  560 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.674385] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.674563] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.674631] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[1.674664] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.674691] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.674717] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.674744] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.674768] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.674792] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:566:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.674818] (my_robot_motion_planning) StderrLine: {'line': b'  566 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.674842] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.675090] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.675161] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[1.675194] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.675221] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.675247] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.675274] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.675302] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.675325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:567:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.675350] (my_robot_motion_planning) StderrLine: {'line': b'  567 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.675374] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.675574] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.675646] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[1.675678] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.675710] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.675735] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.675763] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.675788] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.675813] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:568:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.675837] (my_robot_motion_planning) StderrLine: {'line': b'  568 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.675862] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.676078] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.676146] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[1.676178] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.676206] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.676231] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.676258] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.676288] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.676313] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:569:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.676339] (my_robot_motion_planning) StderrLine: {'line': b'  569 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.676364] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.676476] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.676504] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[1.676529] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.676552] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.676575] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.676599] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.676621] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.676644] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:570:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.676668] (my_robot_motion_planning) StderrLine: {'line': b'  570 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.676691] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.676953] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.676980] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.677004] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.677028] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.677051] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.677077] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.677101] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.677124] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:571:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.677147] (my_robot_motion_planning) StderrLine: {'line': b'  571 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.677171] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.677327] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.677362] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[1.677388] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.677415] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.677461] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.677489] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.677513] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.677536] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:572:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.677561] (my_robot_motion_planning) StderrLine: {'line': b'  572 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.677584] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.677991] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.678018] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.678043] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.678067] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.678091] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.678115] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.678138] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.678161] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:573:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.678185] (my_robot_motion_planning) StderrLine: {'line': b'  573 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.678208] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.678445] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.678473] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[1.678498] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.678522] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.678546] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.678570] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.678594] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.678618] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:574:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.678643] (my_robot_motion_planning) StderrLine: {'line': b'  574 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.678666] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.678938] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.678966] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[1.678989] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.679014] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.679037] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.679063] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.679086] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.679110] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:575:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.679132] (my_robot_motion_planning) StderrLine: {'line': b'  575 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.679155] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.680601] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.680634] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.680659] (my_robot_motion_planning) StderrLine: {'line': b'  604 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.680684] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.680707] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:604:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.680731] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:605:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.680756] (my_robot_motion_planning) StderrLine: {'line': b'  605 |       [&serialized_message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[1.680780] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.681150] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[1.681190] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:606:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.681227] (my_robot_motion_planning) StderrLine: {'line': b'  606 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[1.681254] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.681278] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[1.681570] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.681618] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>) {\n'}
[1.681642] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.681666] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.685072] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.685106] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefSerializedMessageCallback>) {\n'}
[1.685132] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.685155] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.685178] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.685201] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.685229] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:609:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.685252] (my_robot_motion_planning) StderrLine: {'line': b'  609 |         if constexpr (std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.685276] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.685301] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:610:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpression cannot be used as a function\n'}
[1.685328] (my_robot_motion_planning) StderrLine: {'line': b'  610 |           \x1b[01;31m\x1b[Kcallback(*serialized_message)\x1b[m\x1b[K;\n'}
[1.685351] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.685581] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.685615] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>) {\n'}
[1.685639] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.685662] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.685686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.685710] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.685732] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.685754] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:611:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.685777] (my_robot_motion_planning) StderrLine: {'line': b'  611 |         } else if constexpr (std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.685800] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.685822] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:612:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpression cannot be used as a function\n'}
[1.685844] (my_robot_motion_planning) StderrLine: {'line': b'  612 |           \x1b[01;31m\x1b[Kcallback(*serialized_message, message_info)\x1b[m\x1b[K;\n'}
[1.685866] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.686170] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.686220] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>) {\n'}
[1.686243] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.686265] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.686287] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.686310] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.686332] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.686354] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:613:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.686379] (my_robot_motion_planning) StderrLine: {'line': b'  613 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.686402] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.686677] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.686704] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>) {\n'}
[1.686727] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.686749] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.686771] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.686794] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.686816] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.686838] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:615:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.686860] (my_robot_motion_planning) StderrLine: {'line': b'  615 |         } else if constexpr (std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.686884] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.687180] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.687207] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[1.687231] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.687253] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.687276] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.687298] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.687324] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.687346] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:620:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.687369] (my_robot_motion_planning) StderrLine: {'line': b'  620 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.687390] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.687653] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.687679] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[1.687702] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.687724] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.687745] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.687768] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.687791] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.687812] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:621:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.687834] (my_robot_motion_planning) StderrLine: {'line': b'  621 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.687856] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.688152] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.688202] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>)\n'}
[1.688225] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.688249] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.688271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.688295] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.688317] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.688340] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:622:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.688363] (my_robot_motion_planning) StderrLine: {'line': b'  622 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.688385] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.688633] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.688660] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.688683] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.688705] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.688727] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.688751] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.688774] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.688797] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:626:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.688819] (my_robot_motion_planning) StderrLine: {'line': b'  626 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.688840] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.689036] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.689062] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.689085] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.689108] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.689129] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.689153] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.689174] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.689196] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:627:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.689224] (my_robot_motion_planning) StderrLine: {'line': b'  627 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.689247] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.689574] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.689613] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[1.689636] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.689659] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.689681] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.689704] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.689727] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.689749] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:628:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.689772] (my_robot_motion_planning) StderrLine: {'line': b'  628 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.689794] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.690130] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.690157] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>||\n'}
[1.690181] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.690206] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.690228] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.690251] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.690273] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.690295] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:636:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.690317] (my_robot_motion_planning) StderrLine: {'line': b'  636 |           std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.690341] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.690591] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.690618] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>||\n'}
[1.690641] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.690663] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.690686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.690708] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.690731] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.690753] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:637:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.690776] (my_robot_motion_planning) StderrLine: {'line': b'  637 |           std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.690798] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.691077] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.691103] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>||\n'}
[1.691126] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.691148] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.691173] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.691195] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.691219] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.691241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:638:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.691264] (my_robot_motion_planning) StderrLine: {'line': b'  638 |           std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.691287] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.691563] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.691589] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>||\n'}
[1.691612] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.691634] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.691657] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.691680] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.691702] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.691725] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:639:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.691747] (my_robot_motion_planning) StderrLine: {'line': b'  639 |           std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.691769] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.692036] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.692062] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[1.692085] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.692108] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.692132] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.692154] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.692177] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.692200] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:640:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.692223] (my_robot_motion_planning) StderrLine: {'line': b'  640 |           std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.692245] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.692456] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.692481] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[1.692504] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.692526] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.692548] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.692570] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.692592] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.692614] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:641:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.692636] (my_robot_motion_planning) StderrLine: {'line': b'  641 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.692658] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.693044] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.693071] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[1.693095] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.693117] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.693140] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.693163] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.693185] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.693209] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:642:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.693233] (my_robot_motion_planning) StderrLine: {'line': b'  642 |           std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.693254] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.693453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.693478] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[1.693500] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.693522] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.693545] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.693567] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.693589] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.693611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:643:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.693634] (my_robot_motion_planning) StderrLine: {'line': b'  643 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.693656] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.694032] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.694057] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[1.694081] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.694104] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.694127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.694151] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.694175] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.694197] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:644:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.694219] (my_robot_motion_planning) StderrLine: {'line': b'  644 |           std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.694241] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.694478] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.694504] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[1.694527] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.694550] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.694572] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.694596] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.694618] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.694640] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:645:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.694662] (my_robot_motion_planning) StderrLine: {'line': b'  645 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.694684] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.694961] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.694985] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[1.695008] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.695032] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.695053] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.695076] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.695098] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.695120] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:646:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.695143] (my_robot_motion_planning) StderrLine: {'line': b'  646 |           std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.695165] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.695432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.695458] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.695480] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.695502] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.695524] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.695546] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.695569] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.695590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:647:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.695613] (my_robot_motion_planning) StderrLine: {'line': b'  647 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.695634] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.695848] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.695877] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>||\n'}
[1.695900] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.695928] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.695950] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.695972] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.695994] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.696016] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:648:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.696039] (my_robot_motion_planning) StderrLine: {'line': b'  648 |           std::is_same_v<T, ConstRefSharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.696062] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.696338] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.696364] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>||\n'}
[1.696388] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.696411] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.696434] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.696457] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.696480] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.696502] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:649:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.696525] (my_robot_motion_planning) StderrLine: {'line': b'  649 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.696547] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.696905] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.696932] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>||\n'}
[1.696956] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.696979] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.697001] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.697023] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.697045] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.697067] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:650:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.697089] (my_robot_motion_planning) StderrLine: {'line': b'  650 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.697111] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.697274] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.697303] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.697326] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.697348] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.697370] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.697393] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.697415] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.697439] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:651:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.697463] (my_robot_motion_planning) StderrLine: {'line': b'  651 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.697484] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.697880] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.697911] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>||\n'}
[1.697935] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.697956] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.697980] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698002] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.698024] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.698047] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:652:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698069] (my_robot_motion_planning) StderrLine: {'line': b'  652 |           std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.698091] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.698329] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.698356] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>||\n'}
[1.698379] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.698401] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.698423] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698446] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.698468] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.698491] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:653:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698513] (my_robot_motion_planning) StderrLine: {'line': b'  653 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.698536] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.698747] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.698774] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>||\n'}
[1.698797] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.698820] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.698842] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698864] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.698887] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.698909] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:654:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.698933] (my_robot_motion_planning) StderrLine: {'line': b'  654 |           std::is_same_v<T, SharedPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.698955] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.699312] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.699341] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[1.699367] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.699392] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.699440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.699465] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.699489] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.699511] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:655:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.699534] (my_robot_motion_planning) StderrLine: {'line': b'  655 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.699555] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.699577] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::shared_ptr<const typename rclcpp::TypeAdapter<MessageT>::custom_type>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.699603] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.699626] (my_robot_motion_planning) StderrLine: {'line': b'  683 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.699648] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.699670] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:683:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.699693] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:684:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.699717] (my_robot_motion_planning) StderrLine: {'line': b'  684 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[1.699740] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.699959] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[1.699986] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:685:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.700011] (my_robot_motion_planning) StderrLine: {'line': b'  685 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[1.700034] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.700056] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[1.700435] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.700464] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[1.700487] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.700510] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.703453] (-) TimerEvent: {}
[1.703785] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.703837] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[1.703873] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.703902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.703927] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.703963] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.703989] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:689:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.704015] (my_robot_motion_planning) StderrLine: {'line': b'  689 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.704040] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.704444] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.704564] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[1.704636] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.704695] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.704750] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.704807] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[1.704950] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.705046] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:691:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.705122] (my_robot_motion_planning) StderrLine: {'line': b'  691 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[1.705193] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.705268] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.705369] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[1.705586] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.705673] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.705734] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.705793] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.705858] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.705949] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:695:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.706019] (my_robot_motion_planning) StderrLine: {'line': b'  695 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.706085] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.706149] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.706216] (my_robot_motion_planning) StderrLine: {'line': b'  696 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>\n'}
[1.706274] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.706332] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.706389] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:696:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.706447] (my_robot_motion_planning) StderrLine: {'line': b'  696 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.706505] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.706562] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:697:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.706620] (my_robot_motion_planning) StderrLine: {'line': b'  697 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.706677] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.706875] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.706964] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[1.707037] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.707099] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.707157] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.707295] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.707375] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.707437] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:702:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.707589] (my_robot_motion_planning) StderrLine: {'line': b'  702 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.707682] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.707772] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.707852] (my_robot_motion_planning) StderrLine: {'line': b'  703 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[1.707920] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.707990] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.708166] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:703:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.708248] (my_robot_motion_planning) StderrLine: {'line': b'  703 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.708321] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.708388] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:704:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.708454] (my_robot_motion_planning) StderrLine: {'line': b'  704 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.708521] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.708583] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.708647] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[1.708707] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.708821] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.708876] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.708932] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.708988] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.709075] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:709:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.709130] (my_robot_motion_planning) StderrLine: {'line': b'  709 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.709185] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.709251] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.709310] (my_robot_motion_planning) StderrLine: {'line': b'  710 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[1.709364] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.709418] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.709473] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:710:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.709530] (my_robot_motion_planning) StderrLine: {'line': b'  710 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.709639] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.709695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:711:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.709750] (my_robot_motion_planning) StderrLine: {'line': b'  711 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.709805] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.709859] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.709934] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[1.709991] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.710049] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.710210] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.710267] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.710321] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.710379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:716:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.710438] (my_robot_motion_planning) StderrLine: {'line': b'  716 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.710493] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.710547] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.710631] (my_robot_motion_planning) StderrLine: {'line': b'  717 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[1.710690] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.710747] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.710808] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:717:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.710867] (my_robot_motion_planning) StderrLine: {'line': b'  717 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.710921] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.710976] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:718:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.711035] (my_robot_motion_planning) StderrLine: {'line': b'  718 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.711149] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.711221] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.711297] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[1.711367] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.711443] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.711506] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.711573] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[1.711685] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.711755] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:723:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.711822] (my_robot_motion_planning) StderrLine: {'line': b'  723 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[1.711892] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.711958] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.712023] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[1.712086] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.712153] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.712293] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.712371] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[1.712444] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.712518] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:730:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.712590] (my_robot_motion_planning) StderrLine: {'line': b'  730 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[1.712655] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.712743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.712924] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[1.712962] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.712990] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.713018] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713046] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.713074] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713100] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:738:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713125] (my_robot_motion_planning) StderrLine: {'line': b'  738 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.713149] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.713174] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.713202] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[1.713232] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.713256] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.713280] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713314] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.713342] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713368] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:739:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713393] (my_robot_motion_planning) StderrLine: {'line': b'  739 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.713419] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713444] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.713511] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[1.713535] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.713558] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.713581] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713605] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.713628] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713653] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:747:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713676] (my_robot_motion_planning) StderrLine: {'line': b'  747 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.713699] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.713722] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.713746] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[1.713769] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.713792] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.713814] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713838] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.713860] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:748:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.713952] (my_robot_motion_planning) StderrLine: {'line': b'  748 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.713976] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.713998] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.714024] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[1.714046] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.714069] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.714091] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714114] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.714136] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714158] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:756:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714181] (my_robot_motion_planning) StderrLine: {'line': b'  756 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.714203] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.714225] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.714248] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[1.714270] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.714292] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.714315] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714337] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.714362] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714386] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:757:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714411] (my_robot_motion_planning) StderrLine: {'line': b'  757 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.714435] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714460] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.714519] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.714542] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.714564] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.714586] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714609] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.714631] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714653] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:765:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714676] (my_robot_motion_planning) StderrLine: {'line': b'  765 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.714698] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.714719] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.714742] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[1.714765] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.714788] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.714809] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714833] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.714856] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714878] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:766:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.714900] (my_robot_motion_planning) StderrLine: {'line': b'  766 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.714924] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.714981] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.715005] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[1.715028] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.715050] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.715073] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715096] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.715118] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.715139] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:776:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715162] (my_robot_motion_planning) StderrLine: {'line': b'  776 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.715183] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.715205] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.715228] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[1.715253] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.715275] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.715296] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715318] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.715340] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.715362] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:777:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715416] (my_robot_motion_planning) StderrLine: {'line': b'  777 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.715442] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.715465] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.715488] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[1.715511] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.715532] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.715555] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715578] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.715600] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.715622] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:778:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715646] (my_robot_motion_planning) StderrLine: {'line': b'  778 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.715668] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.715849] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.715878] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[1.715902] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.715925] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.715948] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.715971] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.715994] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.716016] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:779:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.716040] (my_robot_motion_planning) StderrLine: {'line': b'  779 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.716071] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.716333] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.716361] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[1.716386] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.716409] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.716432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.716456] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.716482] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.716504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:780:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.716528] (my_robot_motion_planning) StderrLine: {'line': b'  780 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.716550] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.716887] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.716918] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.716943] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.716972] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.716998] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.717027] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.717056] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.717086] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:781:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.717122] (my_robot_motion_planning) StderrLine: {'line': b'  781 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.717155] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.717345] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.717410] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[1.717456] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.717551] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.717588] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.717625] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.717661] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.717696] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:782:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.717731] (my_robot_motion_planning) StderrLine: {'line': b'  782 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.717763] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.718005] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.718070] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.718101] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.718133] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.718160] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.718188] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.718220] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.718250] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:783:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.718281] (my_robot_motion_planning) StderrLine: {'line': b'  783 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.718315] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.718421] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.718456] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[1.718485] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.718516] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.718600] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.718629] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.718654] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.718680] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:784:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.718705] (my_robot_motion_planning) StderrLine: {'line': b'  784 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.718731] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.718954] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.718985] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[1.719015] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.719046] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.719103] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.719132] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.719158] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.719183] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:785:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.719240] (my_robot_motion_planning) StderrLine: {'line': b'  785 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.719291] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.719315] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::dispatch_intra_process(std::unique_ptr<typename rclcpp::TypeAdapter<MessageT>::custom_type, typename rclcpp::detail::MessageDeleterHelper<typename rclcpp::TypeAdapter<MessageT>::custom_type, AllocatorT>::Deleter>, const rclcpp::MessageInfo&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.719343] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.719368] (my_robot_motion_planning) StderrLine: {'line': b'  813 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.719393] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.719417] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:813:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.719441] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:814:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.719467] (my_robot_motion_planning) StderrLine: {'line': b'  814 |       [&message, &message_info, this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[1.719492] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.719897] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In lambda function:\n'}
[1.719926] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:820:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecay_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdecay\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.719952] (my_robot_motion_planning) StderrLine: {'line': b'  820 |         using T = std::\x1b[01;31m\x1b[Kdecay_t\x1b[m\x1b[K<decltype(callback)>;\n'}
[1.719977] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.720001] (my_robot_motion_planning) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Kdecay\x1b[m\x1b[K\n'}
[1.720431] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.720460] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefCallback>) {\n'}
[1.720485] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.720508] (my_robot_motion_planning) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.726122] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KT\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.726205] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<\x1b[01;31m\x1b[KT\x1b[m\x1b[K, ConstRefCallback>) {\n'}
[1.726228] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.726250] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.726272] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {\n'}
[1.726294] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.726314] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:824:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.726336] (my_robot_motion_planning) StderrLine: {'line': b'  824 |         if constexpr (is_ta && std::is_same_v<T, ConstRefCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {\n'}
[1.726357] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.726824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.726900] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoCallback>) {  // NOLINT\n'}
[1.726931] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.726956] (my_robot_motion_planning) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.726988] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727014] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT\n'}
[1.727039] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.727061] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:826:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727084] (my_robot_motion_planning) StderrLine: {'line': b'  826 |         } else if constexpr (is_ta && std::is_same_v<T, ConstRefWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT\n'}
[1.727106] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.727271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.727334] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrCallback>||\n'}
[1.727368] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.727393] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.727416] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727441] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.727464] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.727485] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:830:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727509] (my_robot_motion_planning) StderrLine: {'line': b'  830 |             std::is_same_v<T, UniquePtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.727531] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.727698] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.727763] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrCallback>))\n'}
[1.727794] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.727818] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.727842] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727867] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K))\n'}
[1.727894] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.727916] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:831:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.727939] (my_robot_motion_planning) StderrLine: {'line': b'  831 |             std::is_same_v<T, SharedPtrCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.727961] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.728231] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.728294] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoCallback>||\n'}
[1.728324] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.728348] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.728372] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.728396] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.728418] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.728440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:836:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.728462] (my_robot_motion_planning) StderrLine: {'line': b'  836 |             std::is_same_v<T, UniquePtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.728483] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.728691] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.728762] (my_robot_motion_planning) StderrLine: {'line': b'  837 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoCallback>\n'}
[1.728791] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.728814] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.728837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:837:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.728862] (my_robot_motion_planning) StderrLine: {'line': b'  837 |             std::is_same_v<T, SharedPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.728892] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.728914] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:838:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.728938] (my_robot_motion_planning) StderrLine: {'line': b'  838 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.728961] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.729126] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.729158] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrCallback>||\n'}
[1.729180] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.729202] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.729229] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.729253] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.729276] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.729300] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:843:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.729323] (my_robot_motion_planning) StderrLine: {'line': b'  843 |             std::is_same_v<T, SharedConstPtrCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.729347] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.729597] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.729622] (my_robot_motion_planning) StderrLine: {'line': b'  844 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrCallback>\n'}
[1.729644] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.729666] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.729688] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:844:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.729710] (my_robot_motion_planning) StderrLine: {'line': b'  844 |             std::is_same_v<T, ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.729731] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.729753] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:845:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.729775] (my_robot_motion_planning) StderrLine: {'line': b'  845 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.729796] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.729994] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.730020] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoCallback>||\n'}
[1.730042] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.730063] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.730085] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.730106] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.730127] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.730148] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:850:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.730170] (my_robot_motion_planning) StderrLine: {'line': b'  850 |             std::is_same_v<T, SharedConstPtrWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.730193] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.730507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.730556] (my_robot_motion_planning) StderrLine: {'line': b'  851 |             std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoCallback>\n'}
[1.730578] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.730599] (my_robot_motion_planning) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.730621] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:851:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.730643] (my_robot_motion_planning) StderrLine: {'line': b'  851 |             std::is_same_v<T, ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K\n'}
[1.730663] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.730685] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:852:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.730706] (my_robot_motion_planning) StderrLine: {'line': b'  852 |         \x1b[01;31m\x1b[K)\x1b[m\x1b[K)\n'}
[1.730727] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.730920] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.730946] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[1.730969] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.730991] (my_robot_motion_planning) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.731012] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.731033] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[1.731053] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.731074] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:857:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.731095] (my_robot_motion_planning) StderrLine: {'line': b'  857 |         else if constexpr (std::is_same_v<T, ConstRefROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[1.731116] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.731492] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.731517] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefWithInfoROSMessageCallback>) {  // NOLINT[readability/braces]\n'}
[1.731539] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.731560] (my_robot_motion_planning) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.731581] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.731605] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K) {  // NOLINT[readability/braces]\n'}
[1.731626] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.731646] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:864:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.731668] (my_robot_motion_planning) StderrLine: {'line': b'  864 |         } else if constexpr (std::is_same_v<T, ConstRefWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K {  // NOLINT[readability/braces]\n'}
[1.731689] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.731861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.731889] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrROSMessageCallback>||\n'}
[1.731935] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.731958] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.731980] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.732006] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.732028] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.732050] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:872:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.732073] (my_robot_motion_planning) StderrLine: {'line': b'  872 |           std::is_same_v<T, UniquePtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.732096] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.732356] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.732382] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrROSMessageCallback>)\n'}
[1.732403] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.732424] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.732444] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.732468] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.732489] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.732509] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:873:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.732531] (my_robot_motion_planning) StderrLine: {'line': b'  873 |           std::is_same_v<T, SharedPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.732552] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.732903] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.732928] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrWithInfoROSMessageCallback>||\n'}
[1.732950] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.732970] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.732992] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.733013] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.733033] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.733054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:881:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.733074] (my_robot_motion_planning) StderrLine: {'line': b'  881 |           std::is_same_v<T, UniquePtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.733095] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.733285] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.733312] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrWithInfoROSMessageCallback>)\n'}
[1.733334] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.733354] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.733375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.733398] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.733419] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.733440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:882:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.733461] (my_robot_motion_planning) StderrLine: {'line': b'  882 |           std::is_same_v<T, SharedPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.733484] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.733828] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.733855] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrROSMessageCallback>||\n'}
[1.733877] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.733898] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.733919] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.733941] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.733962] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.733983] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:890:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.734004] (my_robot_motion_planning) StderrLine: {'line': b'  890 |           std::is_same_v<T, SharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.734025] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.734258] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.734285] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrROSMessageCallback>)\n'}
[1.734307] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.734328] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.734350] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.734371] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.734391] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.734412] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:891:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.734433] (my_robot_motion_planning) StderrLine: {'line': b'  891 |           std::is_same_v<T, ConstRefSharedConstPtrROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.734453] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.734721] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.734746] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrWithInfoROSMessageCallback>||\n'}
[1.734768] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.734789] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.734810] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.734830] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.734851] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.734871] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:899:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.734893] (my_robot_motion_planning) StderrLine: {'line': b'  899 |           std::is_same_v<T, SharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.734914] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.735168] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.735198] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>)\n'}
[1.735221] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.735243] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.735263] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.735286] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.735307] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.735330] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:900:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.735351] (my_robot_motion_planning) StderrLine: {'line': b'  900 |           std::is_same_v<T, ConstRefSharedConstPtrWithInfoROSMessageCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.735371] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.735637] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.735663] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageCallback>||\n'}
[1.735684] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.735706] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.735726] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.735748] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.735769] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.735790] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:910:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.735812] (my_robot_motion_planning) StderrLine: {'line': b'  910 |           std::is_same_v<T, ConstRefSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.735832] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.736023] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.736048] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSerializedMessageWithInfoCallback>||\n'}
[1.736070] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.736091] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.736112] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.736133] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.736154] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.736175] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:911:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.736196] (my_robot_motion_planning) StderrLine: {'line': b'  911 |           std::is_same_v<T, ConstRefSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.736216] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.736478] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.736502] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageCallback>||\n'}
[1.736524] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.736545] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.736565] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.736588] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.736609] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.736629] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:912:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.736650] (my_robot_motion_planning) StderrLine: {'line': b'  912 |           std::is_same_v<T, UniquePtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.736670] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.736926] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.736956] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, UniquePtrSerializedMessageWithInfoCallback>||\n'}
[1.736978] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.736999] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.737020] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.737042] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.737063] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.737083] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:913:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.737104] (my_robot_motion_planning) StderrLine: {'line': b'  913 |           std::is_same_v<T, UniquePtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.737125] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.737385] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.737413] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageCallback>||\n'}
[1.737435] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.737457] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.737478] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.737499] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.737520] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.737541] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:914:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.737562] (my_robot_motion_planning) StderrLine: {'line': b'  914 |           std::is_same_v<T, SharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.737583] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.737897] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.737951] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.737973] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.737993] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.738013] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738035] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.738056] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.738076] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:915:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738099] (my_robot_motion_planning) StderrLine: {'line': b'  915 |           std::is_same_v<T, SharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.738119] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.738352] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.738377] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageCallback>||\n'}
[1.738398] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.738419] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.738440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738463] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.738484] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.738507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:916:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738529] (my_robot_motion_planning) StderrLine: {'line': b'  916 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.738551] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.738803] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.738830] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>||\n'}
[1.738852] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.738873] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.738894] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738916] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.738937] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.738958] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:917:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.738979] (my_robot_motion_planning) StderrLine: {'line': b'  917 |           std::is_same_v<T, ConstRefSharedConstPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.738999] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.739254] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.739280] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageCallback>||\n'}
[1.739301] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.739323] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.739344] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.739366] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K||\n'}
[1.739387] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.739408] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:918:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K||\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.739429] (my_robot_motion_planning) StderrLine: {'line': b'  918 |           std::is_same_v<T, SharedPtrSerializedMessageCallback>\x1b[01;31m\x1b[K||\x1b[m\x1b[K\n'}
[1.739451] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.739706] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_same_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_same\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.739732] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::\x1b[01;31m\x1b[Kis_same_v\x1b[m\x1b[K<T, SharedPtrSerializedMessageWithInfoCallback>)\n'}
[1.739754] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.739776] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kis_same\x1b[m\x1b[K\n'}
[1.739797] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.739818] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K)\n'}
[1.739839] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.739860] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:919:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.739881] (my_robot_motion_planning) StderrLine: {'line': b'  919 |           std::is_same_v<T, SharedPtrSerializedMessageWithInfoCallback>\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.739902] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.741280] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.741310] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.741332] (my_robot_motion_planning) StderrLine: {'line': b'  938 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrCallback>(callback_variant_) ||\n'}
[1.741353] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.741374] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.741396] (my_robot_motion_planning) StderrLine: {'line': b'  938 |       std::holds_alternative<SharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.741416] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.742375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.742401] (my_robot_motion_planning) StderrLine: {'line': b'  939 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrWithInfoCallback>(callback_variant_) ||\n'}
[1.742423] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.742444] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.742465] (my_robot_motion_planning) StderrLine: {'line': b'  939 |       std::holds_alternative<SharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.742486] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.743236] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.743262] (my_robot_motion_planning) StderrLine: {'line': b'  940 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrCallback>(callback_variant_) ||\n'}
[1.743283] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.743304] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:940:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.743325] (my_robot_motion_planning) StderrLine: {'line': b'  940 |       std::holds_alternative<ConstRefSharedConstPtrCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.743346] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.744099] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.744125] (my_robot_motion_planning) StderrLine: {'line': b'  941 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrWithInfoCallback>(callback_variant_);\n'}
[1.744147] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.744169] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:941:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.744190] (my_robot_motion_planning) StderrLine: {'line': b'  941 |       std::holds_alternative<ConstRefSharedConstPtrWithInfoCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[1.744211] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.744979] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::is_serialized_message_callback() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.745004] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.745027] (my_robot_motion_planning) StderrLine: {'line': b'  949 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSerializedMessageCallback>(callback_variant_) ||\n'}
[1.745049] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.745069] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:949:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.745091] (my_robot_motion_planning) StderrLine: {'line': b'  949 |       std::holds_alternative<ConstRefSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.745112] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.745832] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.745861] (my_robot_motion_planning) StderrLine: {'line': b'  950 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<UniquePtrSerializedMessageCallback>(callback_variant_) ||\n'}
[1.745883] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.745904] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:950:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.745927] (my_robot_motion_planning) StderrLine: {'line': b'  950 |       std::holds_alternative<UniquePtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.745948] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.746684] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.746709] (my_robot_motion_planning) StderrLine: {'line': b'  951 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[1.746730] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.746751] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:951:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.746772] (my_robot_motion_planning) StderrLine: {'line': b'  951 |       std::holds_alternative<SharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.746793] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.747522] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.747548] (my_robot_motion_planning) StderrLine: {'line': b'  952 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<ConstRefSharedConstPtrSerializedMessageCallback>(callback_variant_) ||\n'}
[1.747569] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.747590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:952:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.747612] (my_robot_motion_planning) StderrLine: {'line': b'  952 |       std::holds_alternative<ConstRefSharedConstPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_) ||\n'}
[1.747633] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.748373] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kholds_alternative\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.748399] (my_robot_motion_planning) StderrLine: {'line': b'  953 |       std::\x1b[01;31m\x1b[Kholds_alternative\x1b[m\x1b[K<SharedPtrSerializedMessageCallback>(callback_variant_);\n'}
[1.748420] (my_robot_motion_planning) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.748441] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:953:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.748462] (my_robot_motion_planning) StderrLine: {'line': b'  953 |       std::holds_alternative<SharedPtrSerializedMessageCallback\x1b[01;31m\x1b[K>\x1b[m\x1b[K(callback_variant_);\n'}
[1.748483] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.748504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::register_callback_for_tracing()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.748525] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvisit\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.748546] (my_robot_motion_planning) StderrLine: {'line': b'  960 |     std::\x1b[01;31m\x1b[Kvisit\x1b[m\x1b[K(\n'}
[1.748566] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.748587] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:960:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::visit\x1b[m\x1b[K\xe2\x80\x99 is only available from C++17 onwards\n'}
[1.748608] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:961:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.748635] (my_robot_motion_planning) StderrLine: {'line': b'  961 |       [this](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K && callback) {\n'}
[1.748656] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.755988] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process_buffer.hpp:28\x1b[m\x1b[K,\n'}
[1.756027] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/subscription_intra_process.hpp:31\x1b[m\x1b[K,\n'}
[1.756093] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[1.756115] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:34\x1b[m\x1b[K,\n'}
[1.756137] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.756157] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.756178] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.756199] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.756230] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.756251] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.756272] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.756294] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.756315] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.756335] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.756356] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::experimental::buffers::IntraProcessBuffer<MessageT, Alloc, MessageDeleter>::UniquePtr rclcpp::experimental::create_intra_process_buffer(rclcpp::IntraProcessBufferType, const rclcpp::QoS&, std::shared_ptr<_Tp>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.756380] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.756404] (my_robot_motion_planning) StderrLine: {'line': b'   56 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::RingBufferImplementation<BufferT>>(\n'}
[1.756428] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.756450] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.756475] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:56:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.756497] (my_robot_motion_planning) StderrLine: {'line': b'   56 |           std::make_unique<rclcpp::experimental::buffers::RingBufferImplementation<BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[1.756519] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.756541] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:61:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.756564] (my_robot_motion_planning) StderrLine: {'line': b'   61 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc,\n'}
[1.756587] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.756610] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:61:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.756632] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:62:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.756654] (my_robot_motion_planning) StderrLine: {'line': b'   62 |             Deleter, BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[1.756676] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.756698] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.756721] (my_robot_motion_planning) StderrLine: {'line': b'   73 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::RingBufferImplementation<BufferT>>(\n'}
[1.756743] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.756765] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.756788] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:73:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.756811] (my_robot_motion_planning) StderrLine: {'line': b'   73 |           std::make_unique<rclcpp::experimental::buffers::RingBufferImplementation<BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[1.756832] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.756854] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:78:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.756876] (my_robot_motion_planning) StderrLine: {'line': b'   78 |           std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc,\n'}
[1.756896] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.756916] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:78:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.756938] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/create_intra_process_buffer.hpp:79:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.756959] (my_robot_motion_planning) StderrLine: {'line': b'   79 |             Deleter, BufferT\x1b[01;31m\x1b[K>>\x1b[m\x1b[K(\n'}
[1.756979] (my_robot_motion_planning) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[1.770932] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:34\x1b[m\x1b[K,\n'}
[1.771043] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.771072] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.771096] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.771128] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.771151] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.771173] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.771197] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.771221] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.771244] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.771266] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.771287] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.771310] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:515:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.771333] (my_robot_motion_planning) StderrLine: {'line': b'  515 |   mutable std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K mutex_;\n'}
[1.771356] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.771378] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:515:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.771402] (my_robot_motion_planning) StderrLine: {'line': b'  515 |   mutable \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::shared_timed_mutex mutex_;\n'}
[1.771424] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.775284] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::IntraProcessManager::do_intra_process_publish(uint64_t, std::unique_ptr<MessageT, Deleter>, typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.775369] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_lock\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.775400] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::\x1b[01;31m\x1b[Kshared_lock\x1b[m\x1b[K<std::shared_timed_mutex> lock(mutex_);\n'}
[1.775424] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.775448] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_lock\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.775477] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.775502] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K> lock(mutex_);\n'}
[1.775523] (my_robot_motion_planning) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.775546] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.779539] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmutex_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.779625] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::shared_timed_mutex> lock(\x1b[01;31m\x1b[Kmutex_\x1b[m\x1b[K);\n'}
[1.779654] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.779679] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.779712] (my_robot_motion_planning) StderrLine: {'line': b'  192 |     std::shared_lock<std::shared_timed_mutex> \x1b[01;31m\x1b[Klock\x1b[m\x1b[K(mutex_);\n'}
[1.779735] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.779757] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:192:47:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K(if you use \xe2\x80\x98\x1b[01m\x1b[K-fpermissive\x1b[m\x1b[K\xe2\x80\x99, G++ will accept your code, but allowing the use of an undeclared name is deprecated)\n'}
[1.780599] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::experimental::IntraProcessManager::do_intra_process_publish_and_return_shared(uint64_t, std::unique_ptr<MessageT, Deleter>, typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.780669] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_lock\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.780699] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::\x1b[01;31m\x1b[Kshared_lock\x1b[m\x1b[K<std::shared_timed_mutex> lock(mutex_);\n'}
[1.780723] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.780746] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_lock\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.780771] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kshared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.780794] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::\x1b[01;31m\x1b[Kshared_timed_mutex\x1b[m\x1b[K> lock(mutex_);\n'}
[1.780817] (my_robot_motion_planning) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.780839] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::shared_timed_mutex\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.784496] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmutex_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.784567] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::shared_timed_mutex> lock(\x1b[01;31m\x1b[Kmutex_\x1b[m\x1b[K);\n'}
[1.784596] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.784620] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/intra_process_manager.hpp:255:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.784656] (my_robot_motion_planning) StderrLine: {'line': b'  255 |     std::shared_lock<std::shared_timed_mutex> \x1b[01;31m\x1b[Klock\x1b[m\x1b[K(mutex_);\n'}
[1.784678] (my_robot_motion_planning) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.803649] (-) TimerEvent: {}
[1.804153] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/time.hpp:8\x1b[m\x1b[K,\n'}
[1.804256] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/time.hpp:18\x1b[m\x1b[K,\n'}
[1.804296] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/clock.hpp:24\x1b[m\x1b[K,\n'}
[1.804323] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:27\x1b[m\x1b[K,\n'}
[1.804347] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:30\x1b[m\x1b[K,\n'}
[1.804371] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.804394] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.804417] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.804440] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.804463] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.804486] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.804510] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.804534] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.804563] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.804587] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.804611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.804639] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.804664] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.804689] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.804715] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.804739] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::builtin_interfaces::msg::Time>()\n'}
[1.804762] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.804785] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/builtin_interfaces/builtin_interfaces/msg/detail/time__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.840718] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/set_parameters_result.hpp:8\x1b[m\x1b[K,\n'}
[1.840848] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/qos_overriding_options.hpp:28\x1b[m\x1b[K,\n'}
[1.840881] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:30\x1b[m\x1b[K,\n'}
[1.840906] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[1.840931] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.840953] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.840976] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.840998] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.841020] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.841041] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.841063] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.841084] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.841106] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.841127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.841161] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.841186] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.841214] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.841241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.841266] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::SetParametersResult>()\n'}
[1.841289] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.841311] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/set_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.846067] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:45\x1b[m\x1b[K,\n'}
[1.846167] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.846197] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.846221] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.846244] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.846266] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.846288] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.846310] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.846332] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.846354] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.846377] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.846401] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[1.846423] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.846445] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[1.846468] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.846491] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[1.846513] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.846535] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[1.846556] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_options.hpp:94:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.846578] (my_robot_motion_planning) StderrLine: {'line': b'   94 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[1.846599] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.848174] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:46\x1b[m\x1b[K,\n'}
[1.848243] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.848273] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.848297] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.848321] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.848343] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.848366] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.848388] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.848409] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.848431] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.848452] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:67:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kremove_cv_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kremove_cv\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.848482] (my_robot_motion_planning) StderrLine: {'line': b'   67 |   using type = typename std::\x1b[01;31m\x1b[Kremove_cv_t\x1b[m\x1b[K<std::remove_reference_t<MessageT>>;\n'}
[1.848504] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.848525] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kremove_cv\x1b[m\x1b[K\n'}
[1.848547] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.848570] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<!std::is_integral<\n'}
[1.848591] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.848613] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.848635] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<!std::is_integral<\n'}
[1.848656] (my_robot_motion_planning) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.848677] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_traits.hpp:82:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.848698] (my_robot_motion_planning) StderrLine: {'line': b'   82 |   typename = std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K!std::is_integral<\n'}
[1.848719] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.851556] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/metrics_message.hpp:8\x1b[m\x1b[K,\n'}
[1.851625] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/collector/generate_statistics_message.hpp:21\x1b[m\x1b[K,\n'}
[1.851654] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:23\x1b[m\x1b[K,\n'}
[1.851678] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.851700] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.851724] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.851747] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.851771] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.851792] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.851813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.851834] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.851855] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.851876] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.851902] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:125:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.851927] (my_robot_motion_planning) StderrLine: {'line': b'  125 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.851950] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.851971] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:125:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.851995] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:129:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.852017] (my_robot_motion_planning) StderrLine: {'line': b'  129 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::statistics_msgs::msg::MetricsMessage>()\n'}
[1.852039] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.852060] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/statistics_msgs/statistics_msgs/msg/detail/metrics_message__builder.hpp:129:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.857776] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:36\x1b[m\x1b[K,\n'}
[1.857856] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.857892] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.857917] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.857941] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.857965] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.857986] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.858008] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.858030] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.858052] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.858073] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.858097] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.858117] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.858141] (my_robot_motion_planning) StderrLine: {'line': b'   44 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.858162] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.858183] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.858205] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:44:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.858226] (my_robot_motion_planning) StderrLine: {'line': b'   44 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.858247] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.858267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.858289] (my_robot_motion_planning) StderrLine: {'line': b'   59 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.858310] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.858330] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.858352] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:59:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.858373] (my_robot_motion_planning) StderrLine: {'line': b'   59 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.858394] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.858414] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.858435] (my_robot_motion_planning) StderrLine: {'line': b'   82 | typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.858455] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.858476] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.858497] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/get_message_type_support_handle.hpp:82:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.858519] (my_robot_motion_planning) StderrLine: {'line': b'   82 | typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.858539] (my_robot_motion_planning) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.861504] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:42\x1b[m\x1b[K,\n'}
[1.861605] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.861668] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.861725] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.861941] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.862006] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.862066] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.862123] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.862189] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.862248] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.862302] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.862357] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.862411] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kis_void_v\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kis_void\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.862469] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::\x1b[01;31m\x1b[Kis_void_v\x1b[m\x1b[K<typename std::allocator_traits<Allocator>::value_type>,\n'}
[1.862524] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.862578] (my_robot_motion_planning) StderrLine: {'line': b'      |          \x1b[32m\x1b[Kis_void\x1b[m\x1b[K\n'}
[1.862632] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.862688] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type\x1b[01;31m\x1b[K>\x1b[m\x1b[K,\n'}
[1.862742] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.862801] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K(\x1b[m\x1b[K\n'}
[1.862855] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher_options.hpp:69:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.862913] (my_robot_motion_planning) StderrLine: {'line': b'   69 |     std::is_void_v<typename std::allocator_traits<Allocator>::value_type>\x1b[01;31m\x1b[K,\x1b[m\x1b[K\n'}
[1.862968] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.863023] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.863080] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.863137] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.863193] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.863249] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.863306] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.863363] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.863425] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.863482] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.863539] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.863595] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.863652] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.863710] (my_robot_motion_planning) StderrLine: {'line': b'  247 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.863767] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.863824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.863881] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:247:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.863938] (my_robot_motion_planning) StderrLine: {'line': b'  247 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.863995] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.864273] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.864339] (my_robot_motion_planning) StderrLine: {'line': b'  288 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.864398] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.864462] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.864519] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:288:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.864580] (my_robot_motion_planning) StderrLine: {'line': b'  288 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.864636] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.864690] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.864751] (my_robot_motion_planning) StderrLine: {'line': b'  318 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.864805] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.864860] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.864914] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:318:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.864969] (my_robot_motion_planning) StderrLine: {'line': b'  318 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.865022] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.865076] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.865131] (my_robot_motion_planning) StderrLine: {'line': b'  360 |   typename std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.865185] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.865405] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.865449] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:360:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.865484] (my_robot_motion_planning) StderrLine: {'line': b'  360 |   typename std::enable_if_t\x1b[01;31m\x1b[K<\x1b[m\x1b[K\n'}
[1.865507] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.865531] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.865558] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.865582] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::\x1b[01;31m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K<MessageT>(),\n'}
[1.865605] (my_robot_motion_planning) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.865627] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:15:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[1.865649] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:18\x1b[m\x1b[K,\n'}
[1.865670] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[1.865691] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.865713] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.865734] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.865755] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.865775] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.865796] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.865817] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.865838] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.865858] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.865878] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.865901] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/message_type_support_decl.hpp:30:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_runtime_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.865923] (my_robot_motion_planning) StderrLine: {'line': b'   30 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[1.865946] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.865967] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:21\x1b[m\x1b[K,\n'}
[1.865988] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[1.866012] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.866033] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.866055] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.866076] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.866097] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.866118] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.866139] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.866160] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.866180] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.866201] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.866222] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_typesupport_cpp/message_type_support.hpp:25:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_typesupport_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.866244] (my_robot_motion_planning) StderrLine: {'line': b'   25 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[1.866265] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.866286] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.866307] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.866328] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.866349] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.866370] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.866391] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.866412] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.866434] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.866455] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.866476] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.866498] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.866518] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.866540] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::get_message_type_support_handle<MessageT\x1b[01;31m\x1b[K>\x1b[m\x1b[K(),\n'}
[1.866560] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.866582] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:133:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.866603] (my_robot_motion_planning) StderrLine: {'line': b'  133 |       rclcpp::get_message_type_support_handle<MessageT>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K,\n'}
[1.866623] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.870483] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.870573] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.870603] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.870627] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.870649] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.870671] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.870693] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.870715] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.870737] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.870759] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.870780] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual void rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.870808] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:153:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<statistics_msgs::msg::MetricsMessage_<std::allocator<void> > >::publish(statistics_msgs::msg::MetricsMessage_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.870834] (my_robot_motion_planning) StderrLine: {'line': b'  153 |       \x1b[01;31m\x1b[Kpublisher_->publish(msg)\x1b[m\x1b[K;\n'}
[1.870856] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[1.870877] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.870898] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.870918] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.870939] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.870960] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.870981] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.871002] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.871022] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.871043] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.871065] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.871087] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.871109] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.871133] (my_robot_motion_planning) StderrLine: {'line': b'  383 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[1.871155] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.871177] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[1.871202] (my_robot_motion_planning) StderrLine: {'line': b'  383 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[1.871224] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.871247] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.871272] (my_robot_motion_planning) StderrLine: {'line': b'  389 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[1.871293] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.871315] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.871336] (my_robot_motion_planning) StderrLine: {'line': b'  389 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[1.871358] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.871379] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = statistics_msgs::msg::MetricsMessage_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.871404] (my_robot_motion_planning) StderrLine: {'line': b'  403 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[1.871426] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.871448] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstatistics_msgs::msg::MetricsMessage_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<statistics_msgs::msg::MetricsMessage_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.871473] (my_robot_motion_planning) StderrLine: {'line': b'  403 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[1.871496] (my_robot_motion_planning) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.871718] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.871780] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.871810] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.871833] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.871857] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.871883] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.871907] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.871931] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.871953] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.871976] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.871998] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::bring_up()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.872023] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.872046] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<ReceivedMessageAge>();\n'}
[1.872069] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.872089] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.872250] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.872294] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::make_unique<ReceivedMessageAge\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[1.872324] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.872348] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:182:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.872372] (my_robot_motion_planning) StderrLine: {'line': b'  182 |     auto received_message_age = std::make_unique<ReceivedMessageAge>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.872395] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.872417] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.872440] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<ReceivedMessagePeriod>();\n'}
[1.872463] (my_robot_motion_planning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.872485] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.872507] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.872529] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::make_unique<ReceivedMessagePeriod\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[1.872552] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.872574] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:186:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.872600] (my_robot_motion_planning) StderrLine: {'line': b'  186 |     auto received_message_period = std::make_unique<ReceivedMessagePeriod>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.872621] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.872642] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.872664] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.872685] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.872706] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.872727] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.872749] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.872770] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.872792] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.872813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.872834] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.872856] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.872879] (my_robot_motion_planning) StderrLine: {'line': b'  293 |   std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.872902] (my_robot_motion_planning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.872923] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:293:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.872944] (my_robot_motion_planning) StderrLine: {'line': b'  293 |   \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[1.872965] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.888908] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/list_parameters_result.hpp:8\x1b[m\x1b[K,\n'}
[1.889029] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:35\x1b[m\x1b[K,\n'}
[1.889059] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.889091] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.889114] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.889136] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.889159] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.889184] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.889215] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.889239] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.889265] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.889290] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ListParametersResult>()\n'}
[1.889313] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.889337] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/list_parameters_result__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.897400] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_descriptor.hpp:8\x1b[m\x1b[K,\n'}
[1.897497] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:36\x1b[m\x1b[K,\n'}
[1.897536] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.897565] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.897590] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.897615] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.897637] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:157:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.897663] (my_robot_motion_planning) StderrLine: {'line': b'  157 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.897687] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.897711] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:157:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.897736] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:161:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.897760] (my_robot_motion_planning) StderrLine: {'line': b'  161 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterDescriptor>()\n'}
[1.897784] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.897806] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_descriptor__builder.hpp:161:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.903814] (-) TimerEvent: {}
[1.919197] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_event.hpp:8\x1b[m\x1b[K,\n'}
[1.919421] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:37\x1b[m\x1b[K,\n'}
[1.919455] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.919481] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.919510] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.919539] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.919569] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:109:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.919623] (my_robot_motion_planning) StderrLine: {'line': b'  109 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.919647] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.919672] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:109:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.919698] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:113:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.919722] (my_robot_motion_planning) StderrLine: {'line': b'  113 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterEvent>()\n'}
[1.919745] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.919768] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_event__builder.hpp:113:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.937578] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[1.937710] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/generic_publisher.hpp:27\x1b[m\x1b[K,\n'}
[1.937742] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:45\x1b[m\x1b[K,\n'}
[1.937768] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.937792] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.937816] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.937839] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.937860] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:\x1b[m\x1b[K In lambda function:\n'}
[1.937883] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.937913] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::\x1b[01;31m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K<MessageT>(),\n'}
[1.937935] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.937958] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[1.937981] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:18\x1b[m\x1b[K,\n'}
[1.938002] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[1.938024] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.938045] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.938066] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.938087] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.938108] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.938129] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.938150] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.938171] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.938192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.938212] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.938233] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_runtime_cpp/message_type_support_decl.hpp:30:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_runtime_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.938256] (my_robot_motion_planning) StderrLine: {'line': b'   30 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[1.938280] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.938301] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/type_support_decl.hpp:21\x1b[m\x1b[K,\n'}
[1.938322] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:44\x1b[m\x1b[K,\n'}
[1.938343] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.938363] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.938385] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.938405] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.938426] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.938447] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.938469] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.938490] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.938511] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.938532] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.938553] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rosidl_runtime_cpp/rosidl_typesupport_cpp/message_type_support.hpp:25:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Krosidl_typesupport_cpp::get_message_type_support_handle\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.938575] (my_robot_motion_planning) StderrLine: {'line': b'   25 | const rosidl_message_type_support_t * \x1b[01;36m\x1b[Kget_message_type_support_handle\x1b[m\x1b[K();\n'}
[1.938597] (my_robot_motion_planning) StderrLine: {'line': b'      |                                       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.938618] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[1.938638] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/generic_publisher.hpp:27\x1b[m\x1b[K,\n'}
[1.938659] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:45\x1b[m\x1b[K,\n'}
[1.938680] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.938701] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.938721] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.938742] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.938763] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.938786] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::get_message_type_support_handle<MessageT\x1b[01;31m\x1b[K>\x1b[m\x1b[K(),\n'}
[1.938807] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.938828] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:109:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.938849] (my_robot_motion_planning) StderrLine: {'line': b'  109 |         rclcpp::get_message_type_support_handle<MessageT>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K,\n'}
[1.938869] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.969938] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter.hpp:8\x1b[m\x1b[K,\n'}
[1.970060] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:24\x1b[m\x1b[K,\n'}
[1.970099] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[1.970125] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[1.970148] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.970170] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.970192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.970217] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.970241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[1.970264] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.970290] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.970470] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.970512] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.970541] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.970566] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::Parameter>()\n'}
[1.970589] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.970612] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.970656] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_type.hpp:8\x1b[m\x1b[K,\n'}
[1.970679] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:25\x1b[m\x1b[K,\n'}
[1.970701] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[1.970724] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[1.970750] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[1.970772] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.970795] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.970816] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.970838] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.970859] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:25:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.970881] (my_robot_motion_planning) StderrLine: {'line': b'   25 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.970902] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.970924] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:25:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.970947] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:29:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.970970] (my_robot_motion_planning) StderrLine: {'line': b'   29 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterType>()\n'}
[1.970992] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.971012] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_type__builder.hpp:29:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.972486] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/parameter_value.hpp:8\x1b[m\x1b[K,\n'}
[1.972549] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:26\x1b[m\x1b[K,\n'}
[1.972579] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[1.972603] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[1.972626] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[1.972653] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.972675] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.972699] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.972721] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.972743] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:189:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.972768] (my_robot_motion_planning) StderrLine: {'line': b'  189 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[1.972790] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.972812] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:189:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.972835] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:193:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.972857] (my_robot_motion_planning) StderrLine: {'line': b'  193 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::msg::ParameterValue>()\n'}
[1.972879] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.972900] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/msg/detail/parameter_value__builder.hpp:193:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.974328] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[1.974393] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[1.974425] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.974451] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.974477] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.974502] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.974526] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:46:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.974551] (my_robot_motion_planning) StderrLine: {'line': b'   46 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.974576] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.974599] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:46:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.974760] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:116:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.974800] (my_robot_motion_planning) StderrLine: {'line': b'  116 |   \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[1.974832] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.974859] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:124:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.974917] (my_robot_motion_planning) StderrLine: {'line': b'  124 |   \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[1.974942] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.974964] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:236:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.974989] (my_robot_motion_planning) StderrLine: {'line': b'  236 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.975010] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.975032] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:236:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.975054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:245:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.975079] (my_robot_motion_planning) StderrLine: {'line': b'  245 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.975100] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.975121] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:245:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.975144] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:254:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kget_value_helper\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.975165] (my_robot_motion_planning) StderrLine: {'line': b'  254 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.975187] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.975208] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:254:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.975231] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:269:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto)\x1b[m\x1b[K\xe2\x80\x99 type specifier only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.975255] (my_robot_motion_planning) StderrLine: {'line': b'  269 | \x1b[01;31m\x1b[Kdecltype\x1b[m\x1b[K(auto)\n'}
[1.975277] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.991404] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.991524] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.991556] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.991581] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.991607] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:420:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.991632] (my_robot_motion_planning) StderrLine: {'line': b'  420 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.991655] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.991678] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:420:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991704] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:433:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.991728] (my_robot_motion_planning) StderrLine: {'line': b'  433 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[1.991750] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.991773] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:433:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.998600] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:29\x1b[m\x1b[K,\n'}
[1.998706] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:41\x1b[m\x1b[K,\n'}
[1.998740] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[1.998767] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.998922] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.998958] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.998986] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[1.999012] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:45:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kallowed_policies\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.999150] (my_robot_motion_planning) StderrLine: {'line': b'   45 |   static constexpr \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K allowed_policies()\n'}
[1.999195] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.999222] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:45:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.999248] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:65:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kallowed_policies\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[1.999274] (my_robot_motion_planning) StderrLine: {'line': b'   65 |   static constexpr \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K allowed_policies()\n'}
[1.999297] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.999320] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:65:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.999343] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:132:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.999366] (my_robot_motion_planning) StderrLine: {'line': b'  132 | std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.999388] (my_robot_motion_planning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.999410] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:132:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.999432] (my_robot_motion_planning) StderrLine: {'line': b'  132 | \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[1.999455] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.999476] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:198:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kenable_if_t\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99 does not name a template type\n'}
[1.999499] (my_robot_motion_planning) StderrLine: {'line': b'  198 | std::\x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K<\n'}
[1.999522] (my_robot_motion_planning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.999544] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/qos_parameters.hpp:198:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::enable_if_t\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[1.999565] (my_robot_motion_planning) StderrLine: {'line': b'  198 | \x1b[01;36m\x1b[Kstd\x1b[m\x1b[K::enable_if_t<\n'}
[1.999587] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.003478] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:41\x1b[m\x1b[K,\n'}
[2.003548] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.003576] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.003600] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.003624] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.003646] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.003668] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::detail::create_publisher(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.003693] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_publisher.hpp:58:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.003717] (my_robot_motion_planning) StderrLine: {'line': b'   58 |     rclcpp::detail::\x1b[01;31m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K(\n'}
[2.003740] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.003867] (-) TimerEvent: {}
[2.007044] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:43\x1b[m\x1b[K,\n'}
[2.007162] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.007193] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.007218] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.007241] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.007264] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.007287] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.007321] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:130:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.007349] (my_robot_motion_planning) StderrLine: {'line': b'  130 |     rclcpp::detail::\x1b[01;31m\x1b[Kdeclare_qos_parameters\x1b[m\x1b[K(\n'}
[2.007370] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.007925] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.007995] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.008135] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.008200] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.008233] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.008261] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.008287] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:194:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.008317] (my_robot_motion_planning) StderrLine: {'line': b'  194 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.008344] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.008370] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:194:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.008398] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:214:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdeclare_parameter\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.008425] (my_robot_motion_planning) StderrLine: {'line': b'  214 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.008452] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.008633] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:214:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.008678] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_RealType> rclcpp::Node::declare_parameters(const string&, const std::map<std::__cxx11::basic_string<char>, ParameterT>&, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.008707] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:246:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.008746] (my_robot_motion_planning) StderrLine: {'line': b'  246 |     [this, &normalized_namespace, ignore_overrides](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K element) {\n'}
[2.008774] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.008800] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.008825] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:248:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kfirst\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.008852] (my_robot_motion_planning) StderrLine: {'line': b'  248 |         normalized_namespace + element.\x1b[01;31m\x1b[Kfirst\x1b[m\x1b[K,\n'}
[2.008877] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.008901] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:249:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.008927] (my_robot_motion_planning) StderrLine: {'line': b'  249 |         element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K,\n'}
[2.008951] (my_robot_motion_planning) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.008977] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_RealType> rclcpp::Node::declare_parameters(const string&, const std::map<std::__cxx11::basic_string<char>, std::pair<ParameterT, rcl_interfaces::msg::ParameterDescriptor_<std::allocator<void> > > >&, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.009007] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:271:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.009037] (my_robot_motion_planning) StderrLine: {'line': b'  271 |     [this, &normalized_namespace, ignore_overrides](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K element) {\n'}
[2.009070] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.009099] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.009127] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:274:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kfirst\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.009166] (my_robot_motion_planning) StderrLine: {'line': b'  274 |           normalized_namespace + element.\x1b[01;31m\x1b[Kfirst\x1b[m\x1b[K,\n'}
[2.009195] (my_robot_motion_planning) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.009241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:275:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.009274] (my_robot_motion_planning) StderrLine: {'line': b'  275 |           element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K.first,\n'}
[2.009308] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.009339] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:276:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksecond\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kelement\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.009369] (my_robot_motion_planning) StderrLine: {'line': b'  276 |           element.\x1b[01;31m\x1b[Ksecond\x1b[m\x1b[K.second,\n'}
[2.009396] (my_robot_motion_planning) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.046251] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/describe_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.046386] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:28\x1b[m\x1b[K,\n'}
[2.046418] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.046443] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.046466] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.046491] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.046517] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.046539] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.046561] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.046585] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.046608] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::DescribeParameters_Request>()\n'}
[2.046630] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.046659] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.048129] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/describe_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.048200] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:28\x1b[m\x1b[K,\n'}
[2.048230] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.048254] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.048278] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.048304] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.048326] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.048348] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.048375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.048397] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::DescribeParameters_Response>()\n'}
[2.048421] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.048443] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/describe_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.051755] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/get_parameter_types.hpp:8\x1b[m\x1b[K,\n'}
[2.051832] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:29\x1b[m\x1b[K,\n'}
[2.051863] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.051887] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.051910] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.051941] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.051964] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.052120] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.052166] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.052193] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameterTypes_Request>()\n'}
[2.052218] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.052241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.052267] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.052290] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.052313] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.052334] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.052357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.052378] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameterTypes_Response>()\n'}
[2.052400] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.052421] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameter_types__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.055380] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/get_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.055455] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:30\x1b[m\x1b[K,\n'}
[2.055485] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.055510] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.055534] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.055562] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.055584] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.055606] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.055629] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.055654] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameters_Request>()\n'}
[2.055678] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.055701] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.057239] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.057306] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.057335] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.057359] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.057386] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.057410] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::GetParameters_Response>()\n'}
[2.057439] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.057461] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/get_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.061124] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.061192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:31\x1b[m\x1b[K,\n'}
[2.061229] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.061256] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.061281] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.061308] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.061448] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.061504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.061534] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.061559] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::ListParameters_Request>()\n'}
[2.061584] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.061606] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.061630] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:103:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.061660] (my_robot_motion_planning) StderrLine: {'line': b'  103 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.061683] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.061705] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:103:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.061728] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:107:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.061750] (my_robot_motion_planning) StderrLine: {'line': b'  107 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::ListParameters_Response>()\n'}
[2.061772] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.061796] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__builder.hpp:107:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066343] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/set_parameters.hpp:8\x1b[m\x1b[K,\n'}
[2.066435] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:32\x1b[m\x1b[K,\n'}
[2.066465] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.066490] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.066514] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.066540] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.066563] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.066585] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066609] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.066632] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParameters_Request>()\n'}
[2.066654] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.066676] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.068230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.068305] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.068334] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.068357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.068383] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.068406] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParameters_Response>()\n'}
[2.068429] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.068453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.071638] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/set_parameters_atomically.hpp:8\x1b[m\x1b[K,\n'}
[2.071713] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:33\x1b[m\x1b[K,\n'}
[2.071742] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:159\x1b[m\x1b[K,\n'}
[2.071767] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.071790] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.071816] (my_robot_motion_planning) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.071839] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.071861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.072024] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.072065] (my_robot_motion_planning) StderrLine: {'line': b'   49 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParametersAtomically_Request>()\n'}
[2.072093] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.072117] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.072141] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.072165] (my_robot_motion_planning) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.072188] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.072210] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:87:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.072233] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.072256] (my_robot_motion_planning) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::rcl_interfaces::srv::SetParametersAtomically_Response>()\n'}
[2.072279] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.072300] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcl_interfaces/rcl_interfaces/srv/detail/set_parameters_atomically__builder.hpp:91:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.078048] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.078136] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.078166] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.078191] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.078214] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.078236] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.078258] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.078280] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.078307] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.078330] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.078352] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.078374] (my_robot_motion_planning) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.078398] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:423:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.078421] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_client.hpp:208:69:\x1b[m\x1b[K   required from here\n'}
[2.078443] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:971:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.078467] (my_robot_motion_planning) StderrLine: {'line': b'  971 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K()\n'}
[2.078489] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.078510] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:977:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.078533] (my_robot_motion_planning) StderrLine: {'line': b'  977 |   \x1b[01;31m\x1b[Kget_variant\x1b[m\x1b[K() const\n'}
[2.078554] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.078575] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:987:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Kvariant_type\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::detail::AnySubscriptionCallbackHelper<rcl_interfaces::msg::ParameterEvent_<std::allocator<void> >, std::allocator<void>, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.078600] (my_robot_motion_planning) StderrLine: {'line': b'  987 |   typename HelperT::variant_type \x1b[01;31m\x1b[Kcallback_variant_\x1b[m\x1b[K;\n'}
[2.078621] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.104086] (-) TimerEvent: {}
[2.204443] (-) TimerEvent: {}
[2.304786] (-) TimerEvent: {}
[2.323619] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:31\x1b[m\x1b[K,\n'}
[2.323757] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.323799] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.323824] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.323848] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::detail::StoragePolicyCommon<HasStrongOwnership>::storage_rebuild_rcl_wait_set_with_sets(const SubscriptionsIterable&, const GuardConditionsIterable&, const ExtraGuardConditionsIterable&, const TimersIterable&, const ClientsIterable&, const ServicesIterable&, const WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.323885] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:271:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323910] (my_robot_motion_planning) StderrLine: {'line': b'  271 |       [this](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner_guard_conditions)\n'}
[2.323934] (my_robot_motion_planning) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323957] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.323980] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:273:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.324005] (my_robot_motion_planning) StderrLine: {'line': b'  273 |         for (const auto & guard_condition : \x1b[01;31m\x1b[Kinner_guard_conditions\x1b[m\x1b[K) {\n'}
[2.324026] (my_robot_motion_planning) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.324048] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/detail/storage_policy_common.hpp:273:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kthere are no arguments to \xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 that depend on a template parameter, so a declaration of \xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 must be available [\x1b[01;31m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive\x07-fpermissive\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.324985] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.325052] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.325082] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.325106] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.325131] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:231:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstorage_find_entity\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.325163] (my_robot_motion_planning) StderrLine: {'line': b'  231 |   \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K\n'}
[2.325186] (my_robot_motion_planning) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.325214] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:231:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.333861] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.333968] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.334007] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       [&entity](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner) {return &entity == inner.lock().get();});\n'}
[2.334035] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.334059] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.334083] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kinner\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.334109] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       [&entity](const auto & inner) {return &entity == inner.\x1b[01;31m\x1b[Klock\x1b[m\x1b[K().get();});\n'}
[2.334132] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.334154] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.334178] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.334202] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       [&entity](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & inner) {return &entity == inner.lock().get();});\n'}
[2.334225] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.334249] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.334271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Klock\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kinner\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.334294] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       [&entity](const auto & inner) {return &entity == inner.\x1b[01;31m\x1b[Klock\x1b[m\x1b[K().get();});\n'}
[2.334316] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.340871] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.340961] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.340993] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptr) {\n'}
[2.341018] (my_robot_motion_planning) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.341042] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.341065] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:382:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kexpired\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptr\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.341090] (my_robot_motion_planning) StderrLine: {'line': b'  382 |         return weak_ptr.\x1b[01;31m\x1b[Kexpired\x1b[m\x1b[K();\n'}
[2.341113] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.341297] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.341361] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.341393] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptrs, auto & shared_ptrs) {\n'}
[2.341418] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.341441] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.341470] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = [](const auto & weak_ptrs, \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[2.341495] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.341518] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.341543] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:403:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kresize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kshared_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.341566] (my_robot_motion_planning) StderrLine: {'line': b'  403 |         shared_ptrs.\x1b[01;31m\x1b[Kresize\x1b[m\x1b[K(weak_ptrs.size());\n'}
[2.341589] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.341611] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:403:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.341635] (my_robot_motion_planning) StderrLine: {'line': b'  403 |         shared_ptrs.resize(weak_ptrs.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K());\n'}
[2.341658] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.342293] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.342362] (my_robot_motion_planning) StderrLine: {'line': b'  405 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[2.342393] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.342419] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[2.342444] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.342468] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.342490] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.342514] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.342537] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[2.342560] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.342590] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.343024] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.343094] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.343126] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.343402] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.343436] (my_robot_motion_planning) StderrLine: {'line': b'  405 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[2.343463] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.343487] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:405:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.343510] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.343533] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.343558] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.343581] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.343603] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.343740] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.343783] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.343810] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.343834] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.343861] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.343888] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.343913] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.343940] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.343969] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[2.344221] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.344268] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.344295] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.344323] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.344346] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:406:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid types \xe2\x80\x98\x1b[01m\x1b[Kint[size_t {aka long unsigned int}]\x1b[m\x1b[K\xe2\x80\x99 for array subscript\n'}
[2.344373] (my_robot_motion_planning) StderrLine: {'line': b'  406 |           shared_ptrs\x1b[01;31m\x1b[K[\x1b[m\x1b[Kindex++] = weak_ptr.lock();\n'}
[2.344401] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.344427] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.344453] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakGuardConditions&, rclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344479] (my_robot_motion_planning) StderrLine: {'line': b'  410 |     \x1b[01;31m\x1b[Klock_all(guard_conditions_, shared_guard_conditions_)\x1b[m\x1b[K;\n'}
[2.344504] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.344527] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.344552] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:410:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[2.344614] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344639] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[2.344663] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.344686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakGuardConditions\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::GuardCondition> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344713] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakTimers&, rclcpp::wait_set_policies::DynamicStorage::TimersIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344825] (my_robot_motion_planning) StderrLine: {'line': b'  411 |     \x1b[01;31m\x1b[Klock_all(timers_, shared_timers_)\x1b[m\x1b[K;\n'}
[2.344852] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.344878] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.344904] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:411:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[2.344928] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.344952] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[2.344976] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.344999] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakTimers\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::TimerBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345102] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakClients&, rclcpp::wait_set_policies::DynamicStorage::ClientsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345128] (my_robot_motion_planning) StderrLine: {'line': b'  412 |     \x1b[01;31m\x1b[Klock_all(clients_, shared_clients_)\x1b[m\x1b[K;\n'}
[2.345152] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.345175] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.345199] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:412:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[2.345230] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345465] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[2.345501] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.345528] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakClients\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::ClientBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345565] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakServices&, rclcpp::wait_set_policies::DynamicStorage::ServicesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345592] (my_robot_motion_planning) StderrLine: {'line': b'  413 |     \x1b[01;31m\x1b[Klock_all(services_, shared_services_)\x1b[m\x1b[K;\n'}
[2.345617] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.345641] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.345667] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:413:13:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[2.345692] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345717] (my_robot_motion_planning) StderrLine: {'line': b'  402 |     auto lock_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[2.345742] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.345765] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:402:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakServices\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::weak_ptr<rclcpp::ServiceBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345791] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345815] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = [](const \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & weak_ptrs, auto & shared_ptrs) {\n'}
[2.345841] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.345864] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345888] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = [](const auto & weak_ptrs, \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[2.345913] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.345936] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.345961] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:417:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kresize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kshared_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.345985] (my_robot_motion_planning) StderrLine: {'line': b'  417 |         shared_ptrs.\x1b[01;31m\x1b[Kresize\x1b[m\x1b[K(weak_ptrs.size());\n'}
[2.346009] (my_robot_motion_planning) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.346038] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:417:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Ksize\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kweak_ptrs\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.346063] (my_robot_motion_planning) StderrLine: {'line': b'  417 |         shared_ptrs.resize(weak_ptrs.\x1b[01;31m\x1b[Ksize\x1b[m\x1b[K());\n'}
[2.346088] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.346113] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.346248] (my_robot_motion_planning) StderrLine: {'line': b'  419 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[2.346309] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.346340] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[2.346367] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.346392] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.346417] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.346442] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.346472] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[2.346496] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.346519] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.346541] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.346564] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.346588] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.346610] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.346636] (my_robot_motion_planning) StderrLine: {'line': b'  419 |         for (const auto & weak_ptr : \x1b[01;31m\x1b[Kweak_ptrs\x1b[m\x1b[K) {\n'}
[2.346659] (my_robot_motion_planning) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.346682] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:419:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.346705] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.346728] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.346751] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.346773] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.346796] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.346818] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.346841] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.346863] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.346885] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.346908] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.346930] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.346952] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.346975] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347003] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[2.347028] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.347051] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.347075] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.347098] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.347120] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:420:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid types \xe2\x80\x98\x1b[01m\x1b[Kint[size_t {aka long unsigned int}]\x1b[m\x1b[K\xe2\x80\x99 for array subscript\n'}
[2.347144] (my_robot_motion_planning) StderrLine: {'line': b'  420 |           shared_ptrs\x1b[01;31m\x1b[K[\x1b[m\x1b[Kindex++] = WaitableEntry{\n'}
[2.347167] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.347190] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:422:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(<brace-enclosed initializer list>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347217] (my_robot_motion_planning) StderrLine: {'line': b'  422 |             weak_ptr.associated_entity.lock()\x1b[01;31m\x1b[K}\x1b[m\x1b[K;\n'}
[2.347240] (my_robot_motion_planning) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.347263] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:119:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(std::shared_ptr<rclcpp::Waitable>, std::shared_ptr<void>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347288] (my_robot_motion_planning) StderrLine: {'line': b'  119 |     \x1b[01;36m\x1b[KWaitableEntry\x1b[m\x1b[K(\n'}
[2.347312] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.347334] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:119:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 1 would be ill-formed:\n'}
[2.347357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(const rclcpp::wait_set_policies::DynamicStorage::WaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347381] (my_robot_motion_planning) StderrLine: {'line': b'  112 |   class \x1b[01;36m\x1b[KWaitableEntry\x1b[m\x1b[K\n'}
[2.347403] (my_robot_motion_planning) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.347426] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[2.347449] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitableEntry::WaitableEntry(rclcpp::wait_set_policies::DynamicStorage::WaitableEntry&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347474] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:112:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[2.347498] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.347521] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>) (rclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakWaitables&, rclcpp::wait_set_policies::DynamicStorage::WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347546] (my_robot_motion_planning) StderrLine: {'line': b'  425 |     \x1b[01;31m\x1b[Klock_all_waitables(waitables_, shared_waitables_)\x1b[m\x1b[K;\n'}
[2.347569] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.347592] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const int&, int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.347615] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:425:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 3 provided\n'}
[2.347637] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_acquire_ownerships()::<lambda(const int&, int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347660] (my_robot_motion_planning) StderrLine: {'line': b'  416 |     auto lock_all_waitables = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptrs, auto & shared_ptrs) {\n'}
[2.347687] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.347710] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:416:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::SequenceOfWeakWaitables\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347736] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.347760] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 in lambda parameter declaration only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.347787] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = [](\x1b[01;31m\x1b[Kauto\x1b[m\x1b[K & shared_ptrs) {\n'}
[2.347810] (my_robot_motion_planning) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.347833] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In lambda function:\n'}
[2.347855] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbegin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.347879] (my_robot_motion_planning) StderrLine: {'line': b'  437 |         for (auto & shared_ptr : \x1b[01;31m\x1b[Kshared_ptrs\x1b[m\x1b[K) {\n'}
[2.347901] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.347924] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[32m\x1b[Kstd::begin\x1b[m\x1b[K\n'}
[2.347946] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.347968] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.347990] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.348012] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.348034] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1228:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::begin\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[2.348058] (my_robot_motion_planning) StderrLine: {'line': b' 1228 |     \x1b[01;36m\x1b[Kbegin\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.348080] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.348103] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.348126] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.348149] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.348171] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.348195] (my_robot_motion_planning) StderrLine: {'line': b'  437 |         for (auto & shared_ptr : \x1b[01;31m\x1b[Kshared_ptrs\x1b[m\x1b[K) {\n'}
[2.348219] (my_robot_motion_planning) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.348242] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:437:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[2.348265] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:47\x1b[m\x1b[K,\n'}
[2.348289] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.348312] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.348335] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.348357] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/valarray:1255:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348380] (my_robot_motion_planning) StderrLine: {'line': b' 1255 |     \x1b[01;36m\x1b[Kend\x1b[m\x1b[K(const valarray<_Tp>& __va) noexcept\n'}
[2.348403] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.348426] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:265\x1b[m\x1b[K,\n'}
[2.348449] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/ProjectionEvaluator.h:49\x1b[m\x1b[K,\n'}
[2.348472] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/StateSpace.h:43\x1b[m\x1b[K,\n'}
[2.348494] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/ompl-1.6/ompl/base/SpaceInformation.h:43\x1b[m\x1b[K,\n'}
[2.348517] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:3\x1b[m\x1b[K:\n'}
[2.348540] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/util/IndexedViewHelper.h:181:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[KEigen::placeholders::end\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348564] (my_robot_motion_planning) StderrLine: {'line': b'  181 |   EIGEN_DEPRECATED static const end_t  \x1b[01;36m\x1b[Kend\x1b[m\x1b[K  = Eigen::lastp1; // PLEASE use Eigen::lastp1 instead of Eigen::placeholders::end\n'}
[2.348589] (my_robot_motion_planning) StderrLine: {'line': b'      |                                        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.348612] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.348635] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.348658] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.348682] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.348705] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348729] (my_robot_motion_planning) StderrLine: {'line': b'  441 |     \x1b[01;31m\x1b[Kreset_all(shared_guard_conditions_)\x1b[m\x1b[K;\n'}
[2.348752] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.348776] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.348804] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:441:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[2.348827] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348850] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[2.348874] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.348897] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::GuardConditionsIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::GuardCondition> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348922] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::TimersIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.348946] (my_robot_motion_planning) StderrLine: {'line': b'  442 |     \x1b[01;31m\x1b[Kreset_all(shared_timers_)\x1b[m\x1b[K;\n'}
[2.348969] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.348992] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.349016] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:442:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[2.349038] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349060] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[2.349083] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.349106] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::TimersIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::TimerBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349131] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::ClientsIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349158] (my_robot_motion_planning) StderrLine: {'line': b'  443 |     \x1b[01;31m\x1b[Kreset_all(shared_clients_)\x1b[m\x1b[K;\n'}
[2.349182] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.349216] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.349245] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:443:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[2.349271] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349294] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[2.349317] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.349341] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::ClientsIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::ClientBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349370] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::ServicesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349394] (my_robot_motion_planning) StderrLine: {'line': b'  444 |     \x1b[01;31m\x1b[Kreset_all(shared_services_)\x1b[m\x1b[K;\n'}
[2.349417] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.349440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.349463] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:444:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[2.349486] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349509] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[2.349532] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.349556] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::ServicesIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::shared_ptr<rclcpp::ServiceBase> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349579] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>) (rclcpp::wait_set_policies::DynamicStorage::WaitablesIterable&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349602] (my_robot_motion_planning) StderrLine: {'line': b'  445 |     \x1b[01;31m\x1b[Kreset_all(shared_waitables_)\x1b[m\x1b[K;\n'}
[2.349626] (my_robot_motion_planning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.349649] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(int&)\x1b[m\x1b[K\xe2\x80\x99 (conversion)\n'}
[2.349673] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:445:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 2 provided\n'}
[2.349697] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_release_ownerships()::<lambda(int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349720] (my_robot_motion_planning) StderrLine: {'line': b'  436 |     auto reset_all = \x1b[01;36m\x1b[K[\x1b[m\x1b[K](auto & shared_ptrs) {\n'}
[2.349742] (my_robot_motion_planning) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.349764] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:436:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WaitablesIterable\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<rclcpp::wait_set_policies::DynamicStorage::WaitableEntry>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349788] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/sequential_synchronization.hpp:32\x1b[m\x1b[K,\n'}
[2.349813] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:26\x1b[m\x1b[K,\n'}
[2.349836] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.349860] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.349882] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_result.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Krclcpp::WaitResult<WaitSetT>::WaitResult(rclcpp::WaitResult<WaitSetT>&&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.349906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_result.hpp:127:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kexchange\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.349930] (my_robot_motion_planning) StderrLine: {'line': b'  127 |     wait_set_pointer_(std::\x1b[01;31m\x1b[Kexchange\x1b[m\x1b[K(other.wait_set_pointer_, nullptr))\n'}
[2.349953] (my_robot_motion_planning) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.362977] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/path.hpp:8\x1b[m\x1b[K,\n'}
[2.363093] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:13\x1b[m\x1b[K:\n'}
[2.363126] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.363153] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.363180] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.363206] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.363228] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.363253] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.363277] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::nav_msgs::msg::Path>()\n'}
[2.363302] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.363324] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/nav_msgs/nav_msgs/msg/detail/path__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.377505] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.377601] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:38\x1b[m\x1b[K,\n'}
[2.377632] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.377658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.377686] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.377710] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.377741] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.377766] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.377790] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PointStamped>()\n'}
[2.377814] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.377836] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.379220] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/quaternion_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.379284] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:39\x1b[m\x1b[K,\n'}
[2.379317] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.379342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.379368] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.379393] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.379415] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.379440] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.379463] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::QuaternionStamped>()\n'}
[2.379484] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.379506] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/quaternion_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.381007] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/transform.hpp:8\x1b[m\x1b[K,\n'}
[2.381071] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:40\x1b[m\x1b[K,\n'}
[2.381101] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.381126] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.381152] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.381177] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.381201] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.381236] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.381262] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Transform>()\n'}
[2.381286] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.381310] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.384148] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/transform_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.384213] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:41\x1b[m\x1b[K,\n'}
[2.384245] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.384270] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.384297] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.384321] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.384345] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.384375] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.384400] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::TransformStamped>()\n'}
[2.384425] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.384447] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/transform_stamped__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.385486] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/vector3.hpp:8\x1b[m\x1b[K,\n'}
[2.385551] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:42\x1b[m\x1b[K,\n'}
[2.385580] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.385604] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.385639] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.385663] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.385686] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.385710] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.385733] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Vector3>()\n'}
[2.385756] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.385777] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.386432] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/vector3_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.386494] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:43\x1b[m\x1b[K,\n'}
[2.386523] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.386552] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.386581] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.386604] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.386643] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.386667] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.386691] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Vector3Stamped>()\n'}
[2.386715] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.386738] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/vector3_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.387650] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose.hpp:8\x1b[m\x1b[K,\n'}
[2.387711] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:44\x1b[m\x1b[K,\n'}
[2.387741] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.387892] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.387935] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.387961] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.387984] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.388013] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.388037] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Pose>()\n'}
[2.388062] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.388084] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.388107] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point.hpp:8\x1b[m\x1b[K,\n'}
[2.388129] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:45\x1b[m\x1b[K,\n'}
[2.388152] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.388173] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.388197] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.388219] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.388241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.388264] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.388285] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Point>()\n'}
[2.388307] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.388328] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.388630] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/point32.hpp:8\x1b[m\x1b[K,\n'}
[2.388693] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:46\x1b[m\x1b[K,\n'}
[2.388722] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.388748] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.388774] (my_robot_motion_planning) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.388798] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.388825] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:77:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.388848] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.388871] (my_robot_motion_planning) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Point32>()\n'}
[2.388893] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.388914] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/point32__builder.hpp:81:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.390315] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.390378] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:47\x1b[m\x1b[K,\n'}
[2.390408] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.390434] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.390465] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.390489] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.390513] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.390538] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.390561] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseStamped>()\n'}
[2.390584] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.390606] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.391421] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_with_covariance.hpp:8\x1b[m\x1b[K,\n'}
[2.391493] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:48\x1b[m\x1b[K,\n'}
[2.391526] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.391553] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.391581] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.391606] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.391631] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.391657] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.391683] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseWithCovariance>()\n'}
[2.391708] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.391731] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.393462] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/pose_with_covariance_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.393528] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:49\x1b[m\x1b[K,\n'}
[2.393557] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.393582] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.393610] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.393634] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.393658] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.393688] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.393712] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PoseWithCovarianceStamped>()\n'}
[2.393736] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.393761] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/pose_with_covariance_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.397324] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/polygon_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.397399] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:50\x1b[m\x1b[K,\n'}
[2.397429] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.397454] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.397479] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.397502] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.397524] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.397549] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.397571] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::PolygonStamped>()\n'}
[2.397598] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.397620] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/polygon_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.400498] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/wrench.hpp:8\x1b[m\x1b[K,\n'}
[2.400568] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:51\x1b[m\x1b[K,\n'}
[2.400603] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.400629] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.400657] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.400680] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.400704] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.400729] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.400752] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::Wrench>()\n'}
[2.400775] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.400797] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.402452] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/wrench_stamped.hpp:8\x1b[m\x1b[K,\n'}
[2.402534] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_geometry_msgs/tf2_geometry_msgs/tf2_geometry_msgs.hpp:52\x1b[m\x1b[K,\n'}
[2.402564] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:15\x1b[m\x1b[K:\n'}
[2.402590] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.402618] (my_robot_motion_planning) StderrLine: {'line': b'   61 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build();\n'}
[2.402641] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.402664] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:61:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.402695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbuild\x1b[m\x1b[K\xe2\x80\x99 function uses \xe2\x80\x98\x1b[01m\x1b[Kauto\x1b[m\x1b[K\xe2\x80\x99 type specifier without trailing return type\n'}
[2.402720] (my_robot_motion_planning) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[Kauto\x1b[m\x1b[K build<::geometry_msgs::msg::WrenchStamped>()\n'}
[2.402744] (my_robot_motion_planning) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.402767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/geometry_msgs/geometry_msgs/msg/detail/wrench_stamped__builder.hpp:65:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeduced return type only available with \xe2\x80\x98\x1b[01m\x1b[K-std=c++14\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K-std=gnu++14\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.404942] (-) TimerEvent: {}
[2.441527] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid plan(const SharedPtr&, const SharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.441770] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.441803] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<nav_msgs::msg::Path>();\n'}
[2.441829] (my_robot_motion_planning) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.441853] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.441877] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441900] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::make_unique<nav_msgs::msg::Path\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[2.441923] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.441946] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:128:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.441976] (my_robot_motion_planning) StderrLine: {'line': b'  128 |         auto path_msg = std::make_unique<nav_msgs::msg::Path>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.442000] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.444451] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:55:115:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Knode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.444540] (my_robot_motion_planning) StderrLine: {'line': b'   55 |  void plan(const rclcpp::Publisher<nav_msgs::msg::Path>::SharedPtr& path_publisher,\x1b[01;35m\x1b[Kconst rclcpp::Node::SharedPtr& node\x1b[m\x1b[K)\n'}
[2.444571] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                                    \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~\x1b[m\x1b[K\n'}
[2.446741] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid planWithSimpleSetup(const SharedPtr&, const SharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.446817] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmake_unique\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.446856] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::\x1b[01;31m\x1b[Kmake_unique\x1b[m\x1b[K<nav_msgs::msg::Path>();\n'}
[2.446882] (my_robot_motion_planning) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.446906] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::make_unique\x1b[m\x1b[K\xe2\x80\x99 is only available from C++14 onwards\n'}
[2.446929] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.446952] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::make_unique<nav_msgs::msg::Path\x1b[01;31m\x1b[K>\x1b[m\x1b[K();\n'}
[2.446975] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.446996] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:206:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.447018] (my_robot_motion_planning) StderrLine: {'line': b'  206 |          auto path_msg = std::make_unique<nav_msgs::msg::Path>(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.447040] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.447061] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:211:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kompl::geometric::PathGeometric\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.447092] (my_robot_motion_planning) StderrLine: {'line': b'  211 |          for (std::size_t i = 0; i < solution_path\x1b[01;31m\x1b[K->\x1b[m\x1b[KgetStateCount(); ++i)\n'}
[2.447114] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.447136] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:213:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kompl::geometric::PathGeometric\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.447158] (my_robot_motion_planning) StderrLine: {'line': b'  213 |             const ob::State* state = solution_path\x1b[01;31m\x1b[K->\x1b[m\x1b[KgetState(i);\n'}
[2.447180] (my_robot_motion_planning) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[2.505138] (-) TimerEvent: {}
[2.605468] (-) TimerEvent: {}
[2.705786] (-) TimerEvent: {}
[2.727803] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.728006] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.728045] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.728075] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.728104] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.728276] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.728454] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.728500] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.728530] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.728566] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:386:21:\x1b[m\x1b[K   required from here\n'}
[2.728726] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.728777] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.728806] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.728833] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.728860] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.728886] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.728910] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.728937] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[2.728962] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.728986] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729012] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.729040] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.729066] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.729136] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.729160] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.729183] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.729217] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.729245] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729284] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729318] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:388:33:\x1b[m\x1b[K   required from here\n'}
[2.729342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729369] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.729397] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.729420] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.729443] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.729466] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.729490] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729517] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[2.729540] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.729562] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729586] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.729609] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.729631] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.729654] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.729677] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.729699] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.729722] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.729747] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729775] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729801] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:389:34:\x1b[m\x1b[K   required from here\n'}
[2.729824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729849] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.729872] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.729895] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.729919] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.729942] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.729965] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.729989] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[2.730012] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.730036] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730060] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.730083] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.730106] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.730128] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.730151] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.730174] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.730197] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.730225] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730249] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730273] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:390:35:\x1b[m\x1b[K   required from here\n'}
[2.730295] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730322] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.730345] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.730368] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.730390] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.730413] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.730435] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730458] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[2.730481] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.730504] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730527] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.730550] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.730573] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.730596] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.730618] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.730641] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.730663] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.730692] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:822:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_ForwardIterator std::__remove_if(_ForwardIterator, _ForwardIterator, _Predicate) [with _ForwardIterator = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730717] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:894:30:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_FIter std::remove_if(_FIter, _FIter, _Predicate) [with _FIter = __gnu_cxx::__normal_iterator<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730744] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:391:36:\x1b[m\x1b[K   required from here\n'}
[2.730767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>) (rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730791] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.730813] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.730836] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.730859] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.730881] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.730904] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_prune_deleted_entities()::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.730928] (my_robot_motion_planning) StderrLine: {'line': b'  380 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K](const auto & weak_ptr) {\n'}
[2.730951] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.730973] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:380:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.772936] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.773058] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.773090] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.773116] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.773140] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.773163] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.773185] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.773241] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773269] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773300] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::SubscriptionBase; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773353] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:254:40:\x1b[m\x1b[K   required from here\n'}
[2.773376] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773402] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.773425] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.773447] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.773469] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.773491] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.773512] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773536] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.773558] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.773580] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.773784] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.773848] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.773878] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.773902] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.773926] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.773949] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.773972] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.774004] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774033] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774058] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774082] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::GuardCondition; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::GuardCondition> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774106] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:275:40:\x1b[m\x1b[K   required from here\n'}
[2.774129] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774152] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.774174] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.774195] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.774217] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.774238] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.774259] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774283] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.774304] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.774325] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774645] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.774738] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.774767] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.774792] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.774818] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.774841] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.774863] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.774892] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774918] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774943] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774967] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::TimerBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::TimerBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.774990] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:296:40:\x1b[m\x1b[K   required from here\n'}
[2.775013] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775037] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.775060] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.775081] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.775103] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.775124] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.775145] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775171] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.775193] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.775214] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775501] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.775573] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.775605] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.775630] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.775654] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.775676] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.775698] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.775725] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775753] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775778] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775801] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ClientBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ClientBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775824] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:317:40:\x1b[m\x1b[K   required from here\n'}
[2.775847] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.775874] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.775900] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.775923] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.775945] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.775966] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.775988] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776011] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.776033] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.776054] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776391] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.776453] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.776482] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.776507] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.776532] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.776555] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.776579] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.776605] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776636] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776659] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776681] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ServiceBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ServiceBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776709] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:338:40:\x1b[m\x1b[K   required from here\n'}
[2.776731] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776754] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.776775] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.776796] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.776817] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.776839] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.776860] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.776886] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.776907] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.776928] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777372] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.777436] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.777465] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.777490] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.777514] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.777537] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.777560] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.777587] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777613] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777647] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777671] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:234:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic auto rclcpp::wait_set_policies::DynamicStorage::storage_find_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::Waitable; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777695] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:362:40:\x1b[m\x1b[K   required from here\n'}
[2.777719] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777742] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.777764] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.777786] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.777809] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.777830] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.777851] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_find_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.777873] (my_robot_motion_planning) StderrLine: {'line': b'  237 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.777896] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.777917] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:237:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805973] (-) TimerEvent: {}
[2.906342] (-) TimerEvent: {}
[2.908161] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.908275] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.908308] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.908335] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.908361] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.908386] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.908409] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.908454] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908496] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908523] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908552] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908577] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908787] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::SubscriptionBase; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908837] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:243:33:\x1b[m\x1b[K   required from here\n'}
[2.908877] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.908907] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.908933] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.908959] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.908985] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.909015] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.909040] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::SubscriptionBase, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry> >(const rclcpp::SubscriptionBase&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909069] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.909096] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.909122] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakSubscriptionEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909151] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.909178] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.909226] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.909259] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.909285] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.909324] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.909349] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.909376] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909412] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909818] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909870] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909900] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::GuardCondition>*, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909929] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::GuardCondition; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::GuardCondition> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.909955] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:265:33:\x1b[m\x1b[K   required from here\n'}
[2.909982] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::GuardCondition>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910011] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.910037] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.910063] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.910089] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.910115] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.910141] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::GuardCondition, std::vector<std::weak_ptr<rclcpp::GuardCondition> > >(const rclcpp::GuardCondition&, const std::vector<std::weak_ptr<rclcpp::GuardCondition> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910264] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.910293] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.910364] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::GuardCondition>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910395] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.910422] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.910500] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.910527] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.910554] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.910626] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.910651] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.910678] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910710] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910739] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910767] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910792] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::TimerBase>*, std::vector<std::weak_ptr<rclcpp::TimerBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910819] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::TimerBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::TimerBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910844] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:286:33:\x1b[m\x1b[K   required from here\n'}
[2.910870] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::TimerBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.910899] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.910923] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.910947] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.910971] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.910995] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.911018] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::TimerBase, std::vector<std::weak_ptr<rclcpp::TimerBase> > >(const rclcpp::TimerBase&, const std::vector<std::weak_ptr<rclcpp::TimerBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911047] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.911071] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.911095] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::TimerBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911121] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.911144] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.911168] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.911192] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.911216] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.911238] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.911261] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.911287] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911314] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911342] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911382] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911407] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ClientBase>*, std::vector<std::weak_ptr<rclcpp::ClientBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911432] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ClientBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ClientBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911458] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:307:33:\x1b[m\x1b[K   required from here\n'}
[2.911483] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ClientBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911512] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.911539] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.911567] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.911595] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.911621] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.911650] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ClientBase, std::vector<std::weak_ptr<rclcpp::ClientBase> > >(const rclcpp::ClientBase&, const std::vector<std::weak_ptr<rclcpp::ClientBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911678] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.911705] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.911734] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ClientBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911764] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.911793] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.911820] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.911848] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.911877] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.911904] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.911930] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.911963] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.911994] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912031] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912067] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912097] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const std::weak_ptr<rclcpp::ServiceBase>*, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912132] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::ServiceBase; SequenceOfEntitiesT = std::vector<std::weak_ptr<rclcpp::ServiceBase> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912162] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:328:33:\x1b[m\x1b[K   required from here\n'}
[2.912194] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>) (const std::weak_ptr<rclcpp::ServiceBase>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912226] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.912254] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.912286] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.912332] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.912367] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.912407] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::ServiceBase, std::vector<std::weak_ptr<rclcpp::ServiceBase> > >(const rclcpp::ServiceBase&, const std::vector<std::weak_ptr<rclcpp::ServiceBase> >&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912441] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.912473] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.912510] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::weak_ptr<rclcpp::ServiceBase>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912552] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:71\x1b[m\x1b[K,\n'}
[2.912582] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.912616] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/string:40\x1b[m\x1b[K,\n'}
[2.912650] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2/time.h:34\x1b[m\x1b[K,\n'}
[2.912680] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/ctime:42\x1b[m\x1b[K,\n'}
[2.912706] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:1\x1b[m\x1b[K:\n'}
[2.912732] (my_robot_motion_planning) StderrLine: {'line': b'/usr/include/c++/11/bits/predefined_ops.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.912761] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2069:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912789] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:2114:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912822] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:3910:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912854] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:471:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::none_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912884] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algo.h:490:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool std::any_of(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry*, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >; _Predicate = rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912912] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:223:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic bool rclcpp::wait_set_policies::DynamicStorage::storage_has_entity(const EntityT&, const SequenceOfEntitiesT&) [with EntityT = rclcpp::Waitable; SequenceOfEntitiesT = std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912939] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:351:33:\x1b[m\x1b[K   required from here\n'}
[2.912966] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/predefined_ops.h:318:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(rclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>) (const rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.912994] (my_robot_motion_planning) StderrLine: {'line': b'  318 |         { return bool(\x1b[01;31m\x1b[K_M_pred(*__it)\x1b[m\x1b[K); }\n'}
[2.913020] (my_robot_motion_planning) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[2.913046] (my_robot_motion_planning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set.hpp:25\x1b[m\x1b[K,\n'}
[2.913072] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:168\x1b[m\x1b[K,\n'}
[2.913103] (my_robot_motion_planning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/root/ros2_ws/src/mp.cpp:12\x1b[m\x1b[K:\n'}
[2.913133] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::wait_set_policies::DynamicStorage::storage_has_entity<rclcpp::Waitable, std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry> >(const rclcpp::Waitable&, const std::vector<rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry>&)::<lambda(const int&)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.913165] (my_robot_motion_planning) StderrLine: {'line': b'  226 |       \x1b[01;36m\x1b[K[\x1b[m\x1b[K&entity](const auto & inner) {return &entity == inner.lock().get();});\n'}
[2.913191] (my_robot_motion_planning) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.913236] (my_robot_motion_planning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/wait_set_policies/dynamic_storage.hpp:226:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::wait_set_policies::DynamicStorage::WeakWaitableEntry\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.006468] (-) TimerEvent: {}
[3.106787] (-) TimerEvent: {}
[3.166657] (my_robot_motion_planning) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/my_motion_planner.dir/build.make:76: CMakeFiles/my_motion_planner.dir/src/mp.cpp.o] Error 1\n'}
[3.166888] (my_robot_motion_planning) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/my_motion_planner.dir/all] Error 2\n'}
[3.167085] (my_robot_motion_planning) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.168612] (my_robot_motion_planning) CommandEnded: {'returncode': 2}
[3.207572] (-) TimerEvent: {}
[3.219061] (my_robot_motion_planning) JobEnded: {'identifier': 'my_robot_motion_planning', 'rc': 2}
[3.236047] (-) EventReactorShutdown: {}
